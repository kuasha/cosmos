# ------------------------------------------------- #
# Auto generated. Modification will be overwritten. #
# ------------------------------------------------- #

import base64

file_data_list=[
{
'name': '/.bowerrc', 'data': base64.b64decode('ewogICJkaXJlY3RvcnkiOiAiYXBwL2Jvd2VyX2NvbXBvbmVudHMiCn0=')
},
{
'name': '/LICENSE', 'data': base64.b64decode('VGhlIE1JVCBMaWNlbnNlCgpDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNCBHb29nbGUsIEluYy4gaHR0cDovL2FuZ3VsYXJqcy5vcmcKClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTgpUSEUgU09GVFdBUkUuCgo=')
},
{
'name': '/bower.json', 'data': base64.b64decode('ewogICJuYW1lIjogImNvc21vcy1hZG1pbi1wYW5lbCIsCiAgImRlc2NyaXB0aW9uIjogIkFkbWluIHBhbmVsIGZvciBjb3Ntb3MgZnJhbWV3b3JrIiwKICAidmVyc2lvbiI6ICIwLjAuMCIsCiAgImhvbWVwYWdlIjogImh0dHA6Ly9jb3Ntb3NmcmFtZXdvcmsuY29tIiwKICAibGljZW5zZSI6ICJNSVQiLAogICJwcml2YXRlIjogdHJ1ZSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFuZ3VsYXIiOiAiMS4yLngiLAogICAgImFuZ3VsYXItcm91dGUiOiAiMS4yLngiLAogICAgImFuZ3VsYXItbG9hZGVyIjogIjEuMi54IiwKICAgICJhbmd1bGFyLW1vY2tzIjogIn4xLjIueCIsCiAgICAiaHRtbDUtYm9pbGVycGxhdGUiOiAifjQuMy4wIiwKICAgICJhbmd1bGFyLWJvb3RzdHJhcCI6ICJ+MC4xMS54IiwKICAgICJhbmd1bGFyLXVpLXNvcnRhYmxlIjoifjAuMTIueCIsCiAgICAiYW5ndWxhci11aS1hY2UiOiJ+MC4xLngiLAogICAgImFuZ3VsYXItanNvbi1odW1hbiI6In4xLjIueCIKICB9Cn0K')
},
{
'name': '/app/index.html', 'data': base64.b64decode('PCFET0NUWVBFIGh0bWw+CjwhLS1baWYgbHQgSUUgN10+ICAgICAgPGh0bWwgbGFuZz0iZW4iIG5nLWFwcD0ibXlBcHAiIG5nLWNvbnRyb2xsZXI9IkFkbWluTWFpbkN0cmwiIGNsYXNzPSJuby1qcyBsdC1pZTkgbHQtaWU4IGx0LWllNyI+IDwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDddPiAgICAgICAgIDxodG1sIGxhbmc9ImVuIiBuZy1hcHA9Im15QXBwIiBuZy1jb250cm9sbGVyPSJBZG1pbk1haW5DdHJsIiBjbGFzcz0ibm8tanMgbHQtaWU5IGx0LWllOCI+IDwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDhdPiAgICAgICAgIDxodG1sIGxhbmc9ImVuIiBuZy1hcHA9Im15QXBwIiBuZy1jb250cm9sbGVyPSJBZG1pbk1haW5DdHJsIiBjbGFzcz0ibm8tanMgbHQtaWU5Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgZ3QgSUUgOF0+PCEtLT4gPGh0bWwgbGFuZz0iZW4iIG5nLWFwcD0ibXlBcHAiIG5nLWNvbnRyb2xsZXI9IkFkbWluTWFpbkN0cmwiIGNsYXNzPSJuby1qcyI+IDwhLS08IVtlbmRpZl0tLT4KCjxoZWFkPgogIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgogIDx0aXRsZT5Db3Ntb3MgQWRtaW4gQXBwPC90aXRsZT4KICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIj4KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYm93ZXJfY29tcG9uZW50cy9odG1sNS1ib2lsZXJwbGF0ZS9jc3Mvbm9ybWFsaXplLmNzcyI+CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJib3dlcl9jb21wb25lbnRzL2h0bWw1LWJvaWxlcnBsYXRlL2Nzcy9tYWluLmNzcyI+CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvYXBwLmNzcyIvPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9uZXRkbmEuYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4xLjEvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiAvPgogIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2h0bWw1LWJvaWxlcnBsYXRlL2pzL3ZlbmRvci9tb2Rlcm5penItMi42LjIubWluLmpzIj48L3NjcmlwdD4KICA8c3R5bGU+CiAgICAgIGJvZHkgewogICAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7CiAgICAgIH0KICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogICAgPCEtLWRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1pbnZlcnNlIG5hdmJhci1maXhlZC10b3AiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iLyI+Q29zbW9zIEZyYW1ld29yazwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iLyI+SG9tZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjL2xpc3RzLyI+TGlzdHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIy91c2VycyI+VXNlcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIy9yb2xlcyI+Um9sZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGkgbmctc2hvdz0ibG9nZ2VkSW4oKSI+IDxhIGhyZWY9Ii9sb2dvdXQvIj5Mb2dvdXQgW3t7dXNlck5hbWV9fV08L2E+IDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIG5nLXNob3c9IiFsb2dnZWRJbigpIj48YSBocmVmPSIvbG9naW4uaHRtbCI+TG9naW48L2E+PC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXYtLT4KICAgIDwhLS1baWYgbHQgSUUgN10+CiAgICA8cCBjbGFzcz0iYnJvd3NlaGFwcHkiPllvdSBhcmUgdXNpbmcgYW4gPHN0cm9uZz5vdXRkYXRlZDwvc3Ryb25nPiBicm93c2VyLiBQbGVhc2UgPGEgaHJlZj0iaHR0cDovL2Jyb3dzZWhhcHB5LmNvbS8iPnVwZ3JhZGUgeW91ciBicm93c2VyPC9hPiB0byBpbXByb3ZlIHlvdXIgZXhwZXJpZW5jZS48L3A+CiAgICA8IVtlbmRpZl0tLT4KCiAgICA8IS0tZGl2IGNsYXNzPSJjb250YWluZXIgdGhlbWUtc2hvd2Nhc2UiIHJvbGU9Im1haW4iLS0+CiAgICAgICAgICAgIDxkaXYgbmctdmlldz48L2Rpdj4KICAgIDwhLS0vZGl2LS0+CgogICAgPHNjcmlwdCBzcmM9Ii8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzEuMTEuMS9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL25ldGRuYS5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjEuMS9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL2NvZGUuanF1ZXJ5LmNvbS91aS8xLjEwLjMvanF1ZXJ5LXVpLmpzIj48L3NjcmlwdD4KCiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyL2FuZ3VsYXIuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImJvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1yb3V0ZS9hbmd1bGFyLXJvdXRlLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItYm9vdHN0cmFwL3VpLWJvb3RzdHJhcC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLWJvb3RzdHJhcC91aS1ib290c3RyYXAtdHBscy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLXVpLXNvcnRhYmxlL3NvcnRhYmxlLmpzIj48L3NjcmlwdD4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJib3dlcl9jb21wb25lbnRzL2FjZS1idWlsZHMvc3JjLW1pbi1ub2NvbmZsaWN0L2FjZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItdWktYWNlL3VpLWFjZS5qcyI+PC9zY3JpcHQ+CgogICAgPHNjcmlwdCBkYXRhLXJlcXVpcmU9ImxvZGFzaC5qc0AyLjQuMSIgZGF0YS1zZW12ZXI9IjIuNC4xIiBzcmM9Imh0dHA6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvbG9kYXNoLmpzLzIuNC4xL2xvZGFzaC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItanNvbi1odW1hbi9kaXN0L2FuZ3VsYXItanNvbi1odW1hbi5taW4uanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItanNvbi1odW1hbi9kaXN0L2FuZ3VsYXItanNvbi1odW1hbi5taW4uY3NzIiAvPgoKICAgIDxzY3JpcHQgc3JjPSJqcy91dGlscy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvYXBwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy9zZXJ2aWNlcy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvY29udHJvbGxlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2ZpbHRlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2RpcmVjdGl2ZXMuanMiPjwvc2NyaXB0PgoKPC9ib2R5Pgo8L2h0bWw+Cg==')
},
{
'name': '/app/login.html', 'data': base64.b64decode('PCFET0NUWVBFIGh0bWw+CjxodG1sIG5nLWFwcD0ibXlBcHAiPgo8aGVhZCBsYW5nPSJlbiI+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+TG9naW48L3RpdGxlPgo8L2hlYWQ+Cjxib2R5ICByb2xlPSJkb2N1bWVudCIgbmctY29udHJvbGxlcj0iQWRtaW5NYWluQ3RybCI+CiAgICA8ZGl2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWludmVyc2UgbmF2YmFyLWZpeGVkLXRvcCIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2YmFyLWJyYW5kIiBocmVmPSIvIj5Db3Ntb3MgRnJhbWV3b3JrPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSI+CiAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPjxhIGhyZWY9Ii8iPkhvbWU8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+PCEtLS8ubmF2LWNvbGxhcHNlIC0tPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciB0aGVtZS1zaG93Y2FzZSIgcm9sZT0ibWFpbiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJqdW1ib3Ryb24iPgogICAgICAgICAgICA8aDMgIG5nLXNob3c9IiFsb2dnZWRJbigpIj5Mb2dpbjwvaDM+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1zbWFsbCBidG4tcHJpbWFyeSIgaHJlZj0iL2xvZ2luL2dvb2dsZS8iPkdvb2dsZTwvYT4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXNtYWxsIGJ0bi1wcmltYXJ5IiBocmVmPSIvbG9naW4vZmFjZWJvb2tncmFwaC8iPkZhY2Vib29rPC9hPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tc21hbGwgYnRuLXByaW1hcnkiIGhyZWY9Ii9sb2dpbi9naXRodWIvIj5HaXRodWI8L2E+CiAgICAgICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSIvbG9naW4vb3BlbmlkLyIgbWV0aG9kPSJnZXQiPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbD5PcGVuaWQ8L2xhYmVsPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJvcGVuaWQub3BfZW5kcG9pbnQiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJMb2dpbiI+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8aHIgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxmb3JtIG5nLXNob3c9IiFsb2dnZWRJbigpIiByb2xlPSJmb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2xvZ2luLyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+VXNlciBuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InVzZXJuYW1lIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VybmFtZSIvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+UGFzc3dvcmQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJ1bnB3ZGxvZ2luIiB0eXBlPSJzdWJtaXQiIHZhbHVlPSJMb2dpbiIgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgLz4KICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgPGRpdiBuZy1zaG93PSJsb2dnZWRJbigpIj5XZWxjb21lPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJzdGF0dXMiPjwvZGl2PgogICAgPC9kaXY+CgogICAgPHNjcmlwdCBzcmM9Ii8vYWpheC5nb29nbGVhcGlzLmNvbS9hamF4L2xpYnMvanF1ZXJ5LzEuMTEuMS9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL25ldGRuYS5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjEuMS9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9uZXRkbmEuYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4xLjEvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiAvPgoKICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXIvYW5ndWxhci5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLXJvdXRlL2FuZ3VsYXItcm91dGUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImJvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1ib290c3RyYXAvdWktYm9vdHN0cmFwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItYm9vdHN0cmFwL3VpLWJvb3RzdHJhcC10cGxzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy91dGlscy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvYXBwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy9zZXJ2aWNlcy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvY29udHJvbGxlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2ZpbHRlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2RpcmVjdGl2ZXMuanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgc3JjPSIvL3Jhd2dpdGh1Yi5jb20vYW5ndWxhci11aS91aS1zb3J0YWJsZS9tYXN0ZXIvc3JjL3NvcnRhYmxlLmpzIj48L3NjcmlwdD4KPC9ib2R5Pgo8L2h0bWw+Cg==')
},
{
'name': '/app/js/serviceapi.js', 'data': base64.b64decode('LyoqCiAqIENyZWF0ZWQgYnkgTWFydWYgTWFuaXJ1enphbWFuIChtYXJ1Zm1AY29zbW9zZnJhbWV3b3JrLmNvbSkgb24gNi8xNC8xNC4KICovCgpmdW5jdGlvbiBwcm9jZXNzRXJyb3IoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKXsKICAgIGpRdWVyeSgiI3N0YXR1cyIpLmh0bWwoIjxoMz5FcnJvcjwvaDM+PGRpdj4iK2Vycm9yVGhyb3duKyI8L2Rpdj4iKTsKfQoKZnVuY3Rpb24gcHJvY2Vzc1N1Y2Nlc3MoZGF0YSl7CiAgICB2YXIgZGF0YTIgPSBKU09OLnBhcnNlKGRhdGEpOwogICAgalF1ZXJ5KCIjcmVzdWx0IikudmFsKEpTT04uc3RyaW5naWZ5KGRhdGEyLHVuZGVmaW5lZCwgMikpOwp9CgpmdW5jdGlvbiBnZXRTZXJ2aWNlVXJsKHNlcnZpY2UpIHsKICAgIHZhciByb290ID0gZG9jdW1lbnQuVVJMOwogICAgaWYoc2VydmljZVswXSA9PSAnLycpewogICAgICAgIHNlcnZpY2UgPSBzZXJ2aWNlLnN1YnN0cmluZygxKTsKICAgIH0KICAgIHJldHVybiByb290K3NlcnZpY2U7Cn0KCmZ1bmN0aW9uIGRvX29wZXJhdGlvbih1cmwsIG1ldGhvZCwgZGF0YSwgY2FsbGJhY2ssIGVycm9yX2NhbGxiYWNrKXsKICAgIGpRdWVyeSgiI3Jlc3VsdCIpLnZhbCgiIik7CiAgICBqUXVlcnkoIiNzdGF0dXMiKS5odG1sKCIiKTsKICAgIGNvbnNvbGUubG9nKG1ldGhvZCsgIjogIit1cmwpCiAgICAkLmFqYXgoewogICAgICAgIHVybDogdXJsLAogICAgICAgIHR5cGU6IG1ldGhvZCwKICAgICAgICBkYXRhOmRhdGEsCiAgICAgICAgc3VjY2VzczogY2FsbGJhY2ssCiAgICAgICAgZXJyb3I6IGVycm9yX2NhbGxiYWNrCiAgICB9KTsKfQoKZnVuY3Rpb24gaW5zZXJ0U2VydmljZSgpewogICAgdmFyIG5hbWUgPSBqUXVlcnkoIiNuYW1lIikudmFsKCk7CiAgICB2YXIgZGF0YSA9IGpRdWVyeSgiI2RhdGEiKS52YWwoKTsKCiAgICB2YXIgdXJsID0gIGdldFNlcnZpY2VVcmwobmFtZSk7CiAgICBkb19vcGVyYXRpb24odXJsLCAnUE9TVCcsIGRhdGEsIHByb2Nlc3NTdWNjZXNzLCBwcm9jZXNzRXJyb3IpOwp9CgpmdW5jdGlvbiBkZWxldGVJdGVtKCl7CiAgICB2YXIgbmFtZSA9IGpRdWVyeSgiI25hbWUiKS52YWwoKTsKICAgIHZhciBkYXRhID0galF1ZXJ5KCIjZGF0YSIpLnZhbCgpOwoKICAgIHZhciB1cmwgPSAgZ2V0U2VydmljZVVybChuYW1lKTsKCiAgICBkb19vcGVyYXRpb24odXJsLCAnREVMRVRFJywgZGF0YSwgcHJvY2Vzc1N1Y2Nlc3MsIHByb2Nlc3NFcnJvcik7Cn0KCmZ1bmN0aW9uIGxvYWRJdGVtKCl7CiAgICB2YXIgbmFtZSA9IGpRdWVyeSgiI25hbWUiKS52YWwoKTsKICAgIHZhciBkYXRhID0galF1ZXJ5KCIjZGF0YSIpLnZhbCgpOwogICAgdmFyIGNvbHVtbnMgPSBqUXVlcnkoIiNjb2x1bW5zIikudmFsKCk7CiAgICB2YXIgZmlsdGVyID0galF1ZXJ5KCIjZmlsdGVyIikudmFsKCk7CgogICAgdmFyIHVybCA9ICBnZXRTZXJ2aWNlVXJsKG5hbWUpOwogICAgaWYoY29sdW1ucyl7CiAgICAgICAgdXJsID0gdXJsKyI/IjsKICAgICAgICB1cmwgPXVybCsgImNvbHVtbnM9Iitjb2x1bW5zOwogICAgfQogICAgaWYoZmlsdGVyKXsKICAgICAgICBpZighY29sdW1ucykgewogICAgICAgICAgICB1cmwgPSB1cmwgKyAiPyI7CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIHVybD11cmwrIiYiOwogICAgICAgIH0KICAgICAgICB1cmwgPSB1cmwrImZpbHRlcj0iK2ZpbHRlcgogICAgfQoKICAgIGRvX29wZXJhdGlvbih1cmwsICdHRVQnLCBkYXRhLCBwcm9jZXNzU3VjY2VzcyAscHJvY2Vzc0Vycm9yKTsKfQoKZnVuY3Rpb24gdXBkYXRlSXRlbSgpewogICAgdmFyIG5hbWUgPSBqUXVlcnkoIiNuYW1lIikudmFsKCk7CiAgICB2YXIgZGF0YSA9IGpRdWVyeSgiI2RhdGEiKS52YWwoKTsKCiAgICB2YXIgdXJsID0gIGdldFNlcnZpY2VVcmwobmFtZSk7CgogICAgZG9fb3BlcmF0aW9uKHVybCwgJ1BVVCcsIGRhdGEsIHByb2Nlc3NTdWNjZXNzLCBwcm9jZXNzRXJyb3IpOwp9CgpmdW5jdGlvbiBzdWJzY3JpYmUgKG1vbml0b3JfZW5kcG9pbnQsIG9iamVjdF9uYW1lLCBjYWxsYmFjaykgewogICAgLy9UT0RPOiBVbmlmeSB0aGUgb2JzZXJ2ZXIgdG8gbGlzdGVuIHRvIG1hbnkgb2JqZWN0cyBhdCBhIHRpbWUgdXNpbmcgZGlmZmVyZW50IGNhbGxiYWNrCiAgICAvL3ZhciBtb25pdG9yX2VuZHBvaW50ID0gIndzOi8vbG9jYWxob3N0OjgwODAvY2hhbmdlbW9uaXRvciIKICAgIHZhciB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KG1vbml0b3JfZW5kcG9pbnQpOwogICAgdmFyIGZuID0gY2FsbGJhY2s7CiAgICB3ZWJzb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJTb2NrZXQgb3BlbmVkIik7CiAgICAgICAgd2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoeyJ0eXBlIjogIm1vbml0b3JfbnMiLCAibnMiOiBvYmplY3RfbmFtZX0pKQogICAgfQoKICAgIHdlYnNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgY29uc29sZS5sb2coIk9uIG1lc3NhZ2U6ICIgKyBldnQuZGF0YSk7CiAgICAgICAgaWYgKGZuKSB7CiAgICAgICAgICAgIGZuKGV2dC5kYXRhKTsKICAgICAgICAgICAgLyoKICAgICAgICAgICAgIC8vSW4gY2FsbGJhY2sgeW91IG1heSBkbyBzb21ldGhpbmcgbGlrZSAoYWxzbyBjb25zaWRlciB0aGUgZXZ0LmRhdGEgaWYgeW91IGFyZSBtb25pdG9yaW5nIG11bHRpcGxlIG9iamVjdHMuOgogICAgICAgICAgICAgJGh0dHAuZ2V0KCcvc2VydmljZS8nK29iamVjdF9uYW1lKycvJykuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAkc2NvcGUuZGF0YSA9IGRhdGE7CiAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICovCiAgICAgICAgfQoKICAgIH0KCiAgICB3ZWJzb2NrZXQub25jbG9zZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygiT24gY2xvc2VkIik7CiAgICB9Cn0=')
},
{
'name': '/app/js/app.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKCi8vIERlY2xhcmUgYXBwIGxldmVsIG1vZHVsZSB3aGljaCBkZXBlbmRzIG9uIGZpbHRlcnMsIGFuZCBzZXJ2aWNlcwp2YXIgbXlBcHAgPSBhbmd1bGFyLm1vZHVsZSgnbXlBcHAnLCBbCiAgICAnbmdSb3V0ZScsCiAgICAndWkuYm9vdHN0cmFwJywKICAgICdnZW4uZ2VuZXJpY0RpcmVjdGl2ZXMnLAogICAgJ3VpLnNvcnRhYmxlJywKICAgICd1aS5hY2UnLAogICAgJ3lhcnUyMi5qc29uSHVtYW4nLAogICAgJ215QXBwLmZpbHRlcnMnLAogICAgJ215QXBwLnNlcnZpY2VzJywKICAgICdteUFwcC5kaXJlY3RpdmVzJywKICAgICdteUFwcC5jb250cm9sbGVycycKXSkuCmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHsKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9ob21lJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvaG9tZS5odG1sJywgY29udHJvbGxlcjogJ0hvbWVDdHJsJ30pOwoKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9tZXNzYWdlJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvbWVzc2FnZS5odG1sJywgY29udHJvbGxlcjogJ01lc3NhZ2VWaWV3Q3RybCd9KTsKCiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvdXNlcnMnLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy91c2Vycy5odG1sJywgY29udHJvbGxlcjogJ1VzZXJzQ3RybCd9KTsKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9yb2xlcycsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL3JvbGVzLmh0bWwnLCBjb250cm9sbGVyOiAnUm9sZXNDdHJsJ30pOwogICAgJHJvdXRlUHJvdmlkZXIud2hlbignL2xpc3RzLzpsaXN0SWQvJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvd2lkZ2V0LWhvc3QuaHRtbCcsIGNvbnRyb2xsZXI6ICdMaXN0RGV0YWlsQ3RybCd9KTsKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9saXN0cy8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9saXN0Lmh0bWwnLCBjb250cm9sbGVyOiAnTGlzdEN0cmwnfSk7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvY29udGVudC8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy91cGxvYWRmaWxlLmh0bWwnLCBjb250cm9sbGVyOiAnRmlsZVVwbG9hZEN0cmwnfSk7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvZm9ybWRlc2lnbi86Zm9ybUlkPycsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2Zvcm0tZGVzaWduLmh0bWwnLCBjb250cm9sbGVyOiAnRm9ybURlc2lnbkNvbnRyb2xsZXInfSk7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvZm9ybXMvOmZvcm1JZD8vOmRhdGFJZD8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9mb3Jtdmlldy5odG1sJywgY29udHJvbGxlcjogJ0Zvcm1WaWV3Q3RybCd9KTsKCiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvcGFnZS86cGFnZUlkPycsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL3BhZ2UuaHRtbCcsIGNvbnRyb2xsZXI6ICdQYWdlVmlld0N0cmwnfSk7CgogICAgJHJvdXRlUHJvdmlkZXIub3RoZXJ3aXNlKHtyZWRpcmVjdFRvOiAnL2hvbWUnfSk7Cn1dKTsKCm15QXBwLmZhY3RvcnkoJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJGNhY2hlRmFjdG9yeSwgJGh0dHAsICRpbmplY3RvcikgewogICAgdmFyIGNhY2hlID0gJGNhY2hlRmFjdG9yeSgndGVtcGxhdGVzJyk7CiAgICB2YXIgd2lkZ2V0UHJvbWlzZTsKCiAgICByZXR1cm4gewogICAgICAgIGdldDogZnVuY3Rpb24odXJsKSB7CiAgICAgICAgICAgIHZhciBjYWNoZWQgPSBjYWNoZS5nZXQodXJsKTsKCiAgICAgICAgICAgIGlmIChjYWNoZWQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZWQ7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICghd2lkZ2V0UHJvbWlzZSkgewogICAgICAgICAgICAgICAgdmFyIHVyaT0nL3NlcnZpY2UvdXNlcmRhdGEud2lkZ2V0cy8nOwoKICAgICAgICAgICAgICAgIHdpZGdldFByb21pc2UgPSAkaHR0cC5nZXQodXJpKS50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlX2RhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlLmRhdGEuX2QpOwogICAgICAgICAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaCh0ZW1wbGF0ZV9kYXRhLCBmdW5jdGlvbiAoZGF0YSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRlbXBsYXRlID0gJzxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgaWQ9IicgKyBkYXRhLm5hbWUgKyAnIj4nICsgZGF0YS50ZW1wbGF0ZSArICc8L3NjcmlwdD4nOwogICAgICAgICAgICAgICAgICAgICAgICAkaW5qZWN0b3IuZ2V0KCckY29tcGlsZScpKHRlbXBsYXRlKTsKICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgdmFyIGNhY2hlZCA9IGNhY2hlLmdldCh1cmwpOwogICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgJGh0dHAuZ2V0KHVybCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB3aWRnZXRQcm9taXNlLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpewogICAgICAgICAgICAgICAgdmFyIGNhY2hlZCA9IGNhY2hlLmdldCh1cmwpOwogICAgICAgICAgICAgICAgaWYgKGNhY2hlZCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZWQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAvL0ZhbGxiYWNrIHRvIHJlcXVlc3QgdGhlIHNlcnZlcgogICAgICAgICAgICAgICAgcmV0dXJuICRodHRwLmdldCh1cmwpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KQogICAgICAgIH0sCgogICAgICAgIHB1dDogZnVuY3Rpb24oa2V5LCB2YWx1ZSkgewogICAgICAgICAgICBjYWNoZS5wdXQoa2V5LCB2YWx1ZSk7CiAgICAgICAgfQogICAgfTsKfSk7Cg==')
},
{
'name': '/app/js/directives.js', 'data': base64.b64decode('')
},
{
'name': '/app/js/services.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogU2VydmljZXMgKi8KCgphbmd1bGFyLm1vZHVsZSgnbXlBcHAuc2VydmljZXMnLCBbXSkKICAgIC5mYWN0b3J5KCdDb3Ntb3NTZXJ2aWNlJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGdldDogZnVuY3Rpb24odXJpLCBjYWxsYmFjaywgZXJyb3JfY2FsbGJhY2spewogICAgICAgICAgICAgICAgJGh0dHAuZ2V0KHVyaSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJldHVybmVkX2RhdGEgPSBkYXRhOwogICAgICAgICAgICAgICAgICAgIGlmKGRhdGEgJiYgZGF0YS5fY29zbW9zX3NlcnZpY2VfYXJyYXlfcmVzdWx0Xyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybmVkX2RhdGEgPSBKU09OLnBhcnNlKGRhdGEuX2QpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXR1cm5lZF9kYXRhKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKXsKICAgICAgICAgICAgICAgICAgICBpZihlcnJvcl9jYWxsYmFjaykgewogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9jYWxsYmFjayhkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwb3N0OiBmdW5jdGlvbih1cmksIGRhdGEsIGNhbGxiYWNrLCBlcnJvcl9jYWxsYmFjayl7CiAgICAgICAgICAgICAgICAkaHR0cC5wb3N0KHVyaSwgZGF0YSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJldHVybmVkX2RhdGEgPSBkYXRhOwogICAgICAgICAgICAgICAgICAgIGlmKGRhdGEgJiYgZGF0YS5fY29zbW9zX3NlcnZpY2VfYXJyYXlfcmVzdWx0Xyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybmVkX2RhdGEgPSBKU09OLnBhcnNlKGRhdGEuX2QpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXR1cm5lZF9kYXRhKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKXsKICAgICAgICAgICAgICAgICAgICBpZihlcnJvcl9jYWxsYmFjaykgewogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9jYWxsYmFjayhkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwdXQ6IGZ1bmN0aW9uKHVyaSwgZGF0YSwgY2FsbGJhY2ssIGVycm9yX2NhbGxiYWNrKXsKICAgICAgICAgICAgICAgICRodHRwLnB1dCh1cmksIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihkYXRhLCBzdGF0dXMpewogICAgICAgICAgICAgICAgICAgIGlmKGVycm9yX2NhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yX2NhbGxiYWNrKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlbGV0ZTogZnVuY3Rpb24odXJpLCBjYWxsYmFjaywgZXJyb3JfY2FsbGJhY2spewogICAgICAgICAgICAgICAgJGh0dHAuZGVsZXRlKHVyaSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cyl7CiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3JfY2FsbGJhY2spIHsKICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JfY2FsbGJhY2soZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9XSkKICAgIC52YWx1ZSgndmVyc2lvbicsICcwLjEnKQogICAgLmZhY3RvcnkoJ21lc3NhZ2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHsKICAgICAgICB2YXIgbXNncyA9IFtdOwogICAgICAgIHJldHVybnsKICAgICAgICAgICAgcHVzaDogZnVuY3Rpb24obXNnKSB7CiAgICAgICAgICAgICAgICBtc2dzLnB1c2gobXNnKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcG9wOiBmdW5jdGlvbigpewogICAgICAgICAgICAgICAgcmV0dXJuIG1zZ3Muc2hpZnQoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaGFzTWVzc2FnZTogZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIHJldHVybiAobXNncyAmJiBtc2dzLmxlbmd0aCA+MCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgfV0pCiAgICAuZmFjdG9yeSgnTmFtZWRDb2xsZWN0aW9uJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKSB7CiAgICAgICAgdmFyIGNvbGxlY3Rpb25zID0ge307CiAgICAgICAgcmV0dXJuewogICAgICAgICAgICBnZXRfY29sbGVjdGlvbjogZnVuY3Rpb24obmFtZSl7CiAgICAgICAgICAgICAgICB2YXIgb2JqZWN0cyA9IGNvbGxlY3Rpb25zW25hbWVdOwoKICAgICAgICAgICAgICAgIGlmKCFvYmplY3RzKXsKICAgICAgICAgICAgICAgICAgICBvYmplY3RzID0gW107CiAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbnNbbmFtZV0gPSBvYmplY3RzOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBvYmplY3RzOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgYXBwZW5kOiBmdW5jdGlvbihuYW1lLCBvYmplY3QpIHsKICAgICAgICAgICAgICAgIGlmKCFuYW1lIHx8ICFvYmplY3QpewogICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICB2YXIgb2JqZWN0cyA9IGdldF9jb2xsZWN0aW9uKG5hbWUpOwoKICAgICAgICAgICAgICAgIG9iamVjdHMucHVzaChvYmplY3QpOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgcmVtb3ZlQnlJZDogZnVuY3Rpb24oX2lkKXsKICAgICAgICAgICAgICAgIGlmKCFvYmplY3RzKXsKICAgICAgICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgZm91bmRJbmRleCA9IC0xOwogICAgICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKG9iamVjdHMsIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCl7CiAgICAgICAgICAgICAgICAgICBpZihmb3VuZEluZGV4IDwgMCAmJiB2YWx1ZVsiX2lkIl0gPT09IF9pZCl7CiAgICAgICAgICAgICAgICAgICAgICAgZm91bmRJbmRleCA9IGluZGV4OwogICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgaWYoZm91bmRJbmRleCA+PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgb2JqZWN0cy5zcGxpY2UoZm91bmRJbmRleCwgMSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCgoKCiAgICAgICAgICAgIGxlbmd0aDogZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIGlmKCFvYmplY3RzKXsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBvYmplY3RzLmxlbmd0aDsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9XSkKOwo=')
},
{
'name': '/app/js/filters.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogRmlsdGVycyAqLwoKYW5ndWxhci5tb2R1bGUoJ215QXBwLmZpbHRlcnMnLCBbXSkuCiAgZmlsdGVyKCdpbnRlcnBvbGF0ZScsIFsndmVyc2lvbicsIGZ1bmN0aW9uKHZlcnNpb24pIHsKICAgIHJldHVybiBmdW5jdGlvbih0ZXh0KSB7CiAgICAgIHJldHVybiBTdHJpbmcodGV4dCkucmVwbGFjZSgvXCVWRVJTSU9OXCUvbWcsIHZlcnNpb24pOwogICAgfTsKICB9XSk7Cg==')
},
{
'name': '/app/js/utils.js', 'data': base64.b64decode('LyoqCiAqIENyZWF0ZWQgYnkgbWFydWYgbWFuaXJ1enphbWFuIG9uIDcvNS8xNC4KICovCgoKZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHsKICAgIHZhciB2YWx1ZSA9ICI7ICIgKyBkb2N1bWVudC5jb29raWU7CiAgICB2YXIgcGFydHMgPSB2YWx1ZS5zcGxpdCgiOyAiICsgbmFtZSArICI9Iik7CiAgICBpZiAocGFydHMubGVuZ3RoID09IDIpIHJldHVybiBwYXJ0cy5wb3AoKS5zcGxpdCgiOyIpLnNoaWZ0KCk7Cn0KCmZ1bmN0aW9uIGdldFVzZXJOYW1lKGRlZmF1bHRfdXNlcil7CiAgICB2YXIgdXNlckNvb2tpZSA9IGdldENvb2tpZSgidXNlciIpOwogICAgaWYodXNlckNvb2tpZSl7CiAgICAgICAgdXNlckNvb2tpZSA9IHVzZXJDb29raWUucmVwbGFjZSgvXCIvZywgIiIpCiAgICAgICAgdmFyIGRlY29kZWQgPSBKU09OLnBhcnNlKHdpbmRvdy5hdG9iKHVzZXJDb29raWUpKTsKICAgICAgICByZXR1cm4gZGVjb2RlZFsidXNlcm5hbWUiXSB8fCBkZWZhdWx0X3VzZXI7CiAgICB9CgogICAgcmV0dXJuIGRlZmF1bHRfdXNlcjsKfQoKZnVuY3Rpb24gbG9nZ2VkSW4oKXsKICAgIHZhciB1c2VyQ29va2llID0gZ2V0Q29va2llKCJ1c2Vyc2VjcmV0Iik7CiAgICBpZih1c2VyQ29va2llKXsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKfQo=')
},
{
'name': '/app/js/controllers.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogQ29udHJvbGxlcnMgKi8KYW5ndWxhci5tb2R1bGUoJ215QXBwLmNvbnRyb2xsZXJzJywgW10pCiAgICAuY29udHJvbGxlcignQWRtaW5NYWluQ3RybCcsIFsnJHNjb3BlJywgJyRtb2RhbCcsICdDb3Ntb3NTZXJ2aWNlJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsLCBDb3Ntb3NTZXJ2aWNlKSB7CiAgICAgICAgJHNjb3BlLnVzZXJOYW1lID0gZ2V0VXNlck5hbWUoIk5vIE5hbWUiKTsKICAgICAgICAkc2NvcGUubG9nZ2VkSW4gPSBsb2dnZWRJbjsKICAgIH1dKQogICAgLmNvbnRyb2xsZXIoJ0hvbWVDdHJsJywgWyckc2NvcGUnLCAnJG1vZGFsJywgJ0Nvc21vc1NlcnZpY2UnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbW9kYWwsIENvc21vc1NlcnZpY2UpIHsKICAgICAgICAkc2NvcGUuc2VydmljZSA9ICIvc2VydmljZS8iOwogICAgICAgICRzY29wZS5jb2x1bW5zID0gIiI7CiAgICAgICAgJHNjb3BlLmZpbHRlciA9ICIiOwogICAgICAgICRzY29wZS5kYXRhID0gIiI7CiAgICAgICAgJHNjb3BlLnJlc3VsdCA9ICIiOwogICAgICAgICRzY29wZS5zdGF0dXMgPSAiIjsKICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSAiIjsKCiAgICAgICAgJHNjb3BlLmNsZWFyRXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IGZhbHNlOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gIiI7CiAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9ICIiOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5wcm9jZXNzUmVzdWx0ID0gZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgJHNjb3BlLnJlc3VsdCA9IEpTT04uc3RyaW5naWZ5KGRhdGEsIHVuZGVmaW5lZCwgNCkKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuY2xlYXJSZXN1bHQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IGZhbHNlOwogICAgICAgICAgICAkc2NvcGUucmVzdWx0ID0gIiI7CiAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSAiIjsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1c19kYXRhID0gIiI7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvciA9IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgJHNjb3BlLmhhc0Vycm9yID0gdHJ1ZTsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHN0YXR1czsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1c19kYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLmdldCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJHNjb3BlLmNsZWFyUmVzdWx0KCk7CiAgICAgICAgICAgIHZhciB1cmwgPSAkc2NvcGUuc2VydmljZTsKICAgICAgICAgICAgdmFyIHF1ZXJ5U3RhcnRlZCA9IGZhbHNlOwogICAgICAgICAgICBpZiAoJHNjb3BlLmNvbHVtbnMgJiYgJHNjb3BlLmNvbHVtbnMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdXJsID0gdXJsICsgIj9jb2x1bW5zPSIgKyAkc2NvcGUuY29sdW1uczsKICAgICAgICAgICAgICAgIHF1ZXJ5U3RhcnRlZCA9IHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCRzY29wZS5maWx0ZXIgJiYgJHNjb3BlLmZpbHRlci5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICBpZiAocXVlcnlTdGFydGVkKSB7CiAgICAgICAgICAgICAgICAgICAgdXJsID0gdXJsICsgIiZmaWx0ZXI9IiArICRzY29wZS5maWx0ZXI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB1cmwgPSB1cmwgKyAiP2ZpbHRlcj0iICsgJHNjb3BlLmZpbHRlcjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgQ29zbW9zU2VydmljZS5nZXQodXJsLCBmdW5jdGlvbiAocmV0dXJuZWREYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NSZXN1bHQocmV0dXJuZWREYXRhKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5wb3N0ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkc2NvcGUuY2xlYXJSZXN1bHQoKTsKICAgICAgICAgICAgdmFyIHVybCA9ICRzY29wZS5zZXJ2aWNlOwogICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLnBvc3QodXJsLCAkc2NvcGUuZGF0YSwgZnVuY3Rpb24gKHJldHVybmVkRGF0YSkgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzUmVzdWx0KHJldHVybmVkRGF0YSk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUucHV0ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkc2NvcGUuY2xlYXJSZXN1bHQoKTsKICAgICAgICAgICAgdmFyIHVybCA9ICRzY29wZS5zZXJ2aWNlOwogICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLnB1dCh1cmwsICRzY29wZS5kYXRhLCBmdW5jdGlvbiAocmV0dXJuZWREYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NSZXN1bHQocmV0dXJuZWREYXRhKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICApOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5kZWxldGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRzY29wZS5jbGVhclJlc3VsdCgpOwogICAgICAgICAgICB2YXIgdXJsID0gJHNjb3BlLnNlcnZpY2U7CiAgICAgICAgICAgIENvc21vc1NlcnZpY2UuZGVsZXRlKHVybCwgZnVuY3Rpb24gKHJldHVybmVkRGF0YSkgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzUmVzdWx0KHJldHVybmVkRGF0YSk7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwogICAgfV0pCiAgICAuY29udHJvbGxlcignTWVzc2FnZVZpZXdDdHJsJywgWyckc2NvcGUnLCAnQ29zbW9zU2VydmljZScsICdtZXNzYWdlJywgZnVuY3Rpb24gKCRzY29wZSwgQ29zbW9zU2VydmljZSwgbWVzc2FnZSkgewogICAgICAgICRzY29wZS5tZXNzYWdlID0gbWVzc2FnZS5wb3AoKTsKICAgIH1dKQogICAgLmNvbnRyb2xsZXIoJ1VzZXJzQ3RybCcsIFsnJHNjb3BlJywgJyRtb2RhbCcsICdDb3Ntb3NTZXJ2aWNlJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsLCBDb3Ntb3NTZXJ2aWNlKSB7CgogICAgICAgICRzY29wZS5jbGVhckVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSBmYWxzZTsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICIiOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSAiIjsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yID0gZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gc3RhdHVzOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuYWRkVXNlciA9IGZ1bmN0aW9uIChzaXplLCBjdXJyZW50X3VzZXIpIHsKICAgICAgICAgICAgdmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7CiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2FkZHVzZXIuaHRtbCcsCiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAiVXNlck1vZGFsSW5zdGFuY2VDdHJsIiwKICAgICAgICAgICAgICAgIHNpemU6IHNpemUsCiAgICAgICAgICAgICAgICBiYWNrZHJvcDogJ3N0YXRpYycsCiAgICAgICAgICAgICAgICByZXNvbHZlOiB7CiAgICAgICAgICAgICAgICAgICAgdXNlcjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudF91c2VyOwogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgcm9sZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICRzY29wZS5yb2xlczsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgbW9kYWxJbnN0YW5jZS5yZXN1bHQudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICAgICAgaWYgKCF1c2VyLl9pZCkgewogICAgICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UucG9zdCgnL3NlcnZpY2UvY29zbW9zLnVzZXJzLycsIHVzZXIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuZ2V0VXNlcnMoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIHZhciB1c2VyX2lkID0gdXNlci5faWQ7CiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHVzZXIuX2lkOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLm93bmVyOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLnVzZXJuYW1lOwogICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLmNyZWF0ZXRpbWU7CiAgICAgICAgICAgICAgICAgICAgaWYgKCF1c2VyLnBhc3N3b3JkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB1c2VyLnBhc3N3b3JkOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgQ29zbW9zU2VydmljZS5wdXQoJy9zZXJ2aWNlL2Nvc21vcy51c2Vycy8nICsgdXNlcl9pZCArICcvJywgdXNlciwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRVc2VycygpOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvLyRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5lZGl0VXNlciA9IGZ1bmN0aW9uICh1c2VySW5kZXgpIHsKICAgICAgICAgICAgJHNjb3BlLmFkZFVzZXIoJ2xnJywgJHNjb3BlLnVzZXJzW3VzZXJJbmRleF0pOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5yZW1vdmVVc2VyID0gZnVuY3Rpb24gKHVzZXJJbmRleCkgewogICAgICAgICAgICB2YXIgdXNlciA9ICRzY29wZS51c2Vyc1t1c2VySW5kZXhdOwoKICAgICAgICAgICAgaWYgKGNvbmZpcm0oJ0FyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUgdGhlIHVzZXIgJyArIHVzZXIudXNlcm5hbWUgKyAnPycpKSB7CiAgICAgICAgICAgICAgICB2YXIgdXNlcl9pZCA9IHVzZXIuX2lkOwogICAgICAgICAgICAgICAgQ29zbW9zU2VydmljZS5kZWxldGUoJy9zZXJ2aWNlL2Nvc21vcy51c2Vycy8nICsgdXNlcl9pZCArICcvJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldFVzZXJzKCk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CgogICAgICAgIH07CgogICAgICAgICRzY29wZS5nZXRSb2xlcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgQ29zbW9zU2VydmljZS5nZXQoJy9zZXJ2aWNlL2Nvc21vcy5yYmFjLm9iamVjdC5yb2xlLycsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnJvbGVzID0gZGF0YTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLmdldFJvbGVzKCk7CgogICAgICAgICRzY29wZS5nZXRVc2VycyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgQ29zbW9zU2VydmljZS5nZXQoJy9zZXJ2aWNlL2Nvc21vcy51c2Vycy8nLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICRzY29wZS51c2VycyA9IGRhdGE7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0VXNlcnMoKTsKICAgIH1dKQogICAgLmNvbnRyb2xsZXIoJ1JvbGVzQ3RybCcsIFsnJHNjb3BlJywgJyRtb2RhbCcsICdDb3Ntb3NTZXJ2aWNlJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsLCBDb3Ntb3NTZXJ2aWNlKSB7CgogICAgICAgICRzY29wZS5jbGVhckVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSBmYWxzZTsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICIiOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSAiIjsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yID0gZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gc3RhdHVzOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuYWRkUm9sZSA9IGZ1bmN0aW9uIChzaXplLCBjdXJyZW50X3JvbGUpIHsKICAgICAgICAgICAgdmFyIG1vZGFsSW5zdGFuY2UgPSAkbW9kYWwub3Blbih7CiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2FkZHJvbGUuaHRtbCcsCiAgICAgICAgICAgICAgICBjb250cm9sbGVyOiAiUm9sZU1vZGFsSW5zdGFuY2VDdHJsIiwKICAgICAgICAgICAgICAgIHNpemU6IHNpemUsCiAgICAgICAgICAgICAgICBiYWNrZHJvcDogJ3N0YXRpYycsCiAgICAgICAgICAgICAgICByZXNvbHZlOiB7CiAgICAgICAgICAgICAgICAgICAgcm9sZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3VycmVudF9yb2xlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBtb2RhbEluc3RhbmNlLnJlc3VsdC50aGVuKGZ1bmN0aW9uIChyb2xlKSB7CiAgICAgICAgICAgICAgICAkc2NvcGUuY3VycmVudF9yb2xlID0gcm9sZTsKICAgICAgICAgICAgICAgIGlmICghcm9sZS5faWQpIHsKICAgICAgICAgICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLnBvc3QoJy9zZXJ2aWNlL2Nvc21vcy5yYmFjLm9iamVjdC5yb2xlLycsIHJvbGUsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRSb2xlcygpOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJvbGVfaWQgPSByb2xlLl9pZDsKICAgICAgICAgICAgICAgICAgICBkZWxldGUgcm9sZS5faWQ7CiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHJvbGUuc2lkOwogICAgICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UucHV0KCcvc2VydmljZS9jb3Ntb3MucmJhYy5vYmplY3Qucm9sZS8nICsgcm9sZV9pZCArICcvJywgcm9sZSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5nZXRSb2xlcygpOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvLyRsb2cuaW5mbygnTW9kYWwgZGlzbWlzc2VkIGF0OiAnICsgbmV3IERhdGUoKSk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5lZGl0Um9sZSA9IGZ1bmN0aW9uIChyb2xlSW5kZXgpIHsKICAgICAgICAgICAgJHNjb3BlLmFkZFJvbGUoJ2xnJywgJHNjb3BlLnJvbGVzW3JvbGVJbmRleF0pOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5yZW1vdmVSb2xlID0gZnVuY3Rpb24gKHJvbGVJbmRleCkgewogICAgICAgICAgICB2YXIgcm9sZSA9ICRzY29wZS5yb2xlc1tyb2xlSW5kZXhdOwogICAgICAgICAgICBpZiAoY29uZmlybSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGUgcm9sZSAnICsgcm9sZS5uYW1lICsgJz8nKSkgewogICAgICAgICAgICAgICAgdmFyIHJvbGVfaWQgPSByb2xlLl9pZDsKICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UuZGVsZXRlKCcvc2VydmljZS9jb3Ntb3MucmJhYy5vYmplY3Qucm9sZS8nICsgcm9sZV9pZCArICcvJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldFJvbGVzKCk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLmdldFJvbGVzID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLmdldCgnL3NlcnZpY2UvY29zbW9zLnJiYWMub2JqZWN0LnJvbGUvJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAkc2NvcGUucm9sZXMgPSBkYXRhOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLmdldFJvbGVzKCk7CiAgICB9XSkKICAgIC5jb250cm9sbGVyKCdVc2VyTW9kYWxJbnN0YW5jZUN0cmwnLCBbJyRzY29wZScsICckbW9kYWxJbnN0YW5jZScsICdyb2xlcycsICd1c2VyJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIHJvbGVzLCB1c2VyKSB7CiAgICAgICAgJHNjb3BlLnVzZXIgPSB1c2VyIHx8IHsidXNlcm5hbWUiOiBudWxsLCAicGFzc3dvcmQiOiBudWxsLCAicGFzc3dvcmRfcmUiOiBudWxsLCAiZW1haWwiOiBudWxsLCAicm9sZXMiOiBbXX07CiAgICAgICAgJHNjb3BlLnVzZXIucGFzc3dvcmQgPSBudWxsOwogICAgICAgICRzY29wZS5pc1VwZGF0aW5nID0gKHVzZXIgJiYgdXNlci5faWQgJiYgdXNlci5faWQubGVuZ3RoID4gMCk7CiAgICAgICAgJHNjb3BlLnJvbGVzID0gcm9sZXM7CgogICAgICAgICRzY29wZS5nZXRSb2xlTmFtZSA9IGZ1bmN0aW9uIChzaWQpIHsKICAgICAgICAgICAgdmFyIGZvdW5kX3JvbGUgPSAiW0J1aWx0aW4gUm9sZV0iCiAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaCgkc2NvcGUucm9sZXMsIGZ1bmN0aW9uIChyb2xlLCBrZXkpIHsKICAgICAgICAgICAgICAgIGlmIChyb2xlLnNpZCA9PT0gc2lkKSB7CiAgICAgICAgICAgICAgICAgICAgZm91bmRfcm9sZSA9IHJvbGUubmFtZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CgogICAgICAgICAgICByZXR1cm4gZm91bmRfcm9sZTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUub2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICgkc2NvcGUudXNlci51c2VybmFtZSAmJiAoJHNjb3BlLnVzZXIucGFzc3dvcmQgfHwgJHNjb3BlLmlzVXBkYXRpbmcpKSB7CiAgICAgICAgICAgICAgICBpZiAoJHNjb3BlLnVzZXIucGFzc3dvcmQgPT0gJHNjb3BlLnVzZXIucGFzc3dvcmRfcmUpIHsKICAgICAgICAgICAgICAgICAgICBkZWxldGUgJHNjb3BlLnVzZXIucGFzc3dvcmRfcmU7CiAgICAgICAgICAgICAgICAgICAgJG1vZGFsSW5zdGFuY2UuY2xvc2UoJHNjb3BlLnVzZXIpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmhhc2Vycm9yID0gdHJ1ZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICRzY29wZS5oYXNlcnJvciA9IHRydWU7CiAgICAgICAgICAgIH0KCiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLnJlbW92ZVJvbGUgPSBmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgICAgJHNjb3BlLnVzZXIucm9sZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuYWRkUm9sZSA9IGZ1bmN0aW9uIChzZWxlY3RlZF9yb2xlKSB7CiAgICAgICAgICAgIGlmICghc2VsZWN0ZWRfcm9sZSB8fCBzZWxlY3RlZF9yb2xlLmxlbmd0aCA8IDEpIHsKICAgICAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgZHVwID0gZmFsc2U7CiAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaCgkc2NvcGUudXNlci5yb2xlcywgZnVuY3Rpb24gKHJvbGVzaWQsIGluZGV4KSB7CiAgICAgICAgICAgICAgICBpZiAocm9sZXNpZCA9PT0gc2VsZWN0ZWRfcm9sZSkgewogICAgICAgICAgICAgICAgICAgIGR1cCA9IHRydWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBpZiAoIWR1cCkgewogICAgICAgICAgICAgICAgJHNjb3BlLnVzZXIucm9sZXMucHVzaChzZWxlY3RlZF9yb2xlKTsKICAgICAgICAgICAgfQogICAgICAgIH07CgogICAgICAgICRzY29wZS5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRtb2RhbEluc3RhbmNlLmRpc21pc3MoJ2NhbmNlbCcpOwogICAgICAgIH07CiAgICB9XSkKICAgIC5jb250cm9sbGVyKCdSb2xlTW9kYWxJbnN0YW5jZUN0cmwnLCBbJyRzY29wZScsICckbW9kYWxJbnN0YW5jZScsICdyb2xlJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIHJvbGUpIHsKICAgICAgICAkc2NvcGUucm9sZSA9IHsibmFtZSI6IG51bGwsICJyb2xlX2l0ZW1zIjogW119OwoKICAgICAgICAkc2NvcGUuYWNjZXNzX3R5cGVzID0gWwogICAgICAgICAgICB7bmFtZTogJ2FjY2VzcycsIGRpc3BsYXk6ICdSb2xlIGFjY2Vzcyd9LAogICAgICAgICAgICB7bmFtZTogJ293bmVyX2FjY2VzcycsIGRpc3BsYXk6ICdPd25lciBhY2Nlc3MnfQogICAgICAgIF07CgogICAgICAgICRzY29wZS5wb3B1bGF0ZSA9IGZ1bmN0aW9uIChyb2xlKSB7CiAgICAgICAgICAgIGlmICghcm9sZSkgewogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CiAgICAgICAgICAgICRzY29wZS5pc1VwZGF0aW5nID0gKHJvbGUuX2lkICYmIHJvbGUuX2lkLmxlbmd0aCA+IDApOwogICAgICAgICAgICAkc2NvcGUucm9sZS5faWQgPSByb2xlLl9pZDsKICAgICAgICAgICAgJHNjb3BlLnJvbGUubmFtZSA9IHJvbGUubmFtZTsKICAgICAgICAgICAgJHNjb3BlLnJvbGUuc2lkID0gcm9sZS5zaWQ7CiAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChyb2xlLnJvbGVfaXRlbXMsIGZ1bmN0aW9uIChyb2xlX2l0ZW0sIGtleSkgewogICAgICAgICAgICAgICAgcm9sZV9pdGVtLmFjY2Vzc19iaXRzID0gW107CiAgICAgICAgICAgICAgICBpZiAocm9sZV9pdGVtLmFjY2VzcyAmJiByb2xlX2l0ZW0uYWNjZXNzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICB2YXIgciA9IGpRdWVyeS5pbkFycmF5KCJSRUFEIiwgcm9sZV9pdGVtLmFjY2VzcykgPiAtMTsKICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IGpRdWVyeS5pbkFycmF5KCJJTlNFUlQiLCByb2xlX2l0ZW0uYWNjZXNzKSA+IC0xOwogICAgICAgICAgICAgICAgICAgIHZhciB3ID0galF1ZXJ5LmluQXJyYXkoIldSSVRFIiwgcm9sZV9pdGVtLmFjY2VzcykgPiAtMTsKICAgICAgICAgICAgICAgICAgICB2YXIgZCA9IGpRdWVyeS5pbkFycmF5KCJERUxFVEUiLCByb2xlX2l0ZW0uYWNjZXNzKSA+IC0xOwoKICAgICAgICAgICAgICAgICAgICByb2xlX2l0ZW0uYWNjZXNzX2JpdHMucmVhZCA9IHI7CiAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtLmFjY2Vzc19iaXRzLmluc2VydCA9IGk7CiAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtLmFjY2Vzc19iaXRzLndyaXRlID0gdzsKICAgICAgICAgICAgICAgICAgICByb2xlX2l0ZW0uYWNjZXNzX2JpdHMuZGVsZXRlID0gZDsKICAgICAgICAgICAgICAgICAgICByb2xlX2l0ZW0udHlwZSA9ICRzY29wZS5hY2Nlc3NfdHlwZXNbMF0ubmFtZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJvbGVfaXRlbS5vd25lcl9hY2Nlc3MgJiYgcm9sZV9pdGVtLm93bmVyX2FjY2Vzcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHIgPSBqUXVlcnkuaW5BcnJheSgiUkVBRCIsIHJvbGVfaXRlbS5vd25lcl9hY2Nlc3MpID4gLTE7CiAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSBqUXVlcnkuaW5BcnJheSgiSU5TRVJUIiwgcm9sZV9pdGVtLm93bmVyX2FjY2VzcykgPiAtMTsKICAgICAgICAgICAgICAgICAgICB2YXIgdyA9IGpRdWVyeS5pbkFycmF5KCJXUklURSIsIHJvbGVfaXRlbS5vd25lcl9hY2Nlc3MpID4gLTE7CiAgICAgICAgICAgICAgICAgICAgdmFyIGQgPSBqUXVlcnkuaW5BcnJheSgiREVMRVRFIiwgcm9sZV9pdGVtLm93bmVyX2FjY2VzcykgPiAtMTsKCiAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtLmFjY2Vzc19iaXRzLnJlYWQgPSByOwogICAgICAgICAgICAgICAgICAgIHJvbGVfaXRlbS5hY2Nlc3NfYml0cy5pbnNlcnQgPSBpOwogICAgICAgICAgICAgICAgICAgIHJvbGVfaXRlbS5hY2Nlc3NfYml0cy53cml0ZSA9IHc7CiAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtLmFjY2Vzc19iaXRzLmRlbGV0ZSA9IGQ7CiAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtLnR5cGUgPSAkc2NvcGUuYWNjZXNzX3R5cGVzWzFdLm5hbWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgJHNjb3BlLnJvbGUucm9sZV9pdGVtcy5wdXNoKHJvbGVfaXRlbSk7CgogICAgICAgICAgICB9KTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuYWRkUm9sZUl0ZW0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRzY29wZS5yb2xlLnJvbGVfaXRlbXMucHVzaCh7fSk7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLnJlbW92ZVJvbGVJdGVtID0gZnVuY3Rpb24gKGluZGV4KSB7CiAgICAgICAgICAgICRzY29wZS5yb2xlLnJvbGVfaXRlbXMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUub2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmICgkc2NvcGUucm9sZS5uYW1lICYmICRzY29wZS5yb2xlLnJvbGVfaXRlbXMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgdmFyIGhhc2Vycm9yID0gZmFsc2U7CiAgICAgICAgICAgICAgICB2YXIgcm9sZV9kYXRhID0gewogICAgICAgICAgICAgICAgICAgICJuYW1lIjogJHNjb3BlLnJvbGUubmFtZSwKICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJvYmplY3QuUm9sZSIKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgaWYgKCRzY29wZS5yb2xlLnNpZCkgewogICAgICAgICAgICAgICAgICAgIHJvbGVfZGF0YVsic2lkIl0gPSAkc2NvcGUucm9sZS5zaWQ7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcm9sZV9kYXRhWyJfaWQiXSA9ICRzY29wZS5yb2xlLl9pZDsKCiAgICAgICAgICAgICAgICByb2xlX2RhdGFbInJvbGVfaXRlbXMiXSA9IFtdOwoKICAgICAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaCgkc2NvcGUucm9sZS5yb2xlX2l0ZW1zLCBmdW5jdGlvbiAocm9sZV9pdGVtLCBrZXkpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgcm9sZV9pdGVtX2RhdGEgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICJvYmplY3RfbmFtZSI6IHJvbGVfaXRlbS5vYmplY3RfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgInByb3BlcnR5X25hbWUiOiByb2xlX2l0ZW0ucHJvcGVydHlfbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAib2JqZWN0LlJvbGVJdGVtIgogICAgICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgICAgIHJvbGVfaXRlbV9kYXRhW3JvbGVfaXRlbS50eXBlXSA9IFtdOwoKICAgICAgICAgICAgICAgICAgICBpZiAocm9sZV9pdGVtLmFjY2Vzc19iaXRzLnJlYWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtX2RhdGFbcm9sZV9pdGVtLnR5cGVdLnB1c2goIlJFQUQiKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChyb2xlX2l0ZW0uYWNjZXNzX2JpdHMuaW5zZXJ0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJvbGVfaXRlbV9kYXRhW3JvbGVfaXRlbS50eXBlXS5wdXNoKCJJTlNFUlQiKTsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIGlmIChyb2xlX2l0ZW0uYWNjZXNzX2JpdHMud3JpdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcm9sZV9pdGVtX2RhdGFbcm9sZV9pdGVtLnR5cGVdLnB1c2goIldSSVRFIik7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAocm9sZV9pdGVtLmFjY2Vzc19iaXRzLmRlbGV0ZSkgewogICAgICAgICAgICAgICAgICAgICAgICByb2xlX2l0ZW1fZGF0YVtyb2xlX2l0ZW0udHlwZV0ucHVzaCgiREVMRVRFIik7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICByb2xlX2RhdGFbInJvbGVfaXRlbXMiXS5wdXNoKHJvbGVfaXRlbV9kYXRhKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGlmICghaGFzZXJyb3IpIHsKICAgICAgICAgICAgICAgICAgICAkbW9kYWxJbnN0YW5jZS5jbG9zZShyb2xlX2RhdGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgJHNjb3BlLmhhc2Vycm9yID0gdHJ1ZTsKICAgICAgICAgICAgfQoKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuY2FuY2VsID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkbW9kYWxJbnN0YW5jZS5kaXNtaXNzKCdjYW5jZWwnKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUucG9wdWxhdGUocm9sZSk7CiAgICB9XSkKICAgIC5jb250cm9sbGVyKCdMaXN0Q3RybCcsIFsnJHNjb3BlJywgJyRyb3V0ZVBhcmFtcycsICckbW9kYWwnLCAnQ29zbW9zU2VydmljZScsIGZ1bmN0aW9uICgkc2NvcGUsICRyb3V0ZVBhcmFtcywgJG1vZGFsLCBDb3Ntb3NTZXJ2aWNlKSB7CgogICAgICAgICRzY29wZS5zZXJ2aWNlTmFtZSA9ICJsaXN0cyI7CgogICAgICAgICRzY29wZS5jbGVhckVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSBmYWxzZTsKICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICIiOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSAiIjsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yID0gZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gc3RhdHVzOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSBKU09OLnN0cmluZ2lmeShkYXRhKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0RGF0YSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHVybCA9ICcvc2VydmljZS91c2VyZGF0YS5saXN0Y29uZmlndXJhdGlvbnMvJwoKICAgICAgICAgICAgQ29zbW9zU2VydmljZS5nZXQodXJsLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5saXN0cyA9IGRhdGE7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0RGF0YSgpOwoKICAgIH1dKQoKICAgIC5jb250cm9sbGVyKCdMaXN0RGV0YWlsQ3RybCcsIFsnJHNjb3BlJywgJyRyb3V0ZVBhcmFtcycsICckdGVtcGxhdGVDYWNoZScsICckbW9kYWwnLCAnQ29zbW9zU2VydmljZScsCiAgICAgICAgZnVuY3Rpb24gKCRzY29wZSwgJHJvdXRlUGFyYW1zLCAkdGVtcGxhdGVDYWNoZSwgJG1vZGFsLCBDb3Ntb3NTZXJ2aWNlKSB7CgogICAgICAgICAgICAkc2NvcGUuY2xlYXJFcnJvciA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IGZhbHNlOwogICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9ICIiOwogICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1c19kYXRhID0gIiI7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUubGlzdElkID0gJHJvdXRlUGFyYW1zLmxpc3RJZDsKCiAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IgPSBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHN0YXR1czsKICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLmdldENvbmZpZ3VyYXRpb24gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9zZXJ2aWNlL3VzZXJkYXRhLmxpc3Rjb25maWd1cmF0aW9ucy8nICsgJHNjb3BlLmxpc3RJZCArICcvJzsKCiAgICAgICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLmdldCh1cmwsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5saXN0Q29uZmlndXJhdGlvbiA9IGRhdGE7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5nZXREYXRhKCk7CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLmdldERhdGEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgY29sdW1ucyA9ICIiOwogICAgICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKCRzY29wZS5saXN0Q29uZmlndXJhdGlvbi5jb2x1bW5zLCBmdW5jdGlvbiAoY29sdW1uLCBpbmRleCkgewogICAgICAgICAgICAgICAgICAgIGNvbHVtbnMgKz0gY29sdW1uLm5hbWUgKyAiLCI7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3NlcnZpY2UvJyArICRzY29wZS5saXN0Q29uZmlndXJhdGlvbi5vYmplY3ROYW1lICsgJy8/Y29sdW1ucz0nICsgY29sdW1uczsKCiAgICAgICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLmdldCh1cmwsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5kYXRhID0gZGF0YTsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuc2hvd0RldGFpbHMgPSBmdW5jdGlvbiAoc2l6ZSwgZGF0YSwgbGlzdENvbmZpZ3VyYXRpb24pIHsKICAgICAgICAgICAgICAgIGlmIChsaXN0Q29uZmlndXJhdGlvbi5hbGxvd0RldGFpbHMpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgbW9kYWxJbnN0YW5jZSA9ICRtb2RhbC5vcGVuKHsKICAgICAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9zaG93X2pzb24uaHRtbCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICJTaG93SnNvbkRhdGFDdHJsIiwKICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogc2l6ZSwKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2Ryb3A6ICdzdGF0aWMnLAogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuZ2V0Q29uZmlndXJhdGlvbigpOwoKICAgICAgICB9XSkKCiAgICAuY29udHJvbGxlcignU2hvd0pzb25EYXRhQ3RybCcsIFsnJHNjb3BlJywgJyRtb2RhbEluc3RhbmNlJywgJ21vZGVsJywgZnVuY3Rpb24gKCRzY29wZSwgJG1vZGFsSW5zdGFuY2UsIG1vZGVsKSB7CiAgICAgICAgJHNjb3BlLm1vZGVsID0gbW9kZWw7CiAgICAgICAgJHNjb3BlLmNhbmNlbCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgJG1vZGFsSW5zdGFuY2UuZGlzbWlzcygnY2FuY2VsJyk7CiAgICAgICAgfTsKICAgIH1dKQogICAgLmNvbnRyb2xsZXIoJ0ZpbGVVcGxvYWRDdHJsJywgWyckc2NvcGUnLCAnJG1vZGFsJywgJ0Nvc21vc1NlcnZpY2UnLCBmdW5jdGlvbiAoJHNjb3BlLCAkbW9kYWwsIENvc21vc1NlcnZpY2UpIHsKCiAgICAgICAgJHNjb3BlLmNsZWFyRXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IGZhbHNlOwogICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gIiI7CiAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9ICIiOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IgPSBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IHRydWU7CiAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSBzdGF0dXM7CiAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpOwogICAgICAgIH07CgogICAgICAgICRzY29wZS51cGxvYWRlZF9maWxlcyA9IFsKICAgICAgICAgICAgeyJmaWxlX2lkIjogInRlc3QifQogICAgICAgIF07CgogICAgICAgICRzY29wZS5vbkZpbGVVcGxvYWRMb2FkZWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHZhciByZXNwb25zZVRleHQgPSB0aGlzLmNvbnRlbnREb2N1bWVudC5ib2R5LmlubmVyVGV4dDsKCiAgICAgICAgICAgIGlmIChyZXNwb25zZVRleHQpIHsKICAgICAgICAgICAgICAgIHZhciB2YWx1ZXMgPSBKU09OLnBhcnNlKEpTT04ucGFyc2UocmVzcG9uc2VUZXh0KS5fZCk7CiAgICAgICAgICAgICAgICBhbmd1bGFyLmZvckVhY2godmFsdWVzLCBmdW5jdGlvbiAoZGF0YSwgaW5kZXgpIHsKICAgICAgICAgICAgICAgICAgICAkc2NvcGUudXBsb2FkZWRfZmlsZXMucHVzaChkYXRhKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgJHNjb3BlLiRhcHBseSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8vIENsZWFyIHRoZSBpZnJhbWUgY29udHJvbAogICAgICAgICAgICAkKCcjc3VibWl0LWlmcmFtZScpLnJlbW92ZSgpOwogICAgICAgICAgICBqUXVlcnkoIiNmaWxlTGlzdCIpLmVtcHR5KCk7CiAgICAgICAgICAgIGpRdWVyeSgiI2ZpbGVMaXN0IikuYXBwZW5kKGpRdWVyeSgnPGlucHV0IGNsYXNzPSJmaWxlLXNlbGVjdG9yIiBuYW1lPSJ1cGxvYWRlZGZpbGUiIHR5cGU9ImZpbGUiIG9uY2hhbmdlPSJhbmd1bGFyLmVsZW1lbnQodGhpcykuc2NvcGUoKS5maWxlTmFtZUNoYW5nZWQoKSIgLz4nKSk7CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLnVwbG9hZEZpbGUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGpRdWVyeSgiI2lGcmFtZVBsYWNlaG9sZGVyIikuaHRtbCgiPGlmcmFtZSBuYW1lPSdzdWJtaXQtaWZyYW1lJyBpZD0nc3VibWl0LWlmcmFtZScgc3R5bGU9J2Rpc3BsYXk6IG5vbmU7Jz48L2lmcmFtZT4iKTsKCiAgICAgICAgICAgIGpRdWVyeSgiI3N1Ym1pdC1pZnJhbWUiKS5sb2FkKCRzY29wZS5vbkZpbGVVcGxvYWRMb2FkZWQpOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidXBsb2FkRm9ybSIpLnN1Ym1pdCgpOwogICAgICAgIH07CgogICAgICAgICRzY29wZS5maWxlTmFtZUNoYW5nZWQgPSBmdW5jdGlvbiAoZmlsZUlucHV0KSB7CiAgICAgICAgICAgIHZhciBlbXB0eUZvdW5kID0gZmFsc2U7CiAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChqUXVlcnkoIiNmaWxlTGlzdCIpLmNoaWxkcmVuKCksIGZ1bmN0aW9uIChkYXRhLCBpbmRleCkgewogICAgICAgICAgICAgICAgaWYgKCFkYXRhLnZhbHVlKSB7CiAgICAgICAgICAgICAgICAgICAgZW1wdHlGb3VuZCA9IHRydWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgaWYgKCFlbXB0eUZvdW5kKSB7CiAgICAgICAgICAgICAgICBqUXVlcnkoIiNmaWxlTGlzdCIpLmFwcGVuZChqUXVlcnkoJzxpbnB1dCBjbGFzcz0iZmlsZS1zZWxlY3RvciIgbmFtZT0idXBsb2FkZWRmaWxlIiB0eXBlPSJmaWxlIiBvbmNoYW5nZT0iYW5ndWxhci5lbGVtZW50KHRoaXMpLnNjb3BlKCkuZmlsZU5hbWVDaGFuZ2VkKCkiIC8+JykpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgJHNjb3BlLnJlbW92ZUZpbGUgPSBmdW5jdGlvbiAoaW5kZXgpIHsKICAgICAgICAgICAgdmFyIGZpbGUgPSAkc2NvcGUudXBsb2FkZWRfZmlsZXNbaW5kZXhdOwogICAgICAgICAgICBpZiAoY29uZmlybSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGUgZmlsZSAnICsgZmlsZS5maWxlbmFtZSArICc/JykpIHsKICAgICAgICAgICAgICAgIHZhciBmaWxlX2lkID0gZmlsZS5maWxlX2lkOwogICAgICAgICAgICAgICAgQ29zbW9zU2VydmljZS5kZWxldGUoJy9ncmlkZnMvdXNlcmZpbGVzLnByb2R1Y3RzLycgKyBmaWxlX2lkICsgJy8nLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUudXBsb2FkZWRfZmlsZXMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0RmlsZXMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIENvc21vc1NlcnZpY2UuZ2V0KCcvZ3JpZGZzL3VzZXJmaWxlcy5wcm9kdWN0cy8nLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICRzY29wZS51cGxvYWRlZF9maWxlcyA9IGRhdGE7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0RmlsZXMoKTsKCiAgICB9XSkKCiAgICAuY29udHJvbGxlcignRm9ybURlc2lnbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm91dGVQYXJhbXMnLCAnJHRlbXBsYXRlQ2FjaGUnLCAnJG1vZGFsJywgJ0Nvc21vc1NlcnZpY2UnLAogICAgICAgIGZ1bmN0aW9uICgkc2NvcGUsICRyb3V0ZVBhcmFtcywgJHRlbXBsYXRlQ2FjaGUsICRtb2RhbCwgQ29zbW9zU2VydmljZSkgewoKICAgICAgICAgICAgJHNjb3BlLmRlc2lnbk1vZGUgPSB0cnVlOwogICAgICAgICAgICAkc2NvcGUuYWN0aXZlVGFiID0gInRvb2xzIjsKICAgICAgICAgICAgJHNjb3BlLm9uc3VjY2Vzc190eXBlcyA9IFsKICAgICAgICAgICAgICAgIHsnbmFtZSc6ICdtZXNzYWdlJywgJ3RpdGxlJzogJ01lc3NhZ2UnfSwKICAgICAgICAgICAgICAgIHsnbmFtZSc6ICd1cmwnLCAndGl0bGUnOiAnUmVkaXJlY3QnfQogICAgICAgICAgICBdOwoKICAgICAgICAgICAgJHNjb3BlLnNlbGVjdEl0ZW0gPSBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkSXRlbSA9IGl0ZW07CiAgICAgICAgICAgICAgICAkc2NvcGUuYWN0aXZlVGFiID0gInNldHRpbmdzIjsKICAgICAgICAgICAgICAgIHZhciBvcHRpb25Gb3JtID0gJHNjb3BlLm9wdGlvbkZvcm1CeVR5cGVbaXRlbS50eXBlXTsKICAgICAgICAgICAgICAgIGlmIChvcHRpb25Gb3JtKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLm9wdGlvbnNmb3JtID0gb3B0aW9uRm9ybTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5vcHRpb25zZm9ybSA9ICRzY29wZS5vcHRpb25Gb3JtQnlUeXBlWyJkZWZhdWx0Il07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUudG9vbHNBY3RpdmUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gJHNjb3BlLmFjdGl2ZVRhYiA9PT0gInRvb2xzIjsKICAgICAgICAgICAgfTsKICAgICAgICAgICAgJHNjb3BlLnNldHRpbmdzQWN0aXZlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcmV0dXJuICRzY29wZS5hY3RpdmVUYWIgPT09ICJzZXR0aW5ncyI7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUub3B0aW9uc2Zvcm0gPSB7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUub3B0aW9uRm9ybUJ5VHlwZSA9IHsKICAgICAgICAgICAgICAgICJ0ZXh0IjogewogICAgICAgICAgICAgICAgICAgICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIlRpdGxlIiwgIm5hbWUiOiAidGl0bGUifSwKICAgICAgICAgICAgICAgICAgICAgICAgeyJ0eXBlIjogInRleHQiLCAidGl0bGUiOiAiTmFtZSIsICJuYW1lIjogIm5hbWUifQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiZm9ybSI6IHsKICAgICAgICAgICAgICAgICAgICAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJUaXRsZSIsICJuYW1lIjogInRpdGxlIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIk5hbWUiLCAibmFtZSI6ICJuYW1lIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIkFjdGlvbiIsICJuYW1lIjogImFjdGlvbiJ9LAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJjb21wb3NpdGUiLCAidGl0bGUiOiAiT24gc3VjY2VzcyIsICJuYW1lIjogIm9uc3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlR5cGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJzZWxlY3QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAib3B0aW9ucyI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjaG9pY2VzIjogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogIm1lc3NhZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiTWVzc2FnZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInZhbHVlIjogImlubGluZW1lc3NhZ2UiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiRW1iZWRlZCBtZXNzYWdlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmFsdWUiOiAidXJsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlJlZGlyZWN0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAidHlwZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJudWxsYWJsZSI6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJWYWx1ZSIsICJuYW1lIjogInZhbHVlIn0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAic2VsZWN0IjogeyJ0aXRsZSI6ICJTZWxlY3QgT3B0aW9ucyIsICJ0eXBlIjogImNvbXBvc2l0ZSIsICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICAgICAgeyJ0eXBlIjogInRleHQiLCAidGl0bGUiOiAiVGl0bGUiLCAibmFtZSI6ICJ0aXRsZSJ9LAogICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIk5hbWUiLCAibmFtZSI6ICJuYW1lIn0sCiAgICAgICAgICAgICAgICAgICAgeyJ0aXRsZSI6ICJPcHRpb25zIiwgInR5cGUiOiAiY29tcG9zaXRlIiwgIm9wdGlvbnMiOiB7fSwgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgeyJ0aXRsZSI6ICJDaG9pY2VzIiwgInR5cGUiOiAiYXJyYXkiLCAib3B0aW9ucyI6IHt9LCAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyJ0aXRsZSI6ICJUaXRsZSIsICJ0eXBlIjogInRleHQiLCAibmFtZSI6ICJ0aXRsZSJ9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgeyJ0aXRsZSI6ICJWYWx1ZSIsICJ0eXBlIjogInRleHQiLCAibmFtZSI6ICJ2YWx1ZSJ9CiAgICAgICAgICAgICAgICAgICAgICAgIF0sICJuYW1lIjogImNob2ljZXMifQogICAgICAgICAgICAgICAgICAgIF0sICJuYW1lIjogIm9wdGlvbnMifQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJhcnJheSI6IHsidGl0bGUiOiAiU2VsZWN0IE9wdGlvbnMiLCAidHlwZSI6ICJjb21wb3NpdGUiLCAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIlRpdGxlIiwgIm5hbWUiOiAidGl0bGUifSwKICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJOYW1lIiwgIm5hbWUiOiAibmFtZSJ9LAogICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiT3B0aW9ucyIsICJ0eXBlIjogImNvbXBvc2l0ZSIsICJvcHRpb25zIjoge30sICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiVmFsdWUgb25seSIsICJ0eXBlIjogImNoZWNrYm94IiwgIm5hbWUiOiAicHJpbWl0aXZlIn0KICAgICAgICAgICAgICAgICAgICBdLCAibmFtZSI6ICJvcHRpb25zIn0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCgogICAgICAgICAgICAgICAgImxvb2t1cCI6IHsidGl0bGUiOiAiU2VsZWN0IE9wdGlvbnMiLCAidHlwZSI6ICJjb21wb3NpdGUiLCAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIlRpdGxlIiwgIm5hbWUiOiAidGl0bGUifSwKICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJOYW1lIiwgIm5hbWUiOiAibmFtZSJ9LAogICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiT3B0aW9ucyIsICJ0eXBlIjogImNvbXBvc2l0ZSIsICJvcHRpb25zIjoge30sICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiVmFsdWUgb25seSIsICJ0eXBlIjogImNoZWNrYm94IiwgIm5hbWUiOiAic2F2ZVZhbHVlT25seSJ9LAoKICAgICAgICAgICAgICAgICAgICAgICAgeyJ0aXRsZSI6ICJSZWZlcmVuY2VzIiwgInR5cGUiOiAiYXJyYXkiLCAibmFtZSI6ICJsb29rdXBzIiwgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiRGF0YSBlbmRwb2ludCIsICJ0eXBlIjogInRleHQiLCAibmFtZSI6ICJ1cmwifSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiUmVmZXJlbmNlIHRpdGxlIiwgInR5cGUiOiAidGV4dCIsICJuYW1lIjogImxvb2t1cG5hbWUifSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiUmVmZXJlbmNlIG5hbWUiLCAidHlwZSI6ICJ0ZXh0IiwgIm5hbWUiOiAicmVmIn0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7InRpdGxlIjogIlZhbHVlIGZpZWxkIiwgInR5cGUiOiAidGV4dCIsICJuYW1lIjogInZhbHVlIn0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7InRpdGxlIjogIlRpdGxlIGZpZWxkIiwgInR5cGUiOiAidGV4dCIsICJuYW1lIjogInRpdGxlIn0KICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIF0sICJuYW1lIjogIm9wdGlvbnMifQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICJyYWRpb2dyb3VwIjogeyJ0aXRsZSI6ICJTZWxlY3QgT3B0aW9ucyIsICJ0eXBlIjogImZvcm0iLCAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIlRpdGxlIiwgIm5hbWUiOiAidGl0bGUifSwKICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJOYW1lIiwgIm5hbWUiOiAibmFtZSJ9LAogICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiT3B0aW9ucyIsICJ0eXBlIjogImNvbXBvc2l0ZSIsICJvcHRpb25zIjoge30sICJmaWVsZHMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiQ2hvaWNlcyIsICJ0eXBlIjogImFycmF5IiwgIm9wdGlvbnMiOiB7fSwgImZpZWxkcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiVGl0bGUiLCAidHlwZSI6ICJ0ZXh0IiwgIm5hbWUiOiAidGl0bGUifSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsidGl0bGUiOiAiVmFsdWUiLCAidHlwZSI6ICJ0ZXh0IiwgIm5hbWUiOiAidmFsdWUifQogICAgICAgICAgICAgICAgICAgICAgICBdLCAibmFtZSI6ICJjaG9pY2VzIn0KICAgICAgICAgICAgICAgICAgICBdLCAibmFtZSI6ICJvcHRpb25zIn0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAiZGVmYXVsdCI6IHsKICAgICAgICAgICAgICAgICAgICAiZmllbGRzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7InR5cGUiOiAidGV4dCIsICJ0aXRsZSI6ICJUaXRsZSIsICJuYW1lIjogInRpdGxlIn0sCiAgICAgICAgICAgICAgICAgICAgICAgIHsidHlwZSI6ICJ0ZXh0IiwgInRpdGxlIjogIk5hbWUiLCAibmFtZSI6ICJuYW1lIn0KICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUudG9vbHNMaXN0ID0gWwogICAgICAgICAgICAgICAge3RpdGxlOiAnVGV4dCcsIHR5cGU6ICJ0ZXh0In0sCiAgICAgICAgICAgICAgICB7dGl0bGU6ICdTdGF0aWMnLCB0eXBlOiAic3RhdGljIiwgb3B0aW9uczogeyJ2YWx1ZSI6ICIifX0sCiAgICAgICAgICAgICAgICB7dGl0bGU6ICdUZXh0IEFyZWEnLCB0eXBlOiAidGV4dGFyZWEiLCBvcHRpb25zOiB7fX0sCiAgICAgICAgICAgICAgICB7dGl0bGU6ICdDb2RlIGVkaXRvcicsIHR5cGU6ICJjb2RlZWRpdG9yIiwgb3B0aW9uczoge319LAogICAgICAgICAgICAgICAgeyB0aXRsZTogJ1NlbGVjdCcsIHR5cGU6ICdzZWxlY3QnLCBvcHRpb25zOiB7Y2hvaWNlczogWwogICAgICAgICAgICAgICAgICAgIHsndmFsdWUnOiAnb3B0aW9uMScsICd0aXRsZSc6ICdvcHRpb24xJ30sCiAgICAgICAgICAgICAgICAgICAgeyd2YWx1ZSc6ICdvcHRpb24yJywgJ3RpdGxlJzogJ29wdGlvbjInfQogICAgICAgICAgICAgICAgXX19LAogICAgICAgICAgICAgICAgeyB0aXRsZTogJ0NoZWNrYm94JywgdHlwZTogJ2NoZWNrYm94Jywgb3B0aW9uczoge319LAogICAgICAgICAgICAgICAgeyB0aXRsZTogJ09wdGlvbnMnLCB0eXBlOiAncmFkaW9ncm91cCcsIG9wdGlvbnM6IHsgY2hvaWNlczogWwogICAgICAgICAgICAgICAgICAgIHsndmFsdWUnOiAnb3B0aW9uMScsICd0aXRsZSc6ICdvcHRpb24xJ30sCiAgICAgICAgICAgICAgICAgICAgeyd2YWx1ZSc6ICdvcHRpb24yJywgJ3RpdGxlJzogJ29wdGlvbjInfQogICAgICAgICAgICAgICAgXX19LAogICAgICAgICAgICAgICAge3RpdGxlOiAnR3JvdXAnLCB0eXBlOiAiY29tcG9zaXRlIiwgb3B0aW9uczoge30sIGZpZWxkczogW119LAogICAgICAgICAgICAgICAge3RpdGxlOiAnQXJyYXknLCB0eXBlOiAiYXJyYXkiLCBvcHRpb25zOiB7fSwgZmllbGRzOiBbXX0sCiAgICAgICAgICAgICAgICB7dGl0bGU6ICdMb29rdXAnLCB0eXBlOiAibG9va3VwIiwgb3B0aW9uczoge30sIGZpZWxkczogW119CiAgICAgICAgICAgIF07CgogICAgICAgICAgICAkc2NvcGUuY29tcG9uZW50cyA9IGpRdWVyeS5leHRlbmQodHJ1ZSwgW10sICRzY29wZS50b29sc0xpc3QpOwoKICAgICAgICAgICAgJHNjb3BlLmZvcm0gPSB7CiAgICAgICAgICAgICAgICAidGl0bGUiOiAiVW50aXRsZWQgZm9ybSIsCiAgICAgICAgICAgICAgICAidHlwZSI6ICJmb3JtIiwKICAgICAgICAgICAgICAgICJvbnN1Y2Nlc3MiOiB7InR5cGUiOiAibWVzc2FnZSIsICJ2YWx1ZSI6ICJUaGFuayB5b3UifSwKICAgICAgICAgICAgICAgICJmaWVsZHMiOiBbXQogICAgICAgICAgICB9OwoKCiAgICAgICAgICAgICRzY29wZS5mb3JtSWQgPSAkcm91dGVQYXJhbXMuZm9ybUlkOwoKICAgICAgICAgICAgJHNjb3BlLmNsZWFyRXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSBmYWxzZTsKICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXMgPSAiIjsKICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9ICIiOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvciA9IGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICRzY29wZS5oYXNFcnJvciA9IHRydWU7CiAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gc3RhdHVzOwogICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1c19kYXRhID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Zvcm0gPSBmdW5jdGlvbiAoZm9ybSkgewogICAgICAgICAgICAgICAgaWYgKCFmb3JtLm9uc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgIGZvcm0ub25zdWNjZXNzID0ge307CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkc2NvcGUuZm9ybSA9IGZvcm07CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuZ2V0Q29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuZm9ybUlkKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9ICcvc2VydmljZS9jb3Ntb3MuZm9ybXMvJyArICRzY29wZS5mb3JtSWQgKyAnLyc7CgogICAgICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UuZ2V0KHVybCwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRm9ybShkYXRhKTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICRzY29wZS5mb3JtID0gewogICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiVGVzdCBmb3JtIiwKICAgICAgICAgICAgICAgICAgICAgICAgInR5cGUiOiAiZm9ybSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJmaWVsZHMiOiBbXQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuc29ydGluZ0xvZyA9IFtdOwoKICAgICAgICAgICAgJHNjb3BlLnNvcnRhYmxlT3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIGNvbm5lY3RXaXRoOiAiLmFwcHMtY29udGFpbmVyIiwKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiYmVpbmdEcmFnZ2VkIiwKICAgICAgICAgICAgICAgIHN0b3A6IGZ1bmN0aW9uIChlLCB1aSkgewogICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBlbGVtZW50IGlzIHJlbW92ZWQgZnJvbSB0aGUgZmlyc3QgY29udGFpbmVyCiAgICAgICAgICAgICAgICAgICAgaWYgKCQoZS50YXJnZXQpLmhhc0NsYXNzKCdmaXJzdCcpICYmCiAgICAgICAgICAgICAgICAgICAgICAgIHVpLml0ZW0uc29ydGFibGUuZHJvcHRhcmdldCAmJgogICAgICAgICAgICAgICAgICAgICAgICBlLnRhcmdldCAhPSB1aS5pdGVtLnNvcnRhYmxlLmRyb3B0YXJnZXRbMF0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gY2xvbmUgdGhlIG9yaWdpbmFsIG1vZGVsIHRvIHJlc3RvcmUgdGhlIHJlbW92ZWQgaXRlbQogICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUuY29tcG9uZW50cyA9IGpRdWVyeS5leHRlbmQodHJ1ZSwgW10sICRzY29wZS50b29sc0xpc3QpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnNlbGVjdGVkSXRlbSA9IG51bGw7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuc29ydGFibGVUb29sc09wdGlvbnMgPSAkc2NvcGUuc29ydGFibGVPcHRpb25zOwoKICAgICAgICAgICAgJHNjb3BlLmdldFZpZXcgPSBmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgaWYgKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS50eXBlID09ICJmb3JtIikgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gImNvbXBvc2l0ZS1maWVsZC5odG1sIjsKICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnR5cGUgKyAiLWZpZWxkLmh0bWwiOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUucmVtb3ZlSXRlbSA9IGZ1bmN0aW9uIChmaWVsZHMsIGluZGV4KSB7CiAgICAgICAgICAgICAgICBmaWVsZHMuc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICRzY29wZS5pbnNlcnRJdGVtID0gZnVuY3Rpb24gKGZpZWxkcywgaW5kZXgsIGRhdGEpIHsKICAgICAgICAgICAgICAgIGZpZWxkcy5zcGxpY2UoaW5kZXgsIDAsIGRhdGEpOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLnNlbGVjdFRhYiA9IGZ1bmN0aW9uICh0YWIpIHsKICAgICAgICAgICAgICAgICRzY29wZS5hY3RpdmVUYWIgPSB0YWI7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuc2F2ZUZvcm0gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAkc2NvcGUuY2xlYXJFcnJvcigpOwogICAgICAgICAgICAgICAgJHNjb3BlLnJlc3VsdCA9IG51bGw7CiAgICAgICAgICAgICAgICB2YXIgZm9ybV9pZCA9ICRzY29wZS5mb3JtLl9pZDsKICAgICAgICAgICAgICAgIHZhciB1cmwgPSAnL3NlcnZpY2UvY29zbW9zLmZvcm1zLyc7CgogICAgICAgICAgICAgICAgaWYgKGZvcm1faWQpIHsKICAgICAgICAgICAgICAgICAgICB1cmwgPSB1cmwgKyBmb3JtX2lkOwogICAgICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UucHV0KHVybCwgJHNjb3BlLmZvcm0sIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucmVzdWx0ID0gZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgIENvc21vc1NlcnZpY2UucG9zdCh1cmwsICRzY29wZS5mb3JtLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnJlc3VsdCA9IGRhdGE7CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuZ2V0Q29uZmlndXJhdGlvbigpOwoKICAgICAgICB9XSkKCiAgICAuY29udHJvbGxlcignRm9ybVZpZXdDdHJsJywgWyckc2NvcGUnLCAnJHJvdXRlUGFyYW1zJywgJyRsb2NhdGlvbicsICdDb3Ntb3NTZXJ2aWNlJywgJ21lc3NhZ2UnLAogICAgICAgIGZ1bmN0aW9uICgkc2NvcGUsICRyb3V0ZVBhcmFtcywgJGxvY2F0aW9uLCBDb3Ntb3NTZXJ2aWNlLCBtZXNzYWdlKSB7CiAgICAgICAgICAgICRzY29wZS5mb3JtID0ge307CiAgICAgICAgICAgICRzY29wZS5kYXRhID0ge307CiAgICAgICAgICAgICRzY29wZS5mb3JtSWQgPSAkcm91dGVQYXJhbXMuZm9ybUlkOwogICAgICAgICAgICAkc2NvcGUuZGF0YUlkID0gJHJvdXRlUGFyYW1zLmRhdGFJZDsKCiAgICAgICAgICAgICRzY29wZS5jbGVhckVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgJHNjb3BlLmhhc0Vycm9yID0gZmFsc2U7CiAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzID0gIiI7CiAgICAgICAgICAgICAgICAkc2NvcGUuc3RhdHVzX2RhdGEgPSAiIjsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICRzY29wZS5wcm9jZXNzRXJyb3IgPSBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAkc2NvcGUuaGFzRXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgJHNjb3BlLnN0YXR1cyA9IHN0YXR1czsKICAgICAgICAgICAgICAgICRzY29wZS5zdGF0dXNfZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpOwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLmdldENvbmZpZ3VyYXRpb24gPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB2YXIgdXJsID0gJy9zZXJ2aWNlL2Nvc21vcy5mb3Jtcy8nICsgJHNjb3BlLmZvcm1JZCArICcvJzsKCiAgICAgICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLmdldCh1cmwsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5kYXRhID0ge307CiAgICAgICAgICAgICAgICAgICAgICAgICRzY29wZS5mb3JtID0gZGF0YTsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmdldERhdGEoKTsKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NFcnJvcihkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICAkc2NvcGUuZ2V0RGF0YSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuZGF0YUlkKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHVybCA9ICRzY29wZS5mb3JtLmFjdGlvbiArICcvJyArICRzY29wZS5kYXRhSWQgKyAnLyc7CiAgICAgICAgICAgICAgICAgICAgQ29zbW9zU2VydmljZS5nZXQodXJsLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLmRhdGEgPSBkYXRhOwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiAoZGF0YSwgc3RhdHVzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NSZXN1bHQgPSBmdW5jdGlvbiAoZm9ybSwgcmVzdWx0KSB7CiAgICAgICAgICAgICAgICBpZiAoZm9ybSAmJiBmb3JtLm9uc3VjY2VzcykgewogICAgICAgICAgICAgICAgICAgIGlmIChmb3JtLm9uc3VjY2Vzcy50eXBlID09PSAidXJsIikgewogICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGZvcm0ub25zdWNjZXNzLnZhbHVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChmb3JtLm9uc3VjY2Vzcy50eXBlID09PSAibWVzc2FnZSIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZS5wdXNoKHsibWVzc2FnZSI6IGZvcm0ub25zdWNjZXNzLnZhbHVlLCAidGl0bGUiOiAiU3VjZXNzIiwgImRhdGEiOiByZXN1bHR9KTsKICAgICAgICAgICAgICAgICAgICAgICAgJGxvY2F0aW9uLnBhdGgoJy9tZXNzYWdlJyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgJHNjb3BlLm9uU3VibWl0ID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgaWYgKCRzY29wZS5mb3JtLmFjdGlvbikgewogICAgICAgICAgICAgICAgICAgIGlmICgkc2NvcGUuZm9ybS5hY3Rpb24pIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkc2NvcGUuZGF0YUlkKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLnBvc3QoJHNjb3BlLmZvcm0uYWN0aW9uLCAkc2NvcGUuZGF0YSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NSZXN1bHQoJHNjb3BlLmZvcm0sIGRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB1cmwgPSAkc2NvcGUuZm9ybS5hY3Rpb24gKyAnLycgKyAkc2NvcGUuZGF0YUlkICsgJy8nOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgQ29zbW9zU2VydmljZS5wdXQodXJsLCAkc2NvcGUuZGF0YSwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnByb2Nlc3NSZXN1bHQoJHNjb3BlLmZvcm0sIGRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKGRhdGEsIHN0YXR1cykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc2NvcGUucHJvY2Vzc0Vycm9yKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICRzY29wZS5nZXRDb25maWd1cmF0aW9uKCk7CgogICAgICAgIH1dKQoKICAgIC5jb250cm9sbGVyKCdQYWdlVmlld0N0cmwnLCBbJyRzY29wZScsICckcm91dGVQYXJhbXMnLCAnQ29zbW9zU2VydmljZScsIGZ1bmN0aW9uICgkc2NvcGUsICRyb3V0ZVBhcmFtcywgQ29zbW9zU2VydmljZSkgewogICAgICAgICRzY29wZS5wYWdlSWQgPSAkcm91dGVQYXJhbXMucGFnZUlkOwoKICAgICAgICAkc2NvcGUuZ2V0Q29uZmlndXJhdGlvbiA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdmFyIHVybCA9ICcvc2VydmljZS9jb3Ntb3MucGFnZXMvJyArICRzY29wZS5wYWdlSWQgKyAnLyc7CgogICAgICAgICAgICBDb3Ntb3NTZXJ2aWNlLmdldCh1cmwsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgJHNjb3BlLnBhZ2UgPSBkYXRhOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgICAgICAgICAgICAgICAgICAvLyRzY29wZS5wcm9jZXNzRXJyb3IoZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgKTsKICAgICAgICB9OwoKICAgICAgICAkc2NvcGUuZ2V0Q29uZmlndXJhdGlvbigpOwoKICAgIH1dKQoKOwo=')
},
{
'name': '/app/img/.gitkeep', 'data': base64.b64decode('')
},
{
'name': '/app/data/app_init.json', 'data': base64.b64decode('ewogICAgImlkIjogIjJmZmQ3NTZlNzMxNzdiOTZjYTc3NTczNjQ0YmIyOWJiIiwKICAgICJuYW1lIjogImNvc21vcy5hcHBsaWNhdGlvbi5hZG1pbiIsCiAgICAidGl0bGUiOiAiQ29zbW9zIEFkbWluIEFwcGxpY2F0aW9uIiwKICAgICJhdXRob3IiOiAiTWFydWYgTWFuaXJ1enphbWFuIiwKICAgICJjb250YWN0IjogIm1hcnVmbUBjb3Ntb3NmcmFtZXdvcmsuY29tIiwKICAgICJ3ZWJzaXRlIjogImh0dHA6Ly93d3cuY29zbW9zZnJhbWV3b3JrLmNvbSIsCiAgICAiY29weXJpZ2h0IjogIihjKSAyMDE0LCBNYXJ1ZiBNYW5pcnV6emFtYW4iLAogICAgImxpY2Vuc2UiOiAiTUlUIiwKICAgICJ2ZXJzaW9uIjogIjAuMDAuMDAxLjAwIiwKICAgICJzZXR0aW5ncyI6IHsKICAgICAgICAibmFtZSI6ICJib290c3RyYXBfb2JqZWN0cyIsCiAgICAgICAgInZhbHVlIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAib2JqZWN0IjogInVzZXJkYXRhLndpZGdldHMiLAogICAgICAgICAgICAgICAgImRhdGEiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJ3aWRnZXRfcHJvZHVjdF9saXN0Lmh0bWwiLAogICAgICAgICAgICAgICAgICAgICAgICAidGVtcGxhdGUiOiAiPGRpdiBjbGFzcz1cInByb2R1Y3RcIiBuZy1yZXBlYXQ9XCJpdGVtIGluIGRhdGFcIiBuZy1pbmNsdWRlPVwiICd3aWRnZXRfcHJvZHVjdC5odG1sJyBcIiAvPiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfaWQiOiAiNTNjMTk1Y2M4YzY2YWIzNWZhYjU0OGRjIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJ3aWRnZXRfcHJvZHVjdC5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgInRlbXBsYXRlIjogIjxsYWJlbD5UZXN0PC9sYWJlbD48ZGl2IG5nLXJlcGVhdD1cImNvbHVtbiBpbiBsaXN0Q29uZmlndXJhdGlvbi5jb2x1bW5zXCI+e3tpdGVtW2NvbHVtbi5uYW1lXX19PC9kaXY+IiwKICAgICAgICAgICAgICAgICAgICAgICAgIl9pZCI6ICI1M2MxOTcwMThjNjZhYjM1ZmFiNTQ4ZGQiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogImxpc3QtZGV0YWlsLmh0bWwiLAogICAgICAgICAgICAgICAgICAgICAgICAidGVtcGxhdGUiOiAiPGRpdj48ZXJyb3IgbmctaW5jbHVkZT1cIiAnd2lkZ2V0X2Vycm9yX2Jhbm5lci5odG1sJyBcIiAvPjwvZGl2PjxoMz57e2xpc3RDb25maWd1cmF0aW9uLnRpdGxlfX08L2gzPjxkaXYgY2xhc3M9XCJsZWZ0LWNvbFwiPjwvZGl2PjxkaXYgY2xhc3M9XCJyaWdodC1jb2xcIiBuZy1pbmNsdWRlPVwiICd3aWRnZXRfcHJvZHVjdF9saXN0Lmh0bWwnIFwiID48L2Rpdj4iLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzYzFjZWFkOGM2NmFiNjMwMjVlMGMwNiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiZm9ybV9saXN0X3dpZGdldC5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgInRlbXBsYXRlIjogIjxkaXYgbmctcmVwZWF0PVwiaXRlbSBpbiBkYXRhXCI+PGEgaHJlZj1cIiMvZm9ybXMve3tpdGVtWydfaWQnXX19XCI+e3tpdGVtWyd0aXRsZSddfX08L2E+IDxhIGNsYXNzPVwiYnRuIGJ0bi14cyBidG4td2FybmluZyBnbHlwaGljb24gZ2x5cGhpY29uLWVkaXQgcHVsbC1yaWdodFwiIGhyZWY9XCIjL2Zvcm1kZXNpZ24ve3tpdGVtWydfaWQnXX19XCI+PC9hPjwvZGl2PiIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfaWQiOiAiNTNkNjA0YWE4YzY2YWI1NDUwNDExNDI5IgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJsaXN0LWNvbmZpZy1kZXRhaWwuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZW1wbGF0ZSI6ICI8dGFibGUgY2xhc3M9XCJ0YWJsZVwiPjx0cj48dGg+SWQ8L3RoPjx0aD5PYmplY3Q8L3RoPjx0aD5UaXRsZTwvdGg+PHRoPkNvbHVtbnM8L3RoPjwvdHI+PHRyIG5nLXJlcGVhdD1cIml0ZW0gaW4gZGF0YVwiPjx0ZD57e2l0ZW0uX2lkfX08L3RkPjx0ZD57e2l0ZW0ub2JqZWN0TmFtZX19PHRkPnt7aXRlbS50aXRsZX19PC90ZD4gPHRkPjxkaXYgbmctcmVwZWF0PVwiY29sdW1uIGluIGl0ZW0uY29sdW1uc1wiPnt7Y29sdW1uLnRpdGxlfX0gKHt7Y29sdW1uLm5hbWV9fSk8L2Rpdj48L3RkPjwvdHI+PC90YWJsZT4iLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzZDg1NGFhOGM2NmFiNTQ1MDQxMTQzMCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAid2lkZ2V0LWxpc3QuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZW1wbGF0ZSI6ICI8dGFibGUgY2xhc3M9XCJ0YWJsZVwiPlxuICAgIDx0cj5cbiAgICAgICAgPHRoPk5hbWU8L3RoPjx0aD5UZW1wbGF0ZTwvdGg+PHRoPiZuYnNwOzwvdGg+XG4gICAgPC90cj5cbiAgICA8dHIgbmctcmVwZWF0PVwiaXRlbSBpbiBkYXRhXCI+XG4gICAgICAgIDx0ZD57e2l0ZW0ubmFtZX19PC90ZD5cbiAgICAgICAgPHRkPnt7aXRlbS50ZW1wbGF0ZX19PC90ZD5cbiAgICAgICAgPHRkPjxhIGhyZWY9XCIvIy9mb3Jtcy81M2Q5MGY2ZjhjNjZhYjU0NTA0MTE0Mzcve3tpdGVtLl9pZH19L1wiPkVkaXQ8L2E+PC90ZD5cbiAgICA8L3RyPlxuPC90YWJsZT5cblxuPGEgY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiBocmVmPVwiLyMvZm9ybXMvNTNkOTBmNmY4YzY2YWI1NDUwNDExNDM3XCI+TmV3IHdpZGdldDwvYT4iLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzZGJhYTEzOGM2NmFiNTk2MGM0YWFhZiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIl9pZCI6ICI1M2U3ZDNjNzhjNjZhYjdkYjgzZjZjNjQiLAogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJsaXN0Y29uZmlnLWNvbHVtbnMuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZW1wbGF0ZSI6ICI8ZGl2IG5nLXJlcGVhdD1cImNvbHVtbiBpbiBpdGVtLmNvbHVtbnNcIj5cbiAgICB7e2NvbHVtbi50aXRsZX19ICh7e2NvbHVtbi5uYW1lfX0pXG48L2Rpdj4iCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJfaWQiOiAiNTNlYjUzM2U4YzY2YWI3ZGI4M2Y2YzY1IiwKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiY29zbW9zLWVkaXRvci12aWV3Lmh0bWwiLAogICAgICAgICAgICAgICAgICAgICAgICAidGVtcGxhdGUiOiAiPGRpdiB1aS1hY2UgY2xhc3M9XCJlZGl0b3JcIiByZWFkb25seT1cInJlYWRvbmx5XCIgbmctbW9kZWw9XCJpdGVtW2NvbHVtbi5uYW1lXVwiPjwvZGl2PiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAid2lkZ2V0X2Vycm9yX2Jhbm5lci5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgInRlbXBsYXRlIjogIjxkaXYgbmctc2hvdz1cImhhc0Vycm9yXCIgY2xhc3M9XCJiZy13YXJuaW5nXCI+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4teHMgYnRuLWRhbmdlciBnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZSBwdWxsLXJpZ2h0XCIgbmctY2xpY2s9XCJjbGVhckVycm9yKCk7XCI+PC9idXR0b24+XG4gICAgPGRpdj48bGFiZWw+RXJyb3IgY29kZTo8L2xhYmVsPjxzcGFuIG5nLWJpbmQ9XCJzdGF0dXNcIiAvPjwvZGl2PiBcbiAgICA8ZGl2IG5nLWJpbmQ9XCJzdGF0dXNfZGF0YVwiPjwvZGl2PlxuPC9kaXY+IiwKICAgICAgICAgICAgICAgICAgICAgICAgIl9pZCI6ICI1M2MxYzcwMDhjNjZhYjM1ZmFkNGM3YWUiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogImNvc21vcy5iYXNpY2xpc3QuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJ0ZW1wbGF0ZSI6ICI8ZGl2PlxuPGVycm9yIG5nLWluY2x1ZGU9XCIgJ3dpZGdldF9lcnJvcl9iYW5uZXIuaHRtbCcgXCIgLz5cbjwvZGl2PlxuPGgzPnt7bGlzdENvbmZpZ3VyYXRpb24udGl0bGV9fTwvaDM+XG48ZGl2IGNsYXNzPVwibGVmdC1jb2xcIj5cbjwvZGl2PlxuPHRhYmxlIGNsYXNzPVwidGFibGUgdGFibGUtaG92ZXIgcmlnaHQtY29sXCI+XG4gICAgPHRoZWFkPlxuICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGggbmctcmVwZWF0PVwiY29sdW1uIGluIGxpc3RDb25maWd1cmF0aW9uLmNvbHVtbnNcIiBuZy1pZj1cImNvbHVtbi5zaG93SW5MaXN0XCI+e3tjb2x1bW4udGl0bGV9fTwvdGg+XG4gICAgICAgICAgICA8dGggbmctaWY9XCJsaXN0Q29uZmlndXJhdGlvbi5lZGl0YWJsZSAmJiBsaXN0Q29uZmlndXJhdGlvbi5pdGVtZWRpdG9yX2lkXCI+Jm5ic3A7PC90aD5cbiAgICAgICAgPC90cj5cbiAgICA8L3RoZWFkPlxuICAgIDx0Ym9keT5cbiAgICAgICAgPHRyIG5nLXJlcGVhdD1cIml0ZW0gaW4gZGF0YVwiPlxuICAgICAgICAgICAgPHRkIG5nLXJlcGVhdD1cImNvbHVtbiBpbiBsaXN0Q29uZmlndXJhdGlvbi5jb2x1bW5zXCIgbmctY2xpY2s9XCJzaG93RGV0YWlscygnbGcnLCBpdGVtLCBsaXN0Q29uZmlndXJhdGlvbilcIiBuZy1pZj1cImNvbHVtbi5zaG93SW5MaXN0XCI+XG4gICAgICAgICAgICAgICAgPGRpdiBuZy1pZj1cImNvbHVtbi53aWRnZXQgJiYgY29sdW1uLndpZGdldC5sZW5ndGg+MFwiIG5nLWluY2x1ZGU9XCJjb2x1bW4ud2lkZ2V0XCI+XG4gICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxkaXYgbmctaWY9XCIhY29sdW1uLndpZGdldFwiPlxuICAgICAgICAgICAgICAgICAgICB7e2l0ZW1bY29sdW1uLm5hbWVdfX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGQgbmctaWY9XCJsaXN0Q29uZmlndXJhdGlvbi5lZGl0YWJsZSAmJmxpc3RDb25maWd1cmF0aW9uLml0ZW1lZGl0b3JfaWRcIj5cbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiIy9mb3Jtcy97e2xpc3RDb25maWd1cmF0aW9uLml0ZW1lZGl0b3JfaWR9fS97e2l0ZW0uX2lkfX1cIj5FZGl0PC9hPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICA8L3Rib2R5PlxuPC90YWJsZT4iLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzZTdhNzQ5OGM2NmFiN2RiODNmNmM2MyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiZm9ybXMtbGlzdC5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgInRlbXBsYXRlIjogIiA8ZGl2PlxuIDxlcnJvciBuZy1pbmNsdWRlPVwiICd3aWRnZXRfZXJyb3JfYmFubmVyLmh0bWwnIFwiIC8+PC9kaXY+XG4gPGgzPnt7bGlzdENvbmZpZ3VyYXRpb24udGl0bGV9fTwvaDM+IFxuIDxkaXYgY2xhc3M9XCJsZWZ0LWNvbFwiPjwvZGl2PjxkaXYgY2xhc3M9XCJyaWdodC1jb2xcIiBuZy1pbmNsdWRlPVwiICdmb3JtX2xpc3Rfd2lkZ2V0Lmh0bWwnIFwiID48L2Rpdj5cbiA8YSBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiIGhyZWY9XCIjL2Zvcm1kZXNpZ24vXCI+TmV3IGZvcm08L2E+IiwKICAgICAgICAgICAgICAgICAgICAgICAgIl9pZCI6ICI1M2Q2MDJlMjhjNjZhYjU0NTA0MTE0MjgiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAib2JqZWN0IjogInVzZXJkYXRhLmxpc3Rjb25maWd1cmF0aW9ucyIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ3aWRnZXROYW1lIjogImxpc3QtZGV0YWlsLmh0bWwiLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzYzBmNjVhOGM2NmFiM2RmMmU3MjFmZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJvYmplY3ROYW1lIjogImNvc21vcy5yYmFjLm9iamVjdC5yb2xlIiwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbHVtbnMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAibmFtZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIk5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogInNpZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlNJRCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlJvbGVzIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiRm9ybXMiLAogICAgICAgICAgICAgICAgICAgICAgICAiX2lkIjogIjUzZDYwY2NlOGM2NmFiNTQ1MDQxMTQyYSIsCiAgICAgICAgICAgICAgICAgICAgICAgICJjb2x1bW5zIjogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogIl9pZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIklkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJ0aXRsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIlRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAib2JqZWN0TmFtZSI6ICJjb3Ntb3MuZm9ybXMiLAogICAgICAgICAgICAgICAgICAgICAgICAid2lkZ2V0TmFtZSI6ICJmb3Jtcy1saXN0Lmh0bWwiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJ3aWRnZXROYW1lIjogImNvc21vcy5iYXNpY2xpc3QuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJfaWQiOiAiNTNkODUzZWY4YzY2YWI1NDUwNDExNDJmIiwKICAgICAgICAgICAgICAgICAgICAgICAgIm9iamVjdE5hbWUiOiAidXNlcmRhdGEubGlzdGNvbmZpZ3VyYXRpb25zIiwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbHVtbnMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNob3dJbkxpc3QiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogInRpdGxlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiVGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzaG93SW5MaXN0IjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJvYmplY3ROYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiT2JqZWN0IG5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzaG93SW5MaXN0IjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJ3aWRnZXROYW1lIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiV2lkZ2V0IE5hbWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJzaG93SW5MaXN0IjogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAid2lkZ2V0IjogImxpc3Rjb25maWctY29sdW1ucy5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJjb2x1bW5zIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiQ29sdW1uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAidGl0bGUiOiAiTGlzdCBjb25maWd1cmF0aW9ucyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIndpZGdldE5hbWUiOiAiY29zbW9zLmJhc2ljbGlzdC5odG1sIiwKICAgICAgICAgICAgICAgICAgICAgICAgIl9pZCI6ICI1M2RiYTkzZjhjNjZhYjU5NjBjNGFhYWUiLAogICAgICAgICAgICAgICAgICAgICAgICAib2JqZWN0TmFtZSI6ICJ1c2VyZGF0YS53aWRnZXRzIiwKICAgICAgICAgICAgICAgICAgICAgICAgImNvbHVtbnMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInNob3dJbkxpc3QiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJuYW1lIjogIm5hbWUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ0aXRsZSI6ICJOYW1lIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAic2hvd0luTGlzdCI6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIndpZGdldCI6ICJjb3Ntb3MtZWRpdG9yLXZpZXcuaHRtbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAidGVtcGxhdGUiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ0aXRsZSI6ICJUZW1wbGF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgInRpdGxlIjogIldpZGdldHMiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgXQogICAgfQp9')
},
{
'name': '/app/data/components.json', 'data': base64.b64decode('LyoqCiAqIENyZWF0ZWQgYnkgbWFydWYgbWFuaXJ1enphbWFuIG9uIDgvMjEvMTQuCiAqLwpbCnsKICAgICJuYW1lIjoicGF5cGFsYnV0dG9uIiwKICAgICJ0aXRsZSI6ICJQYXlwYWwgQnV0dG9uIiwKICAgICJzZXR0aW5ncyI6WwogICAgICAgIHsKICAgICAgICAgICAgImVtYWlsIjogInRleHQiLAogICAgICAgICAgICAiaXRlbW5hbWUiOiJ0ZXh0IiwKICAgICAgICAgICAgIml0ZW1pZCI6InRleHQiLAogICAgICAgICAgICAicHJpY2UiOiJ0ZXh0IiwKICAgICAgICAgICAgImN1cnJlbmN5IjoiQ3VycmVuY3kiCiAgICAgICAgfQogICAgXQp9Cl0=')
},
{
'name': '/app/css/.gitkeep', 'data': base64.b64decode('')
},
{
'name': '/app/css/app.css', 'data': base64.b64decode('LyogYXBwIGNzcyBzdHlsZXNoZWV0ICovCgoubWVudSB7CiAgbGlzdC1zdHlsZTogbm9uZTsKICBib3JkZXItYm90dG9tOiAwLjFlbSBzb2xpZCBibGFjazsKICBtYXJnaW4tYm90dG9tOiAyZW07CiAgcGFkZGluZzogMCAwIDAuNWVtOwp9CgoubWVudTpiZWZvcmUgewogIGNvbnRlbnQ6ICJbIjsKfQoKLm1lbnU6YWZ0ZXIgewogIGNvbnRlbnQ6ICJdIjsKfQoKLm1lbnUgPiBsaSB7CiAgZGlzcGxheTogaW5saW5lOwp9CgoubWVudSA+IGxpOmJlZm9yZSB7CiAgY29udGVudDogInwiOwogIHBhZGRpbmctcmlnaHQ6IDAuM2VtOwp9CgoubWVudSA+IGxpOm50aC1jaGlsZCgxKTpiZWZvcmUgewogIGNvbnRlbnQ6ICIiOwogIHBhZGRpbmc6IDA7Cn0KCi5wcm9kdWN0IHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWF4LXdpZHRoOiAyMDBweDsKICAgIGhlaWdodDogMjUwcHg7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjRUZFRkVGOwogICAgbWFyZ2luOiA3cHg7CiAgICBwYWRkaW5nOiA3cHg7Cn0KCi5lZGl0b3J7CiAgICBtaW4td2lkdGg6IDQwMHB4Owp9CgouYWNlX2VkaXRvciB7CiAgICBtaW4taGVpZ2h0OiAyMDBweDsKfQoKLnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVyID4gdGQgewogICAgY3Vyc29yOiBwb2ludGVyOwogICAgY3Vyc29yOiBoYW5kOwp9')
},
{
'name': '/app/partials/message.html', 'data': base64.b64decode('PGgxPnt7bWVzc2FnZS50aXRsZX19PC9oMT4KPGRpdj57e21lc3NhZ2UubWVzc2FnZX19PC9kaXY+CjxkaXY+e3ttZXNzYWdlLmRhdGF9fTwvZGl2Pg==')
},
{
'name': '/app/partials/roles.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+Um9sZXM8L2gzPgoKPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGg+U0lEPC90aD4KICAgICAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgICAgICA8dGg+Jm5ic3A7PC90aD4KICAgICAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9InJvbGUgaW4gcm9sZXMiPgogICAgICAgIDx0ZD57e3JvbGUuc2lkfX08L3RkPjx0ZD57e3JvbGUubmFtZX19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLXdhcm5pbmcgZ2x5cGhpY29uIGdseXBoaWNvbi1lZGl0IiBuZy1jbGljaz0iZWRpdFJvbGUoJGluZGV4KTsiPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIgZ2x5cGhpY29uIGdseXBoaWNvbi1yZW1vdmUiIG5nLWNsaWNrPSJyZW1vdmVSb2xlKCRpbmRleCk7Ij48L2J1dHRvbj4KICAgICAgICA8L3RkPgogICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+Cgo8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJhZGRSb2xlKCdsZycpIj5DcmVhdGUgcm9sZTwvYnV0dG9uPg==')
},
{
'name': '/app/partials/widget-host.html', 'data': base64.b64decode('PGRpdiBuZy1pbmNsdWRlPSJsaXN0Q29uZmlndXJhdGlvbi53aWRnZXROYW1lIiAvPjwvZGl2Pg==')
},
{
'name': '/app/partials/form-design.html', 'data': base64.b64decode('')
},
{
'name': '/app/partials/uploadfile.html', 'data': base64.b64decode('PHN0eWxlPgouZmlsZS1saXN0IHsKICAgIHBhZGRpbmctYm90dG9tOiAxMHB4Owp9Ci5maWxlLXNlbGVjdG9yewogICAgbWFyZ2luOiA1cHg7Cn0KPC9zdHlsZT4KCjxkaXYgbmctc2hvdz0iaGFzRXJyb3IiIGNsYXNzPSJiZy13YXJuaW5nIj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciBnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZSBwdWxsLXJpZ2h0IiBuZy1jbGljaz0iY2xlYXJFcnJvcigpOyI+PC9idXR0b24+CiAgICA8ZGl2PjxsYWJlbD5FcnJvciBjb2RlOjwvbGFiZWw+PHNwYW4gbmctYmluZD0ic3RhdHVzIj48L3NwYW4+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9ImlGcmFtZVBsYWNlaG9sZGVyIj48L2Rpdj4KCjx0YWJsZSBjbGFzcz0idGFibGUiPgogICAgPHRoZWFkPgogICAgPHRyPgogICAgICAgIDx0aD5GaWxlIElkPC90aD4KICAgICAgICA8dGg+RmlsZSBzaXplPC90aD4KICAgICAgICA8dGg+RmlsZSBuYW1lPC90aD4KICAgICAgICA8dGg+RmlsZSBNRDU8L3RoPgogICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgPC90cj4KICAgIDwvdGhlYWQ+CiAgICA8dGJvZHk+CiAgICA8dHIgbmctcmVwZWF0PSJmaWxlIGluIHVwbG9hZGVkX2ZpbGVzIj4KICAgICAgICA8dGQ+e3tmaWxlLmZpbGVfaWR9fTwvdGQ+PHRkPnt7ZmlsZS5sZW5ndGh9fTwvdGQ+PHRkPnt7ZmlsZS5maWxlbmFtZX19PC90ZD48dGQ+e3tmaWxlLm1kNX19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1zdWNjZXNzIGdseXBoaWNvbiBnbHlwaGljb24tZG93bmxvYWQiIGhyZWY9Ii9ncmlkZnMve3tmaWxlLmNvbGxlY3Rpb25fbmFtZX19L3t7ZmlsZS5maWxlX2lkfX0vIj48L2E+CiAgICAgICAgPC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciBnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZSIgbmctY2xpY2s9InJlbW92ZUZpbGUoJGluZGV4KSI+PC9idXR0b24+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+CiAgICA8L3Rib2R5Pgo8L3RhYmxlPgoKPGZvcm0gaWQ9InVwbG9hZEZvcm0iIG1ldGhvZD0nUE9TVCcgZW5jdHlwZT0nbXVsdGlwYXJ0L2Zvcm0tZGF0YScgdGFyZ2V0PSdzdWJtaXQtaWZyYW1lJyBhY3Rpb249Ii9ncmlkZnMvdXNlcmZpbGVzLnByb2R1Y3RzIj4KICAgIDxkaXYgY2xhc3M9ImZpbGUtbGlzdCIgaWQ9ImZpbGVMaXN0Ij4KICAgICAgICA8aW5wdXQgY2xhc3M9ImZpbGUtc2VsZWN0b3IiIG5hbWU9InVwbG9hZGVkZmlsZSIgdHlwZT0iZmlsZSIgb25jaGFuZ2U9ImFuZ3VsYXIuZWxlbWVudCh0aGlzKS5zY29wZSgpLmZpbGVOYW1lQ2hhbmdlZCh0aGlzKSIgLz4KICAgIDwvZGl2PgogICAgPGJ1dHRvbiAgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBnbHlwaGljb24gZ2x5cGhpY29uLWNsb3VkLXVwbG9hZCIgbmctY2xpY2s9InVwbG9hZEZpbGUoKSIgPiBVcGxvYWQgPC9idXR0b24+CjwvZm9ybT4=')
},
{
'name': '/app/partials/show_json.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgIDxoMyBjbGFzcz0ibW9kYWwtdGl0bGUiPkRldGFpbHM8L2gzPgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICA8ZGl2IGpzb24taHVtYW49Im1vZGVsIj48L2Rpdj4KPC9kaXY+CjxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiIG5nLWNsaWNrPSJjYW5jZWwoKSI+Q2xvc2U8L2J1dHRvbj4KPC9kaXY+')
},
{
'name': '/app/partials/page.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0iY29udGFpbmVyIHRoZW1lLXNob3djYXNlIiByb2xlPSJtYWluIj4KICAgICAgICA8ZGl2IG5nLXJlcGVhdD0iZmllbGQgaW4gcGFnZS5maWVsZHMiPgogICAgICAgICAgICA8ZmllbGQgaXRlbT0iZmllbGQiPjwvZmllbGQ+CiAgICAgICAgPC9kaXY+Cgo8aHIgLz4KICAgICAgICAgICAgICAgIHt7cGFnZX19Cgo8L2Rpdj4=')
},
{
'name': '/app/partials/formview.html', 'data': base64.b64decode('PGVycm9yLWJhbm5lcj48L2Vycm9yLWJhbm5lcj4KCjxmb3JtPgogICAgPGRpdj4KICAgICAgICA8aDE+e3tmb3JtLnRpdGxlfX08L2gxPgogICAgPC9kaXY+CiAgICA8dWw+CiAgICAgICAgPGxpIG5nLXJlcGVhdD0iZmllbGQgaW4gZm9ybS5maWVsZHMiPgogICAgICAgICAgICA8ZmllbGQgaXRlbT0iZmllbGQiIHZhbD0iZGF0YVtmaWVsZC5uYW1lXSI+PC9maWVsZD4KICAgICAgICA8L2xpPgogICAgPC91bD4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgbmctY2xpY2s9Im9uU3VibWl0KCkiPlN1Ym1pdDwvYnV0dG9uPgo8L2Zvcm0+CjxociAvPgp7e2RhdGF9fQ==')
},
{
'name': '/app/partials/list.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+e3t0aXRsZX19PC9oMz4KPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgICAgPHRoPklkPC90aD4KICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9Imxpc3QgaW4gbGlzdHMiPgogICAgICAgIDx0ZD48YSBocmVmPSIjL3t7c2VydmljZU5hbWV9fS97e2xpc3QuX2lkfX0vIj57e2xpc3QuX2lkfX08L2E+PC90ZD4KICAgICAgICA8dGQ+PGEgaHJlZj0iIy97e3NlcnZpY2VOYW1lfX0ve3tsaXN0Ll9pZH19LyI+e3tsaXN0LnRpdGxlfX08L2E+PC90ZD4KICAgIDwvdHI+CiAgICA8L3Rib2R5Pgo8L3RhYmxlPgoKPGRpdiBuZy1yZXBlYXQ9ImxpbmsgaW4gbGlua3MiPgogICAgPGEgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgaHJlZj0ie3tsaW5rLmhyZWZ9fSI+e3tsaW5rLnRpdGxlfX08L2E+Jm5ic3A7CjwvZGl2Pg==')
},
{
'name': '/app/partials/home.html', 'data': base64.b64decode('ICAgIDxkaXYgY2xhc3M9Im5hdmJhciBuYXZiYXItaW52ZXJzZSBuYXZiYXItZml4ZWQtdG9wIiByb2xlPSJuYXZpZ2F0aW9uIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItaGVhZGVyIj4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXZiYXItYnJhbmQiIGhyZWY9Ii8iPkNvc21vcyBGcmFtZXdvcms8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJuYXZiYXItY29sbGFwc2UgY29sbGFwc2UiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii8iPkhvbWU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIy9saXN0cy8iPkxpc3RzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMvdXNlcnMiPlVzZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMvcm9sZXMiPlJvbGVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIG5nLXNob3c9ImxvZ2dlZEluKCkiPiA8YSBocmVmPSIvbG9nb3V0LyI+TG9nb3V0IFt7e3VzZXJOYW1lfX1dPC9hPiA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBuZy1zaG93PSIhbG9nZ2VkSW4oKSI+PGEgaHJlZj0iL2xvZ2luLmh0bWwiPkxvZ2luPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIHRoZW1lLXNob3djYXNlIiByb2xlPSJtYWluIj4KCiAgICAgICAgPGVycm9yLWJhbm5lcj48L2Vycm9yLWJhbm5lcj4KCiAgICAgICAgPGgzPk9wZXJhdGlvbnM8L2gzPgogICAgICAgIDxmb3JtIGNsYXNzPSJiYXNpYy1vcGVyYXRpb25zIiByb2xlPSJmb3JtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICA8bGFiZWw+U2VydmljZSBVUkwgKHJlbGF0aXZlKSAqPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0ibmFtZSIgdHlwZT0idGV4dCIgbmFtZT0ibmFtZSIgbmctbW9kZWw9InNlcnZpY2UiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5Db2x1bW5zIFtHRVRdPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iY29sdW1ucyIgdHlwZT0idGV4dCIgbmFtZT0iY29sdW1ucyIgbmctbW9kZWw9ImNvbHVtbnMiIHBsYWNlaG9sZGVyPSJuYW1lLGFkZHJlc3MiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgIDxsYWJlbD5GaWx0ZXIgW0dFVF08L2xhYmVsPgogICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJmaWx0ZXIiIHR5cGU9InRleHQiIG5hbWU9ImZpbHRlciIgbmctbW9kZWw9ImZpbHRlciIgcGxhY2Vob2xkZXI9J3sibmFtZSI6IkFicmFoYW0ifScvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICA8bGFiZWw+RGF0YSBbKiBQT1NUfFBVVF08L2xhYmVsPgogICAgICAgICAgICAgICAgPGRpdiB1aS1hY2U9InsnbW9kZSc6J2pzb24nfSIgbmctbW9kZWw9ImRhdGEiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgPGxhYmVsPlJlc3VsdDwvbGFiZWw+CiAgICAgICAgICAgICAgICA8ZGl2IHVpLWFjZT0ieydtb2RlJzonanNvbid9IiBuZy1tb2RlbD0icmVzdWx0Ij48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0iZ2V0KCkiPiAgR0VUIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0icG9zdCgpIj4gUE9TVCA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4taW5mbyIgbmctY2xpY2s9InB1dCgpIj4gIFBVVCA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGFuZ2VyIiBuZy1jbGljaz0iZGVsZXRlKCkiPkRFTEVURTwvYnV0dG9uPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Zvcm0+CiAgICAgICAgPC9kaXY+')
},
{
'name': '/app/partials/adduser.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgIDxoMyBjbGFzcz0ibW9kYWwtdGl0bGUiIG5nLXNob3c9IiFpc1VwZGF0aW5nIj5DcmVhdGUgbmV3IHVzZXI8L2gzPgogICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSIgbmctc2hvdz0iaXNVcGRhdGluZyI+VXBkYXRlIHVzZXI8L2gzPgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIj4KICAgICAgICA8ZGl2IG5nLXNob3c9Imhhc2Vycm9yIj5UaGVyZSBpcyBhbiBlcnJvciEhITwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPlVzZXJuYW1lPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnVzZXJuYW1lIiBuZy1yZWFkb25seT0iaXNVcGRhdGluZyI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPlBhc3N3b3JkPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0idXNlci5wYXNzd29yZCIgbmctc2hvdz0iIWlzVXBkYXRpbmciIC8+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkIiAgbmctc2hvdz0iaXNVcGRhdGluZyIKICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iTGVhdmUgYmxhbmsgdG8ga2VlcCBjdXJyZW50IHBhc3N3b3JkIiAvPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTMgY29udHJvbC1sYWJlbCI+UGFzc3dvcmQgYWdhaW48L2xhYmVsPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNSI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkX3JlIiBuZy1zaG93PSIhaXNVcGRhdGluZyI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkX3JlIiBuZy1zaG93PSJpc1VwZGF0aW5nIgogICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJMZWF2ZSBibGFuayB0byBrZWVwIGN1cnJlbnQgcGFzc3dvcmQiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0idXNlci5lbWFpbCI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIj5Sb2xlczwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMCI+CiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLWhvdmVyIj4KICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5TSUQ8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Jm5ic3A7PC90aD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgIDx0ciBuZy1yZXBlYXQ9InJvbGVfc2lkIGluIHVzZXIucm9sZXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNwYW4+e3tnZXRSb2xlTmFtZShyb2xlX3NpZCk7fX08L3NwYW4+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxzcGFuPnt7cm9sZV9zaWR9fTwvc3Bhbj4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciIgbmctY2xpY2s9InJlbW92ZVJvbGUoJGluZGV4KSI+eDwvYnV0dG9uPiA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNlbGVjdCBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0ic2VsZWN0ZWRfcm9sZSIgbmctb3B0aW9ucz0icm9sZS5zaWQgYXMgcm9sZS5uYW1lIGZvciByb2xlIGluIHJvbGVzIj48L3NlbGVjdD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0iYWRkUm9sZShzZWxlY3RlZF9yb2xlKSI+QWRkPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0ib2soKSI+T0s8L2J1dHRvbj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4td2FybmluZyIgbmctY2xpY2s9ImNhbmNlbCgpIj5DYW5jZWw8L2J1dHRvbj4KPC9kaXY+')
},
{
'name': '/app/partials/users.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+VXNlcnM8L2gzPgoKPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgIDx0aD5FbWFpbDwvdGg+CiAgICAgICAgPHRoPiZuYnNwOzwvdGg+CiAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9InVzZXIgaW4gdXNlcnMiPgogICAgICAgIDx0ZD57e3VzZXIudXNlcm5hbWV9fTwvdGQ+PHRkPnt7dXNlci5lbWFpbH19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLXdhcm5pbmcgZ2x5cGhpY29uIGdseXBoaWNvbi1lZGl0IiBuZy1jbGljaz0iZWRpdFVzZXIoJGluZGV4KTsiPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIgZ2x5cGhpY29uIGdseXBoaWNvbi1yZW1vdmUiIG5nLWNsaWNrPSJyZW1vdmVVc2VyKCRpbmRleCk7Ij48L2J1dHRvbj4KICAgICAgICA8L3RkPgogICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+Cgo8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJhZGRVc2VyKCdsZycpIj5DcmVhdGUgdXNlcjwvYnV0dG9uPgo=')
},
{
'name': '/app/partials/addrole.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgIDxoMyBjbGFzcz0ibW9kYWwtdGl0bGUiIG5nLXNob3c9IiFpc1VwZGF0aW5nIj5DcmVhdGUgbmV3IHJvbGU8L2gzPgogICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSIgbmctc2hvdz0iaXNVcGRhdGluZyI+VXBkYXRlIHJvbGU8L2gzPgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIj4KICAgICAgICA8ZGl2IG5nLXNob3c9Imhhc2Vycm9yIj5UaGVyZSBpcyBhbiBlcnJvciEhITwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0yIGNvbnRyb2wtbGFiZWwiPk5hbWUgKjwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS00Ij4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZS5uYW1lIiBwbGFjZWhvbGRlcj0iUm9sZSBuYW1lIj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCI+U0lEPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTgiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZS5zaWQiIG5nLXJlYWRvbmx5PSJpc1VwZGF0aW5nIiBwbGFjZWhvbGRlcj0iT3B0aW9uYWwsIHdpbGwgYmUgZ2VuZXJhdGVkIGlmIGxlZnQgZW1wdHkiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIj5Sb2xlIGl0ZW1zPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEwIj4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ob3ZlciI+CiAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+QWNjZXNzIHR5cGU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy0yIj5PYmplY3QgbmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTIiPlByb3BlcnR5PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkFjY2VzczwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgIDx0ciBuZy1yZXBlYXQ9InJvbGVfaXRlbSBpbiByb2xlLnJvbGVfaXRlbXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNlbGVjdCBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZV9pdGVtLnR5cGUiIG5nLW9wdGlvbnM9ImFjY2Vzc190eXBlLm5hbWUgYXMgYWNjZXNzX3R5cGUuZGlzcGxheSBmb3IgYWNjZXNzX3R5cGUgaW4gYWNjZXNzX3R5cGVzIj48L3NlbGVjdD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC14cy0yIj48aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmctbW9kZWw9InJvbGVfaXRlbS5vYmplY3RfbmFtZSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wteHMtMiI+PGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9InRleHQiIG5nLW1vZGVsPSJyb2xlX2l0ZW0ucHJvcGVydHlfbmFtZSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLnJlYWQiIC8+IFJlYWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmctbW9kZWw9InJvbGVfaXRlbS5hY2Nlc3NfYml0cy5pbnNlcnQiIC8+IEluc2VydAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLndyaXRlIiAvPiBXcml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLmRlbGV0ZSIgLz4gRGVsZXRlCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIiIG5nLWNsaWNrPSJyZW1vdmVSb2xlSXRlbSgkaW5kZXgpIj54PC9idXR0b24+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij48YnV0dG9uIG5nLWNsaWNrPSJhZGRSb2xlSXRlbSgpIj5BZGQ8L2J1dHRvbj4gPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0ib2soKSI+T0s8L2J1dHRvbj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4td2FybmluZyIgbmctY2xpY2s9ImNhbmNlbCgpIj5DYW5jZWw8L2J1dHRvbj4KPC9kaXY+')
},
{
'name': '/test/karma.conf.js', 'data': base64.b64decode('bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25maWcpewogIGNvbmZpZy5zZXQoewoKICAgIGJhc2VQYXRoIDogJy4uLycsCgogICAgZmlsZXMgOiBbCiAgICAgICdhcHAvYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyL2FuZ3VsYXIuanMnLAogICAgICAnYXBwL2Jvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1yb3V0ZS9hbmd1bGFyLXJvdXRlLmpzJywKICAgICAgJ2FwcC9ib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItbW9ja3MvYW5ndWxhci1tb2Nrcy5qcycsCiAgICAgICdhcHAvYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLWJvb3RzdHJhcC91aS1ib290c3RyYXAuanMnLAogICAgICAnYXBwL2Jvd2VyX2NvbXBvbmVudHMvYW5ndWxhci11aS1zb3J0YWJsZS9zb3J0YWJsZS5qcycsCiAgICAgICdhcHAvanMvKiovKi5qcycsCiAgICAgICd0ZXN0L3VuaXQvKiovKi5qcycKICAgIF0sCgogICAgYXV0b1dhdGNoIDogdHJ1ZSwKCiAgICBmcmFtZXdvcmtzOiBbJ2phc21pbmUnXSwKCiAgICBicm93c2VycyA6IFsnQ2hyb21lJ10sCgogICAgcGx1Z2lucyA6IFsKICAgICAgICAgICAgJ2thcm1hLWNocm9tZS1sYXVuY2hlcicsCiAgICAgICAgICAgICdrYXJtYS1maXJlZm94LWxhdW5jaGVyJywKICAgICAgICAgICAgJ2thcm1hLWphc21pbmUnLAogICAgICAgICAgICAna2FybWEtanVuaXQtcmVwb3J0ZXInCiAgICAgICAgICAgIF0sCgogICAganVuaXRSZXBvcnRlciA6IHsKICAgICAgb3V0cHV0RmlsZTogJ3Rlc3Rfb3V0L3VuaXQueG1sJywKICAgICAgc3VpdGU6ICd1bml0JwogICAgfQoKICB9KTsKfTsK')
},
{
'name': '/test/protractor-conf.js', 'data': base64.b64decode('ZXhwb3J0cy5jb25maWcgPSB7CiAgYWxsU2NyaXB0c1RpbWVvdXQ6IDExMDAwLAoKICBzcGVjczogWwogICAgJ2UyZS8qLmpzJwogIF0sCgogIGNhcGFiaWxpdGllczogewogICAgJ2Jyb3dzZXJOYW1lJzogJ2ZpcmVmb3gnCiAgfSwKCiAgYmFzZVVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8nLAoKICBmcmFtZXdvcms6ICdqYXNtaW5lJywKCiAgamFzbWluZU5vZGVPcHRzOiB7CiAgICBkZWZhdWx0VGltZW91dEludGVydmFsOiAzMDAwMAogIH0KfTsK')
},
{
'name': '/test/unit/servicesSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3Igc2VydmljZXMgZ28gaGVyZSAqLwoKZGVzY3JpYmUoJ3NlcnZpY2UnLCBmdW5jdGlvbigpIHsKICBiZWZvcmVFYWNoKG1vZHVsZSgnbXlBcHAuc2VydmljZXMnKSk7CgoKICBkZXNjcmliZSgndmVyc2lvbicsIGZ1bmN0aW9uKCkgewogICAgaXQoJ3Nob3VsZCByZXR1cm4gY3VycmVudCB2ZXJzaW9uJywgaW5qZWN0KGZ1bmN0aW9uKHZlcnNpb24pIHsKICAgICAgZXhwZWN0KHZlcnNpb24pLnRvRXF1YWwoJzAuMScpOwogICAgfSkpOwogIH0pOwp9KTsK')
},
{
'name': '/test/unit/controllersSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgY29udHJvbGxlcnMgZ28gaGVyZSAqLwoKZGVzY3JpYmUoJ2NvbnRyb2xsZXJzJywgZnVuY3Rpb24oKXsKICBiZWZvcmVFYWNoKG1vZHVsZSgnbXlBcHAnKSk7CiAgYmVmb3JlRWFjaChtb2R1bGUoJ215QXBwLmNvbnRyb2xsZXJzJykpOwoKCiAgICBpdCgnc2hvdWxkIGhhdmUgSG9tZUN0cmwgZGVmaW5lZCcsIGluamVjdChmdW5jdGlvbigkY29udHJvbGxlcikgewogICAgICAgIC8vc3BlYyBib2R5CiAgICAgICAgdmFyIG15Q3RybDEgPSAkY29udHJvbGxlcignSG9tZUN0cmwnLCB7ICRzY29wZToge30gfSk7CiAgICAgICAgZXhwZWN0KG15Q3RybDEpLnRvQmVEZWZpbmVkKCk7CiAgICB9KSk7CgogICAgaXQoJ3Nob3VsZCBoYXZlIE1lc3NhZ2VWaWV3Q3RybCBkZWZpbmVkJywgaW5qZWN0KGZ1bmN0aW9uKCRjb250cm9sbGVyKSB7CiAgICAgICAgLy9zcGVjIGJvZHkKICAgICAgICB2YXIgbXNnQ3RybCA9ICRjb250cm9sbGVyKCdNZXNzYWdlVmlld0N0cmwnLCB7ICRzY29wZToge30gfSk7CiAgICAgICAgZXhwZWN0KG1zZ0N0cmwpLnRvQmVEZWZpbmVkKCk7CiAgICB9KSk7CgogICAgaXQoJ3Nob3VsZCBoYXZlIEhvbWVDdHJsIGRlZmluZWQnLCBpbmplY3QoZnVuY3Rpb24oJGNvbnRyb2xsZXIpIHsKICAgICAgICB2YXIgbXNnQ3RybCA9ICRjb250cm9sbGVyKCdIb21lQ3RybCcsIHsgJHNjb3BlOiB7fSB9KTsKCiAgICB9KSk7Cn0pOwo=')
},
{
'name': '/test/unit/filtersSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgZmlsdGVycyBnbyBoZXJlICovCgpkZXNjcmliZSgnZmlsdGVyJywgZnVuY3Rpb24oKSB7CiAgYmVmb3JlRWFjaChtb2R1bGUoJ215QXBwLmZpbHRlcnMnKSk7CgoKICBkZXNjcmliZSgnaW50ZXJwb2xhdGUnLCBmdW5jdGlvbigpIHsKICAgIGJlZm9yZUVhY2gobW9kdWxlKGZ1bmN0aW9uKCRwcm92aWRlKSB7CiAgICAgICRwcm92aWRlLnZhbHVlKCd2ZXJzaW9uJywgJ1RFU1RfVkVSJyk7CiAgICB9KSk7CgoKICAgIGl0KCdzaG91bGQgcmVwbGFjZSBWRVJTSU9OJywgaW5qZWN0KGZ1bmN0aW9uKGludGVycG9sYXRlRmlsdGVyKSB7CiAgICAgIGV4cGVjdChpbnRlcnBvbGF0ZUZpbHRlcignYmVmb3JlICVWRVJTSU9OJSBhZnRlcicpKS50b0VxdWFsKCdiZWZvcmUgVEVTVF9WRVIgYWZ0ZXInKTsKICAgIH0pKTsKICB9KTsKfSk7Cg==')
},
{
'name': '/test/unit/directivesSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgZGlyZWN0aXZlcyBnbyBoZXJlICovCgpkZXNjcmliZSgnZGlyZWN0aXZlcycsIGZ1bmN0aW9uKCkgewogIGJlZm9yZUVhY2gobW9kdWxlKCdteUFwcC5kaXJlY3RpdmVzJykpOwoKICBkZXNjcmliZSgnYXBwLXZlcnNpb24nLCBmdW5jdGlvbigpIHsKICAgIGl0KCdzaG91bGQgcHJpbnQgY3VycmVudCB2ZXJzaW9uJywgZnVuY3Rpb24oKSB7CiAgICAgIG1vZHVsZShmdW5jdGlvbigkcHJvdmlkZSkgewogICAgICAgICRwcm92aWRlLnZhbHVlKCd2ZXJzaW9uJywgJ1RFU1RfVkVSJyk7CiAgICAgIH0pOwogICAgICBpbmplY3QoZnVuY3Rpb24oJGNvbXBpbGUsICRyb290U2NvcGUpIHsKICAgICAgICB2YXIgZWxlbWVudCA9ICRjb21waWxlKCc8c3BhbiBhcHAtdmVyc2lvbj48L3NwYW4+JykoJHJvb3RTY29wZSk7CiAgICAgICAgZXhwZWN0KGVsZW1lbnQudGV4dCgpKS50b0VxdWFsKCdURVNUX1ZFUicpOwogICAgICB9KTsKICAgIH0pOwogIH0pOwp9KTsK')
},
{
'name': '/test/e2e/scenarios.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvcHJvdHJhY3Rvci9ibG9iL21hc3Rlci9kb2NzL2dldHRpbmctc3RhcnRlZC5tZCAqLwoKZGVzY3JpYmUoJ0FkbWluIGFwcCcsIGZ1bmN0aW9uKCkgewoKICAgIGZ1bmN0aW9uIGxvZ2luKHB0b3IpewogICAgICAgIGJyb3dzZXIuZ2V0KCcvbG9naW4uaHRtbCcpOwogICAgICAgIHZhciB1c2VybmFtZSA9IHB0b3IuZmluZEVsZW1lbnQocHJvdHJhY3Rvci5CeS5pZCgndXNlcm5hbWUnKSk7CiAgICAgICAgdmFyIHBhc3N3b3JkID0gcHRvci5maW5kRWxlbWVudChwcm90cmFjdG9yLkJ5LmlkKCdwYXNzd29yZCcpKTsKICAgICAgICB2YXIgc3VibWl0ID0gcHRvci5maW5kRWxlbWVudChwcm90cmFjdG9yLkJ5LmlkKCd1bnB3ZGxvZ2luJykpOwoKICAgICAgICB1c2VybmFtZS5zZW5kS2V5cygnYWRtaW4nKTsKICAgICAgICBwYXNzd29yZC5zZW5kS2V5cygnYWRtaW4nKTsKICAgICAgICBzdWJtaXQuY2xpY2soKTsKICAgIH0KCiAgICBmdW5jdGlvbiBsb2dvdXQocHRvcil7CiAgICAgICAgdmFyIGxvZ291dCA9IHB0b3IuZmluZEVsZW1lbnQocHJvdHJhY3Rvci5CeS5saW5rVGV4dCgnTG9nb3V0IFthZG1pbl0nKSk7CiAgICAgICAgbG9nb3V0LmNsaWNrKCk7CiAgICB9CgogICAgYnJvd3Nlci5nZXQoJ2luZGV4Lmh0bWwnKTsKCiAgICBpdCgnc2hvdWxkIGF1dG9tYXRpY2FsbHkgcmVkaXJlY3QgdG8gL2hvbWUgd2hlbiBsb2NhdGlvbiBoYXNoL2ZyYWdtZW50IGlzIGVtcHR5JywgZnVuY3Rpb24oKSB7CiAgICAgICAgZXhwZWN0KGJyb3dzZXIuZ2V0TG9jYXRpb25BYnNVcmwoKSkudG9NYXRjaCgiL2hvbWUiKTsKICAgIH0pOwoKCiAgICBkZXNjcmliZSgnaG9tZScsIGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBwdG9yID0gcHJvdHJhY3Rvci5nZXRJbnN0YW5jZSgpOwoKICAgICAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICBicm93c2VyLmdldCgnIy9ob21lJyk7CiAgICAgICAgfSk7CgogICAgICAgIGl0KCdzaG91bGQgcmVuZGVyIGZvcm0gaW4gIy9ob21lIHBhZ2UnLCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgZXhwZWN0KGVsZW1lbnQuYWxsKGJ5LmNzcygnZm9ybScpKS5jb3VudCgpKS50b0VxdWFsKDEpOwogICAgICAgIH0pOwoKICAgIH0pOwoKICAgIGRlc2NyaWJlKCdsb2dpbicsIGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBwdG9yID0gcHJvdHJhY3Rvci5nZXRJbnN0YW5jZSgpOwoKICAgICAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uKCkgewogICAgICAgIH0pOwoKICAgICAgICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gbG9naW4gYW5kIGxvZ291dCcsIGZ1bmN0aW9uKCkgewogICAgICAgICAgICBsb2dpbihwdG9yKTsKCiAgICAgICAgICAgIHZhciBsb2dvdXQgPSBwdG9yLmZpbmRFbGVtZW50KHByb3RyYWN0b3IuQnkubGlua1RleHQoJ0xvZ291dCBbYWRtaW5dJykpOwogICAgICAgICAgICBleHBlY3QobG9nb3V0LmdldFRleHQoKSkudG9FcXVhbCgnTG9nb3V0IFthZG1pbl0nKTsKCiAgICAgICAgICAgIGxvZ291dC5jbGljaygpOwoKICAgICAgICAgICAgdmFyIGxvZ2luX2xpbmsgPSBwdG9yLmZpbmRFbGVtZW50KHByb3RyYWN0b3IuQnkubGlua1RleHQoJ0xvZ2luJykpOwogICAgICAgICAgICBleHBlY3QobG9naW5fbGluay5nZXRUZXh0KCkpLnRvRXF1YWwoJ0xvZ2luJyk7CiAgICAgICAgfSk7CiAgICB9KTsKCiAgICBkZXNjcmliZSgndXNlcnNlcnZpY2UnLCBmdW5jdGlvbigpIHsKICAgICAgICB2YXIgcHRvciA9IHByb3RyYWN0b3IuZ2V0SW5zdGFuY2UoKTsKCiAgICAgICAgYmVmb3JlRWFjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxvZ2luKHB0b3IpOwogICAgICAgIH0pOwoKICAgICAgICBhZnRlckVhY2goZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIGxvZ291dChwdG9yKTsKICAgICAgICB9KTsKCiAgICAgICAgaXQoJ3Nob3VsZCBiZSBhYmxlIHRvIGNyZWF0ZSBuZXcgdXNlcicsIGZ1bmN0aW9uICgpIHsKCiAgICAgICAgfSk7CiAgICB9KTsKCgp9KTsK')
}]
