# ------------------------------------------------- #
# Auto generated. Modification will be overwritten. #
# ------------------------------------------------- #

import base64

file_data_list=[
{
'name': '/.bowerrc', 'data': base64.b64decode('ewogICJkaXJlY3RvcnkiOiAiYXBwL2Jvd2VyX2NvbXBvbmVudHMiCn0=')
},
{
'name': '/LICENSE', 'data': base64.b64decode('VGhlIE1JVCBMaWNlbnNlCgpDb3B5cmlnaHQgKGMpIDIwMTAtMjAxNCBHb29nbGUsIEluYy4gaHR0cDovL2FuZ3VsYXJqcy5vcmcKClBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkKb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksIHRvIGRlYWwKaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cwp0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsCmNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcwpmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOgoKVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW4KYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuCgpUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgpJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwKRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFCkFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVIKTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwKT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTgpUSEUgU09GVFdBUkUuCgo=')
},
{
'name': '/bower.json', 'data': base64.b64decode('ewogICJuYW1lIjogImNvc21vcy1hZG1pbi1wYW5lbCIsCiAgImRlc2NyaXB0aW9uIjogIkFkbWluIHBhbmVsIGZvciBjb3Ntb3MgZnJhbWV3b3JrIiwKICAidmVyc2lvbiI6ICIwLjAuMCIsCiAgImhvbWVwYWdlIjogImh0dHA6Ly9jb3Ntb3NmcmFtZXdvcmsuY29tIiwKICAibGljZW5zZSI6ICJNSVQiLAogICJwcml2YXRlIjogdHJ1ZSwKICAiZGVwZW5kZW5jaWVzIjogewogICAgImFuZ3VsYXIiOiAiMS4yLngiLAogICAgImFuZ3VsYXItcm91dGUiOiAiMS4yLngiLAogICAgImFuZ3VsYXItbG9hZGVyIjogIjEuMi54IiwKICAgICJhbmd1bGFyLW1vY2tzIjogIn4xLjIueCIsCiAgICAiaHRtbDUtYm9pbGVycGxhdGUiOiAifjQuMy4wIiwKICAgICJhbmd1bGFyLWJvb3RzdHJhcCI6ICJ+MC4xMS54IgogIH0KfQo=')
},
{
'name': '/app/index.html', 'data': base64.b64decode('PCFET0NUWVBFIGh0bWw+CjwhLS1baWYgbHQgSUUgN10+ICAgICAgPGh0bWwgbGFuZz0iZW4iIG5nLWFwcD0ibXlBcHAiIG5nLWNvbnRyb2xsZXI9IkFkbWluTWFpbkN0cmwiIGNsYXNzPSJuby1qcyBsdC1pZTkgbHQtaWU4IGx0LWllNyI+IDwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDddPiAgICAgICAgIDxodG1sIGxhbmc9ImVuIiBuZy1hcHA9Im15QXBwIiBuZy1jb250cm9sbGVyPSJBZG1pbk1haW5DdHJsIiBjbGFzcz0ibm8tanMgbHQtaWU5IGx0LWllOCI+IDwhW2VuZGlmXS0tPgo8IS0tW2lmIElFIDhdPiAgICAgICAgIDxodG1sIGxhbmc9ImVuIiBuZy1hcHA9Im15QXBwIiBuZy1jb250cm9sbGVyPSJBZG1pbk1haW5DdHJsIiBjbGFzcz0ibm8tanMgbHQtaWU5Ij4gPCFbZW5kaWZdLS0+CjwhLS1baWYgZ3QgSUUgOF0+PCEtLT4gPGh0bWwgbGFuZz0iZW4iIG5nLWFwcD0ibXlBcHAiIG5nLWNvbnRyb2xsZXI9IkFkbWluTWFpbkN0cmwiIGNsYXNzPSJuby1qcyI+IDwhLS08IVtlbmRpZl0tLT4KCjxoZWFkPgogIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgogIDx0aXRsZT5Db3Ntb3MgQWRtaW4gQXBwPC90aXRsZT4KICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iIj4KICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iYm93ZXJfY29tcG9uZW50cy9odG1sNS1ib2lsZXJwbGF0ZS9jc3Mvbm9ybWFsaXplLmNzcyI+CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJib3dlcl9jb21wb25lbnRzL2h0bWw1LWJvaWxlcnBsYXRlL2Nzcy9tYWluLmNzcyI+CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJjc3MvYXBwLmNzcyIvPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLy9uZXRkbmEuYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4xLjEvY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiAvPgogIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2h0bWw1LWJvaWxlcnBsYXRlL2pzL3ZlbmRvci9tb2Rlcm5penItMi42LjIubWluLmpzIj48L3NjcmlwdD4KICA8c3R5bGU+CiAgICAgIGJvZHkgewogICAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7CiAgICAgIH0KICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgogICAgPGRpdiBjbGFzcz0ibmF2YmFyIG5hdmJhci1pbnZlcnNlIG5hdmJhci1maXhlZC10b3AiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCIgaHJlZj0iLyI+Q29zbW9zIEZyYW1ld29yazwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iLyI+SG9tZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIjL2xpc3RzLyI+TGlzdHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iIy9mb3Jtcy8iPkZvcm1zPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMvdXNlcnMiPlVzZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9IiMvcm9sZXMiPlJvbGVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIG5nLXNob3c9ImxvZ2dlZEluKCkiPiA8YSBocmVmPSIvbG9nb3V0LyI+TG9nb3V0IFt7e3VzZXJOYW1lfX1dPC9hPiA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBuZy1zaG93PSIhbG9nZ2VkSW4oKSI+PGEgaHJlZj0iL2xvZ2luLmh0bWwiPkxvZ2luPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Rpdj48IS0tLy5uYXYtY29sbGFwc2UgLS0+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS1baWYgbHQgSUUgN10+CiAgICA8cCBjbGFzcz0iYnJvd3NlaGFwcHkiPllvdSBhcmUgdXNpbmcgYW4gPHN0cm9uZz5vdXRkYXRlZDwvc3Ryb25nPiBicm93c2VyLiBQbGVhc2UgPGEgaHJlZj0iaHR0cDovL2Jyb3dzZWhhcHB5LmNvbS8iPnVwZ3JhZGUgeW91ciBicm93c2VyPC9hPiB0byBpbXByb3ZlIHlvdXIgZXhwZXJpZW5jZS48L3A+CiAgICA8IVtlbmRpZl0tLT4KCiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIgdGhlbWUtc2hvd2Nhc2UiIHJvbGU9Im1haW4iPgogICAgICAgICAgICA8ZGl2IG5nLXZpZXc+PC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0IHNyYz0iLy9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMS4xMS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii8vbmV0ZG5hLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMS4xL2pzL2Jvb3RzdHJhcC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii8vY29kZS5qcXVlcnkuY29tL3VpLzEuMTAuMy9qcXVlcnktdWkuanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXIvYW5ndWxhci5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLXJvdXRlL2FuZ3VsYXItcm91dGUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImJvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1ib290c3RyYXAvdWktYm9vdHN0cmFwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItYm9vdHN0cmFwL3VpLWJvb3RzdHJhcC10cGxzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy91dGlscy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvYXBwLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy9zZXJ2aWNlcy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvY29udHJvbGxlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2ZpbHRlcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL2RpcmVjdGl2ZXMuanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgc3JjPSIvL3Jhd2dpdGh1Yi5jb20vYW5ndWxhci11aS91aS1zb3J0YWJsZS9tYXN0ZXIvc3JjL3NvcnRhYmxlLmpzIj48L3NjcmlwdD4KCjwvYm9keT4KPC9odG1sPgo=')
},
{
'name': '/app/login.html', 'data': base64.b64decode('PCFET0NUWVBFIGh0bWw+CjxodG1sIG5nLWFwcD0ibXlBcHAiPgo8aGVhZCBsYW5nPSJlbiI+CiAgICA8bWV0YSBjaGFyc2V0PSJVVEYtOCI+CiAgICA8dGl0bGU+TG9naW48L3RpdGxlPgo8L2hlYWQ+Cjxib2R5ICByb2xlPSJkb2N1bWVudCIgbmctY29udHJvbGxlcj0iQWRtaW5NYWluQ3RybCI+CiAgICA8ZGl2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWludmVyc2UgbmF2YmFyLWZpeGVkLXRvcCIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLWhlYWRlciI+CiAgICAgICAgICA8YSBjbGFzcz0ibmF2YmFyLWJyYW5kIiBocmVmPSIvIj5Db3Ntb3MgRnJhbWV3b3JrPC9hPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1jb2xsYXBzZSBjb2xsYXBzZSI+CiAgICAgICAgICA8dWwgY2xhc3M9Im5hdiBuYXZiYXItbmF2Ij4KICAgICAgICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPjxhIGhyZWY9Ii8iPkhvbWU8L2E+PC9saT4KICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+PCEtLS8ubmF2LWNvbGxhcHNlIC0tPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciB0aGVtZS1zaG93Y2FzZSIgcm9sZT0ibWFpbiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJqdW1ib3Ryb24iPgogICAgICAgICAgICA8aDMgIG5nLXNob3c9IiFsb2dnZWRJbigpIj5Mb2dpbjwvaDM+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1zbWFsbCBidG4tcHJpbWFyeSIgaHJlZj0iL2xvZ2luL2dvb2dsZS8iPkdvb2dsZTwvYT4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXNtYWxsIGJ0bi1wcmltYXJ5IiBocmVmPSIvbG9naW4vZmFjZWJvb2tncmFwaC8iPkZhY2Vib29rPC9hPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tc21hbGwgYnRuLXByaW1hcnkiIGhyZWY9Ii9sb2dpbi9naXRodWIvIj5HaXRodWI8L2E+CiAgICAgICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgICAgPGZvcm0gYWN0aW9uPSIvbG9naW4vb3BlbmlkLyIgbWV0aG9kPSJnZXQiPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbD5PcGVuaWQ8L2xhYmVsPjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJvcGVuaWQub3BfZW5kcG9pbnQiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJMb2dpbiI+CiAgICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICAgICA8aHIgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxmb3JtIG5nLXNob3c9IiFsb2dnZWRJbigpIiByb2xlPSJmb3JtIiBtZXRob2Q9InBvc3QiIGFjdGlvbj0iL2xvZ2luLyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+VXNlciBuYW1lPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9InVzZXJuYW1lIiB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VybmFtZSIvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWw+UGFzc3dvcmQ8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiB0eXBlPSJwYXNzd29yZCIgaWQ9InBhc3N3b3JkIiBuYW1lPSJwYXNzd29yZCIgLz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IkxvZ2luIiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiAvPgogICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgICA8ZGl2IG5nLXNob3c9ImxvZ2dlZEluKCkiPldlbGNvbWU8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9InN0YXR1cyI+PC9kaXY+CiAgICA8L2Rpdj4KCiAgICA8c2NyaXB0IHNyYz0iLy9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMS4xMS4xL2pxdWVyeS5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Ii8vbmV0ZG5hLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMS4xL2pzL2Jvb3RzdHJhcC5taW4uanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSIvL25ldGRuYS5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjEuMS9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiIC8+CgogICAgPHNjcmlwdCBzcmM9ImJvd2VyX2NvbXBvbmVudHMvYW5ndWxhci9hbmd1bGFyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItcm91dGUvYW5ndWxhci1yb3V0ZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyLWJvb3RzdHJhcC91aS1ib290c3RyYXAuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImJvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1ib290c3RyYXAvdWktYm9vdHN0cmFwLXRwbHMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL3V0aWxzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy9hcHAuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9ImpzL3NlcnZpY2VzLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJqcy9jb250cm9sbGVycy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvZmlsdGVycy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0ianMvZGlyZWN0aXZlcy5qcyI+PC9zY3JpcHQ+CgogICAgPHNjcmlwdCBzcmM9Ii8vcmF3Z2l0aHViLmNvbS9hbmd1bGFyLXVpL3VpLXNvcnRhYmxlL21hc3Rlci9zcmMvc29ydGFibGUuanMiPjwvc2NyaXB0Pgo8L2JvZHk+CjwvaHRtbD4K')
},
{
'name': '/app/js/serviceapi.js', 'data': base64.b64decode('LyoqCiAqIENyZWF0ZWQgYnkgTWFydWYgTWFuaXJ1enphbWFuIChtYXJ1Zm1AY29zbW9zZnJhbWV3b3JrLmNvbSkgb24gNi8xNC8xNC4KICovCgpmdW5jdGlvbiBwcm9jZXNzRXJyb3IoanFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKXsKICAgIGpRdWVyeSgiI3N0YXR1cyIpLmh0bWwoIjxoMz5FcnJvcjwvaDM+PGRpdj4iK2Vycm9yVGhyb3duKyI8L2Rpdj4iKTsKfQoKZnVuY3Rpb24gcHJvY2Vzc1N1Y2Nlc3MoZGF0YSl7CiAgICB2YXIgZGF0YTIgPSBKU09OLnBhcnNlKGRhdGEpOwogICAgalF1ZXJ5KCIjcmVzdWx0IikudmFsKEpTT04uc3RyaW5naWZ5KGRhdGEyLHVuZGVmaW5lZCwgMikpOwp9CgpmdW5jdGlvbiBnZXRTZXJ2aWNlVXJsKHNlcnZpY2UpIHsKICAgIHZhciByb290ID0gZG9jdW1lbnQuVVJMOwogICAgaWYoc2VydmljZVswXSA9PSAnLycpewogICAgICAgIHNlcnZpY2UgPSBzZXJ2aWNlLnN1YnN0cmluZygxKTsKICAgIH0KICAgIHJldHVybiByb290K3NlcnZpY2U7Cn0KCmZ1bmN0aW9uIGRvX29wZXJhdGlvbih1cmwsIG1ldGhvZCwgZGF0YSwgY2FsbGJhY2ssIGVycm9yX2NhbGxiYWNrKXsKICAgIGpRdWVyeSgiI3Jlc3VsdCIpLnZhbCgiIik7CiAgICBqUXVlcnkoIiNzdGF0dXMiKS5odG1sKCIiKTsKICAgIGNvbnNvbGUubG9nKG1ldGhvZCsgIjogIit1cmwpCiAgICAkLmFqYXgoewogICAgICAgIHVybDogdXJsLAogICAgICAgIHR5cGU6IG1ldGhvZCwKICAgICAgICBkYXRhOmRhdGEsCiAgICAgICAgc3VjY2VzczogY2FsbGJhY2ssCiAgICAgICAgZXJyb3I6IGVycm9yX2NhbGxiYWNrCiAgICB9KTsKfQoKZnVuY3Rpb24gaW5zZXJ0U2VydmljZSgpewogICAgdmFyIG5hbWUgPSBqUXVlcnkoIiNuYW1lIikudmFsKCk7CiAgICB2YXIgZGF0YSA9IGpRdWVyeSgiI2RhdGEiKS52YWwoKTsKCiAgICB2YXIgdXJsID0gIGdldFNlcnZpY2VVcmwobmFtZSk7CiAgICBkb19vcGVyYXRpb24odXJsLCAnUE9TVCcsIGRhdGEsIHByb2Nlc3NTdWNjZXNzLCBwcm9jZXNzRXJyb3IpOwp9CgpmdW5jdGlvbiBkZWxldGVJdGVtKCl7CiAgICB2YXIgbmFtZSA9IGpRdWVyeSgiI25hbWUiKS52YWwoKTsKICAgIHZhciBkYXRhID0galF1ZXJ5KCIjZGF0YSIpLnZhbCgpOwoKICAgIHZhciB1cmwgPSAgZ2V0U2VydmljZVVybChuYW1lKTsKCiAgICBkb19vcGVyYXRpb24odXJsLCAnREVMRVRFJywgZGF0YSwgcHJvY2Vzc1N1Y2Nlc3MsIHByb2Nlc3NFcnJvcik7Cn0KCmZ1bmN0aW9uIGxvYWRJdGVtKCl7CiAgICB2YXIgbmFtZSA9IGpRdWVyeSgiI25hbWUiKS52YWwoKTsKICAgIHZhciBkYXRhID0galF1ZXJ5KCIjZGF0YSIpLnZhbCgpOwogICAgdmFyIGNvbHVtbnMgPSBqUXVlcnkoIiNjb2x1bW5zIikudmFsKCk7CiAgICB2YXIgZmlsdGVyID0galF1ZXJ5KCIjZmlsdGVyIikudmFsKCk7CgogICAgdmFyIHVybCA9ICBnZXRTZXJ2aWNlVXJsKG5hbWUpOwogICAgaWYoY29sdW1ucyl7CiAgICAgICAgdXJsID0gdXJsKyI/IjsKICAgICAgICB1cmwgPXVybCsgImNvbHVtbnM9Iitjb2x1bW5zOwogICAgfQogICAgaWYoZmlsdGVyKXsKICAgICAgICBpZighY29sdW1ucykgewogICAgICAgICAgICB1cmwgPSB1cmwgKyAiPyI7CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIHVybD11cmwrIiYiOwogICAgICAgIH0KICAgICAgICB1cmwgPSB1cmwrImZpbHRlcj0iK2ZpbHRlcgogICAgfQoKICAgIGRvX29wZXJhdGlvbih1cmwsICdHRVQnLCBkYXRhLCBwcm9jZXNzU3VjY2VzcyAscHJvY2Vzc0Vycm9yKTsKfQoKZnVuY3Rpb24gdXBkYXRlSXRlbSgpewogICAgdmFyIG5hbWUgPSBqUXVlcnkoIiNuYW1lIikudmFsKCk7CiAgICB2YXIgZGF0YSA9IGpRdWVyeSgiI2RhdGEiKS52YWwoKTsKCiAgICB2YXIgdXJsID0gIGdldFNlcnZpY2VVcmwobmFtZSk7CgogICAgZG9fb3BlcmF0aW9uKHVybCwgJ1BVVCcsIGRhdGEsIHByb2Nlc3NTdWNjZXNzLCBwcm9jZXNzRXJyb3IpOwp9CgpmdW5jdGlvbiBzdWJzY3JpYmUgKG1vbml0b3JfZW5kcG9pbnQsIG9iamVjdF9uYW1lLCBjYWxsYmFjaykgewogICAgLy9UT0RPOiBVbmlmeSB0aGUgb2JzZXJ2ZXIgdG8gbGlzdGVuIHRvIG1hbnkgb2JqZWN0cyBhdCBhIHRpbWUgdXNpbmcgZGlmZmVyZW50IGNhbGxiYWNrCiAgICAvL3ZhciBtb25pdG9yX2VuZHBvaW50ID0gIndzOi8vbG9jYWxob3N0OjgwODAvY2hhbmdlbW9uaXRvciIKICAgIHZhciB3ZWJzb2NrZXQgPSBuZXcgV2ViU29ja2V0KG1vbml0b3JfZW5kcG9pbnQpOwogICAgdmFyIGZuID0gY2FsbGJhY2s7CiAgICB3ZWJzb2NrZXQub25vcGVuID0gZnVuY3Rpb24gKCkgewogICAgICAgIGNvbnNvbGUubG9nKCJTb2NrZXQgb3BlbmVkIik7CiAgICAgICAgd2Vic29ja2V0LnNlbmQoSlNPTi5zdHJpbmdpZnkoeyJ0eXBlIjogIm1vbml0b3JfbnMiLCAibnMiOiBvYmplY3RfbmFtZX0pKQogICAgfQoKICAgIHdlYnNvY2tldC5vbm1lc3NhZ2UgPSBmdW5jdGlvbiAoZXZ0KSB7CiAgICAgICAgY29uc29sZS5sb2coIk9uIG1lc3NhZ2U6ICIgKyBldnQuZGF0YSk7CiAgICAgICAgaWYgKGZuKSB7CiAgICAgICAgICAgIGZuKGV2dC5kYXRhKTsKICAgICAgICAgICAgLyoKICAgICAgICAgICAgIC8vSW4gY2FsbGJhY2sgeW91IG1heSBkbyBzb21ldGhpbmcgbGlrZSAoYWxzbyBjb25zaWRlciB0aGUgZXZ0LmRhdGEgaWYgeW91IGFyZSBtb25pdG9yaW5nIG11bHRpcGxlIG9iamVjdHMuOgogICAgICAgICAgICAgJGh0dHAuZ2V0KCcvc2VydmljZS8nK29iamVjdF9uYW1lKycvJykuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAkc2NvcGUuZGF0YSA9IGRhdGE7CiAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICovCiAgICAgICAgfQoKICAgIH0KCiAgICB3ZWJzb2NrZXQub25jbG9zZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBjb25zb2xlLmxvZygiT24gY2xvc2VkIik7CiAgICB9Cn0=')
},
{
'name': '/app/js/app.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKCi8vIERlY2xhcmUgYXBwIGxldmVsIG1vZHVsZSB3aGljaCBkZXBlbmRzIG9uIGZpbHRlcnMsIGFuZCBzZXJ2aWNlcwp2YXIgbXlBcHAgPSBhbmd1bGFyLm1vZHVsZSgnbXlBcHAnLCBbCiAgICAnbmdSb3V0ZScsCiAgICAndWkuYm9vdHN0cmFwJywKICAgICdnZW4uZ2VuZXJpY0RpcmVjdGl2ZXMnLAogICAgJ3VpLnNvcnRhYmxlJywKICAgICdteUFwcC5maWx0ZXJzJywKICAgICdteUFwcC5zZXJ2aWNlcycsCiAgICAnbXlBcHAuZGlyZWN0aXZlcycsCiAgICAnbXlBcHAuY29udHJvbGxlcnMnCl0pLgpjb25maWcoWyckcm91dGVQcm92aWRlcicsIGZ1bmN0aW9uKCRyb3V0ZVByb3ZpZGVyKSB7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvaG9tZScsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL2hvbWUuaHRtbCcsIGNvbnRyb2xsZXI6ICdIb21lQ3RybCd9KTsKCiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvbWVzc2FnZScsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL21lc3NhZ2UuaHRtbCcsIGNvbnRyb2xsZXI6ICdNZXNzYWdlVmlld0N0cmwnfSk7CgogICAgJHJvdXRlUHJvdmlkZXIud2hlbignL3VzZXJzJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvdXNlcnMuaHRtbCcsIGNvbnRyb2xsZXI6ICdVc2Vyc0N0cmwnfSk7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvcm9sZXMnLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9yb2xlcy5odG1sJywgY29udHJvbGxlcjogJ1JvbGVzQ3RybCd9KTsKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9saXN0cy86bGlzdElkLycsIHt0ZW1wbGF0ZVVybDogJ3BhcnRpYWxzL3dpZGdldC1ob3N0Lmh0bWwnLCBjb250cm9sbGVyOiAnTGlzdERldGFpbEN0cmwnfSk7CiAgICAkcm91dGVQcm92aWRlci53aGVuKCcvbGlzdHMvJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvbGlzdC5odG1sJywgY29udHJvbGxlcjogJ0xpc3RDdHJsJ30pOwogICAgJHJvdXRlUHJvdmlkZXIud2hlbignL2NvbnRlbnQvJywge3RlbXBsYXRlVXJsOiAncGFydGlhbHMvdXBsb2FkZmlsZS5odG1sJywgY29udHJvbGxlcjogJ0ZpbGVVcGxvYWRDdHJsJ30pOwogICAgJHJvdXRlUHJvdmlkZXIud2hlbignL2Zvcm1zLzpmb3JtSWQvOmRhdGFJZD8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9mb3JtLXdpZGdldC5odG1sJywgY29udHJvbGxlcjogJ0Zvcm1WaWV3Q29udHJvbGxlcid9KTsKICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9mb3Jtcy8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9saXN0Lmh0bWwnLCBjb250cm9sbGVyOiAnRm9ybUxpc3RDdHJsJ30pOwogICAgJHJvdXRlUHJvdmlkZXIud2hlbignL2Zvcm1kZXNpZ24vOmZvcm1JZD8nLCB7dGVtcGxhdGVVcmw6ICdwYXJ0aWFscy9mb3JtLWRlc2lnbi5odG1sJywgY29udHJvbGxlcjogJ0Zvcm1EZXNpZ25Db250cm9sbGVyJ30pOwoKCiAgICAkcm91dGVQcm92aWRlci5vdGhlcndpc2Uoe3JlZGlyZWN0VG86ICcvaG9tZSd9KTsKfV0pOwoKbXlBcHAuZmFjdG9yeSgnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkY2FjaGVGYWN0b3J5LCAkaHR0cCwgJGluamVjdG9yKSB7CiAgICB2YXIgY2FjaGUgPSAkY2FjaGVGYWN0b3J5KCd0ZW1wbGF0ZXMnKTsKICAgIHZhciB3aWRnZXRQcm9taXNlOwoKICAgIHJldHVybiB7CiAgICAgICAgZ2V0OiBmdW5jdGlvbih1cmwpIHsKICAgICAgICAgICAgdmFyIGNhY2hlZCA9IGNhY2hlLmdldCh1cmwpOwoKICAgICAgICAgICAgaWYgKGNhY2hlZCkgewogICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCF3aWRnZXRQcm9taXNlKSB7CiAgICAgICAgICAgICAgICB2YXIgdXJpPScvc2VydmljZS91c2VyZGF0YS53aWRnZXRzLyc7CgogICAgICAgICAgICAgICAgd2lkZ2V0UHJvbWlzZSA9ICRodHRwLmdldCh1cmkpLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcGxhdGVfZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2UuZGF0YS5fZCk7CiAgICAgICAgICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKHRlbXBsYXRlX2RhdGEsIGZ1bmN0aW9uIChkYXRhLCBpbmRleCkgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcGxhdGUgPSAnPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiBpZD0iJyArIGRhdGEubmFtZSArICciPicgKyBkYXRhLnRlbXBsYXRlICsgJzwvc2NyaXB0Pic7CiAgICAgICAgICAgICAgICAgICAgICAgICRpbmplY3Rvci5nZXQoJyRjb21waWxlJykodGVtcGxhdGUpOwogICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICB2YXIgY2FjaGVkID0gY2FjaGUuZ2V0KHVybCk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlZCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGVkOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlewogICAgICAgICAgICAgICAgICAgICAgICAkaHR0cC5nZXQodXJsKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIHdpZGdldFByb21pc2UudGhlbihmdW5jdGlvbihyZXNwb25zZSl7CiAgICAgICAgICAgICAgICB2YXIgY2FjaGVkID0gY2FjaGUuZ2V0KHVybCk7CiAgICAgICAgICAgICAgICBpZiAoY2FjaGVkKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlZDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vRmFsbGJhY2sgdG8gcmVxdWVzdCB0aGUgc2VydmVyCiAgICAgICAgICAgICAgICByZXR1cm4gJGh0dHAuZ2V0KHVybCkudGhlbihmdW5jdGlvbihyZXNwb25zZSl7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKCiAgICAgICAgcHV0OiBmdW5jdGlvbihrZXksIHZhbHVlKSB7CiAgICAgICAgICAgIGNhY2hlLnB1dChrZXksIHZhbHVlKTsKICAgICAgICB9CiAgICB9Owp9KTsK')
},
{
'name': '/app/js/directives.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogRGlyZWN0aXZlcyAqLwoKCmFuZ3VsYXIubW9kdWxlKCdteUFwcC5kaXJlY3RpdmVzJywgW10pLgogIGRpcmVjdGl2ZSgnYXBwVmVyc2lvbicsIFsndmVyc2lvbicsIGZ1bmN0aW9uKHZlcnNpb24pIHsKICAgIHJldHVybiBmdW5jdGlvbihzY29wZSwgZWxtLCBhdHRycykgewogICAgICBlbG0udGV4dCh2ZXJzaW9uKTsKICAgIH07CiAgfV0pOwoKCi8vRm9sbG93aW5nIGRpcmVjdGl2ZSBpcyBjb3BpZWQgZnJvbTogIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3RoZ3JlYXNpLzcxNTI0OTljMGU5MTk3M2M0ODIwCiAgYW5ndWxhci5tb2R1bGUoJ2dlbi5nZW5lcmljRGlyZWN0aXZlcycsIFtdKQogICAgICAgLmRpcmVjdGl2ZSgnZ2VuRHluYW1pY0RpcmVjdGl2ZScsIFsnJGNvbXBpbGUnLAogICAgICAgICAgICBmdW5jdGlvbigkY29tcGlsZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICByZXN0cmljdDogIkUiLAogICAgICAgICAgICAgICAgICAgIHJlcXVpcmU6ICdebmdNb2RlbCcsCiAgICAgICAgICAgICAgICAgICAgc2NvcGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBuZ01vZGVsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuZ01vZGVsSXRlbSA9IHNjb3BlLiRldmFsKGF0dHJzLm5nTW9kZWwpOwogICAgICAgICAgICAgICAgICAgICAgICBzY29wZS5uZ01vZGVsSXRlbSA9IG5nTW9kZWxJdGVtOwoKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGdldFZpZXcgPSBzY29wZS4kZXZhbChhdHRycy5nZW5HZXREeW5hbWljVmlldyk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChnZXRWaWV3ICYmIHR5cGVvZiBnZXRWaWV3ID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGVtcGxhdGVVcmwgPSBnZXRWaWV3KG5nTW9kZWxJdGVtKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0ZW1wbGF0ZVVybCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuaHRtbCgnPGRpdiBuZy1pbmNsdWRlIHNyYz0iXCcnICsgdGVtcGxhdGVVcmwgKyAnXCciPjwvZGl2PicpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb21waWxlKGVsZW1lbnQuY29udGVudHMoKSkoc2NvcGUpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfQogICAgICAgIF0pOwoKCi8vIGZ1bmN0aW9uIGdldFZpZXcgKG5nTW9kZWxJdGVtKSB7Ci8vICAgICB2YXIgdGVtcGxhdGUgPSAnJzsKCi8vICAgICBzd2l0Y2ggKG5nTW9kZWxJdGVtLlR5cGUpIHsKLy8gICAgICAgICBjYXNlICdUeXBlMSc6Ci8vICAgICAgICAgICAgIHRlbXBsYXRlID0gJ1R5cGUxLmh0bWwnOwovLyAgICAgICAgICAgICBicmVhazsKLy8gICAgICAgICBjYXNlICdUeXBlMic6Ci8vICAgICAgICAgICAgIHRlbXBsYXRlID0gJ1R5cGUyLmh0bWwnOwovLyAgICAgICAgICAgICBicmVhazsKLy8gICAgIH0KCi8vICAgICByZXR1cm4gdGVtcGxhdGU7Ci8vIH0=')
},
{
'name': '/app/js/services.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogU2VydmljZXMgKi8KCgphbmd1bGFyLm1vZHVsZSgnbXlBcHAuc2VydmljZXMnLCBbXSkKICAgIC5mYWN0b3J5KCdDb3Ntb3NTZXJ2aWNlJywgWyckaHR0cCcsIGZ1bmN0aW9uKCRodHRwKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIGdldDogZnVuY3Rpb24odXJpLCBjYWxsYmFjaywgZXJyb3JfY2FsbGJhY2spewogICAgICAgICAgICAgICAgJGh0dHAuZ2V0KHVyaSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJldHVybmVkX2RhdGEgPSBkYXRhOwogICAgICAgICAgICAgICAgICAgIGlmKGRhdGEgJiYgZGF0YS5fY29zbW9zX3NlcnZpY2VfYXJyYXlfcmVzdWx0Xyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybmVkX2RhdGEgPSBKU09OLnBhcnNlKGRhdGEuX2QpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXR1cm5lZF9kYXRhKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKXsKICAgICAgICAgICAgICAgICAgICBpZihlcnJvcl9jYWxsYmFjaykgewogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9jYWxsYmFjayhkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwb3N0OiBmdW5jdGlvbih1cmksIGRhdGEsIGNhbGxiYWNrLCBlcnJvcl9jYWxsYmFjayl7CiAgICAgICAgICAgICAgICAkaHR0cC5wb3N0KHVyaSwgZGF0YSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHJldHVybmVkX2RhdGEgPSBkYXRhOwogICAgICAgICAgICAgICAgICAgIGlmKGRhdGEgJiYgZGF0YS5fY29zbW9zX3NlcnZpY2VfYXJyYXlfcmVzdWx0Xyl7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybmVkX2RhdGEgPSBKU09OLnBhcnNlKGRhdGEuX2QpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhyZXR1cm5lZF9kYXRhKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZGF0YSwgc3RhdHVzKXsKICAgICAgICAgICAgICAgICAgICBpZihlcnJvcl9jYWxsYmFjaykgewogICAgICAgICAgICAgICAgICAgICAgICBlcnJvcl9jYWxsYmFjayhkYXRhLCBzdGF0dXMpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwdXQ6IGZ1bmN0aW9uKHVyaSwgZGF0YSwgY2FsbGJhY2ssIGVycm9yX2NhbGxiYWNrKXsKICAgICAgICAgICAgICAgICRodHRwLnB1dCh1cmksIGRhdGEpLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihkYXRhLCBzdGF0dXMpewogICAgICAgICAgICAgICAgICAgIGlmKGVycm9yX2NhbGxiYWNrKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yX2NhbGxiYWNrKGRhdGEsIHN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGRlbGV0ZTogZnVuY3Rpb24odXJpLCBjYWxsYmFjaywgZXJyb3JfY2FsbGJhY2spewogICAgICAgICAgICAgICAgJGh0dHAuZGVsZXRlKHVyaSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cyl7CiAgICAgICAgICAgICAgICAgICAgaWYoZXJyb3JfY2FsbGJhY2spIHsKICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JfY2FsbGJhY2soZGF0YSwgc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICB9XSkKICAgIC52YWx1ZSgndmVyc2lvbicsICcwLjEnKQogICAgLmZhY3RvcnkoJ21lc3NhZ2UnLCBbJyRodHRwJywgZnVuY3Rpb24oJGh0dHApIHsKICAgICAgICB2YXIgbXNncyA9IFtdOwogICAgICAgIHJldHVybnsKICAgICAgICAgICAgcHVzaDogZnVuY3Rpb24obXNnKSB7CiAgICAgICAgICAgICAgICBtc2dzLnB1c2gobXNnKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcG9wOiBmdW5jdGlvbigpewogICAgICAgICAgICAgICAgcmV0dXJuIG1zZ3Muc2hpZnQoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaGFzTWVzc2FnZTogZnVuY3Rpb24oKXsKICAgICAgICAgICAgICAgIHJldHVybiAobXNncyAmJiBtc2dzLmxlbmd0aCA+MCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgfV0pCjsK')
},
{
'name': '/app/js/filters.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogRmlsdGVycyAqLwoKYW5ndWxhci5tb2R1bGUoJ215QXBwLmZpbHRlcnMnLCBbXSkuCiAgZmlsdGVyKCdpbnRlcnBvbGF0ZScsIFsndmVyc2lvbicsIGZ1bmN0aW9uKHZlcnNpb24pIHsKICAgIHJldHVybiBmdW5jdGlvbih0ZXh0KSB7CiAgICAgIHJldHVybiBTdHJpbmcodGV4dCkucmVwbGFjZSgvXCVWRVJTSU9OXCUvbWcsIHZlcnNpb24pOwogICAgfTsKICB9XSk7Cg==')
},
{
'name': '/app/js/utils.js', 'data': base64.b64decode('LyoqCiAqIENyZWF0ZWQgYnkgbWFydWYgbWFuaXJ1enphbWFuIG9uIDcvNS8xNC4KICovCgoKZnVuY3Rpb24gZ2V0Q29va2llKG5hbWUpIHsKICAgIHZhciB2YWx1ZSA9ICI7ICIgKyBkb2N1bWVudC5jb29raWU7CiAgICB2YXIgcGFydHMgPSB2YWx1ZS5zcGxpdCgiOyAiICsgbmFtZSArICI9Iik7CiAgICBpZiAocGFydHMubGVuZ3RoID09IDIpIHJldHVybiBwYXJ0cy5wb3AoKS5zcGxpdCgiOyIpLnNoaWZ0KCk7Cn0KCmZ1bmN0aW9uIGdldFVzZXJOYW1lKGRlZmF1bHRfdXNlcil7CiAgICB2YXIgdXNlckNvb2tpZSA9IGdldENvb2tpZSgidXNlciIpOwogICAgaWYodXNlckNvb2tpZSl7CiAgICAgICAgdXNlckNvb2tpZSA9IHVzZXJDb29raWUucmVwbGFjZSgvXCIvZywgIiIpCiAgICAgICAgdmFyIGRlY29kZWQgPSBKU09OLnBhcnNlKHdpbmRvdy5hdG9iKHVzZXJDb29raWUpKTsKICAgICAgICByZXR1cm4gZGVjb2RlZFsidXNlcm5hbWUiXSB8fCBkZWZhdWx0X3VzZXI7CiAgICB9CgogICAgcmV0dXJuIGRlZmF1bHRfdXNlcjsKfQoKZnVuY3Rpb24gbG9nZ2VkSW4oKXsKICAgIHZhciB1c2VyQ29va2llID0gZ2V0Q29va2llKCJ1c2Vyc2VjcmV0Iik7CiAgICBpZih1c2VyQ29va2llKXsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICAgIHJldHVybiBmYWxzZTsKfQo=')
},
{
'name': '/app/js/controllers.js', 'data': base64.b64decode('')
},
{
'name': '/app/img/.gitkeep', 'data': base64.b64decode('')
},
{
'name': '/app/css/.gitkeep', 'data': base64.b64decode('')
},
{
'name': '/app/css/app.css', 'data': base64.b64decode('LyogYXBwIGNzcyBzdHlsZXNoZWV0ICovCgoubWVudSB7CiAgbGlzdC1zdHlsZTogbm9uZTsKICBib3JkZXItYm90dG9tOiAwLjFlbSBzb2xpZCBibGFjazsKICBtYXJnaW4tYm90dG9tOiAyZW07CiAgcGFkZGluZzogMCAwIDAuNWVtOwp9CgoubWVudTpiZWZvcmUgewogIGNvbnRlbnQ6ICJbIjsKfQoKLm1lbnU6YWZ0ZXIgewogIGNvbnRlbnQ6ICJdIjsKfQoKLm1lbnUgPiBsaSB7CiAgZGlzcGxheTogaW5saW5lOwp9CgoubWVudSA+IGxpOmJlZm9yZSB7CiAgY29udGVudDogInwiOwogIHBhZGRpbmctcmlnaHQ6IDAuM2VtOwp9CgoubWVudSA+IGxpOm50aC1jaGlsZCgxKTpiZWZvcmUgewogIGNvbnRlbnQ6ICIiOwogIHBhZGRpbmc6IDA7Cn0KCi5wcm9kdWN0IHsKICAgIHdpZHRoOiAxMDAlOwogICAgbWF4LXdpZHRoOiAyMDBweDsKICAgIGhlaWdodDogMjUwcHg7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjRUZFRkVGOwogICAgbWFyZ2luOiA3cHg7CiAgICBwYWRkaW5nOiA3cHg7Cn0=')
},
{
'name': '/app/partials/message.html', 'data': base64.b64decode('PGgxPnt7bWVzc2FnZS50aXRsZX19PC9oMT4KPGRpdj57e21lc3NhZ2UubWVzc2FnZX19PC9kaXY+CjxkaXY+e3ttZXNzYWdlLmRhdGF9fTwvZGl2Pg==')
},
{
'name': '/app/partials/roles.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+Um9sZXM8L2gzPgoKPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICAgICAgPHRyPgogICAgICAgICAgICA8dGg+U0lEPC90aD4KICAgICAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgICAgICA8dGg+Jm5ic3A7PC90aD4KICAgICAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9InJvbGUgaW4gcm9sZXMiPgogICAgICAgIDx0ZD57e3JvbGUuc2lkfX08L3RkPjx0ZD57e3JvbGUubmFtZX19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLXdhcm5pbmcgZ2x5cGhpY29uIGdseXBoaWNvbi1lZGl0IiBuZy1jbGljaz0iZWRpdFJvbGUoJGluZGV4KTsiPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIgZ2x5cGhpY29uIGdseXBoaWNvbi1yZW1vdmUiIG5nLWNsaWNrPSJyZW1vdmVSb2xlKCRpbmRleCk7Ij48L2J1dHRvbj4KICAgICAgICA8L3RkPgogICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+Cgo8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJhZGRSb2xlKCdsZycpIj5DcmVhdGUgcm9sZTwvYnV0dG9uPg==')
},
{
'name': '/app/partials/widget-host.html', 'data': base64.b64decode('PGRpdiBuZy1pbmNsdWRlPSJsaXN0Q29uZmlndXJhdGlvbi53aWRnZXROYW1lIiAvPjwvZGl2Pg==')
},
{
'name': '/app/partials/form-widget.html', 'data': base64.b64decode('PHN0eWxlPgogICAgdWwgewogICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7CiAgICB9CiAgICAuY29tcG9zaXRlIHsKICAgICAgICBtYXJnaW4tbGVmdDogMjRweDsKICAgIH0KPC9zdHlsZT4KCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgIGlkPSJ0ZXh0LWZpZWxkLmh0bWwiPgogICAgPGxhYmVsPnt7ZmllbGQudGl0bGV9fTwvbGFiZWw+CiAgICA8aW5wdXQgbmctY2xhc3M9ImZpZWxkLmNsYXNzTmFtZSIgdHlwZSA9ICJ0ZXh0IiBuYW1lPSJ7e2ZpZWxkLm1vZGVsfX0iIG5nLW1vZGVsPSJjdXJyZW50RGF0YVtmaWVsZC5tb2RlbF0iIC8+Cjwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L25nLXRlbXBsYXRlIiAgaWQ9InRleHRhcmVhLWZpZWxkLmh0bWwiPgogICAgPGxhYmVsPnt7ZmllbGQudGl0bGV9fTwvbGFiZWw+CiAgICA8dGV4dGFyZWEgbmctY2xhc3M9ImZpZWxkLmNsYXNzTmFtZSIgbmFtZT0ie3tmaWVsZC5tb2RlbH19IiBuZy1tb2RlbD0iY3VycmVudERhdGFbZmllbGQubW9kZWxdIj48L3RleHRhcmVhPgo8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgIGlkPSJjaGVja2JveC1maWVsZC5odG1sIj4KICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmctY2xhc3M9ImZpZWxkLmNsYXNzTmFtZSIgbmFtZT0ie3tmaWVsZC5tb2RlbH19IiBuZy1tb2RlbD0iY3VycmVudERhdGFbZmllbGQubW9kZWxdIj4KICAgIDxsYWJlbCBjbGFzcz0iY29udHJvbC1sYWJlbCI+e3tmaWVsZC50aXRsZX19PC9sYWJlbD4KPC9zY3JpcHQ+Cgo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiICBpZD0icmFkaW9ncm91cC1maWVsZC5odG1sIj4KICAgIDxsYWJlbCBjbGFzcz0iY29udHJvbC1sYWJlbCI+e3tmaWVsZC50aXRsZX19PC9sYWJlbD4KICAgIDxkaXYgY2xhc3M9ImNvbXBvc2l0ZSIgbmctcmVwZWF0PSJjaG9pY2UgaW4gZmllbGQub3B0aW9ucy5jaG9pY2VzIj4KICAgICAgICA8aW5wdXQgdHlwZT0icmFkaW8iIG5nLWNsYXNzPSJmaWVsZC5jbGFzc05hbWUiIG5hbWU9Int7ZmllbGQubW9kZWx9fSIgbmctdmFsdWU9ImNob2ljZS52YWx1ZSIKICAgICAgICAgICAgICAgbmctbW9kZWw9ImN1cnJlbnREYXRhW2ZpZWxkLm1vZGVsXSI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJjb250cm9sLWxhYmVsIj57e2Nob2ljZS50aXRsZX19PC9sYWJlbD4KICAgIDwvZGl2Pgo8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgIGlkPSJzZWxlY3QtZmllbGQuaHRtbCI+CiAgICA8bGFiZWwgY2xhc3M9ImNvbnRyb2wtbGFiZWwiPnt7ZmllbGQudGl0bGV9fTwvbGFiZWw+CiAgICA8c2VsZWN0IG5nLWNsYXNzPSJmaWVsZC5jbGFzc05hbWUiIG5hbWU9Int7ZmllbGQubW9kZWx9fSIgbmctbW9kZWw9ImN1cnJlbnREYXRhW2ZpZWxkLm1vZGVsXSI+CiAgICAgICAgPG9wdGlvbiBuZy1pZj0iZmllbGQubnVsbGFibGUgPT09IHRydWUiIG5nLXZhbHVlPSIiPiAtLS0gU2VsZWN0IC0tLTwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gbmctdmFsdWU9Im9wdGlvbi52YWx1ZSIgbmctcmVwZWF0PSJjaG9pY2UgaW4gZmllbGQub3B0aW9ucy5jaG9pY2VzIj57e2Nob2ljZS50aXRsZX19PC9vcHRpb24+CiAgICA8L3NlbGVjdD4KPC9zY3JpcHQ+Cgo8c2NyaXB0IHR5cGU9InRleHQvbmctdGVtcGxhdGUiICBpZD0ibG9va3VwLWZpZWxkLmh0bWwiPgogICAgPGxhYmVsIGNsYXNzPSJjb250cm9sLWxhYmVsIj57e2ZpZWxkLnRpdGxlfX08L2xhYmVsPgogICAgPHNlbGVjdCBuZy1jbGFzcz0iZmllbGQuY2xhc3NOYW1lIiBuZy1tb2RlbD0iZmllbGRPcHRpb25zWydsb29rdXAuJytmaWVsZC5tb2RlbF0iCiAgICAgICAgICAgIG5nLW9wdGlvbnM9Imxvb2t1cC5sb29rdXBuYW1lIGZvciBsb29rdXAgaW4gZmllbGQub3B0aW9ucy5sb29rdXBzIgogICAgICAgICAgICBuZy1jaGFuZ2U9InVwZGF0ZU9wdGlvbnMoZmllbGQsIGxvb2t1cCkiPgogICAgPC9zZWxlY3Q+CgogICAgPHNlbGVjdCBuZy1jbGFzcz0iZmllbGQuY2xhc3NOYW1lIiBuYW1lPSJ7e2ZpZWxkLm1vZGVsfX0iPgogICAgICAgIDxvcHRpb24gbmctdmFsdWU9Im9wdGlvblsnX2lkJ10iIG5nLXJlcGVhdD0ib3B0aW9uIGluIGZpZWxkLm9wdGlvbkRhdGEiPnt7b3B0aW9uWyJ1c2VybmFtZSJdfX08L29wdGlvbj4KICAgIDwvc2VsZWN0Pgo8L3NjcmlwdD4KCjxzY3JpcHQgdHlwZT0idGV4dC9uZy10ZW1wbGF0ZSIgIGlkPSJjb21wb3NpdGUtZmllbGRzLmh0bWwiPgogICAgPGRpdiBuZy1pZj0iZmllbGQudHlwZSAhPSAnY29tcG9zaXRlJyI+CiAgICAgICAgPGRpdiBuZy1pbmNsdWRlPSJmaWVsZC50eXBlKyctZmllbGQuaHRtbCciPjwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IG5nLWlmPSJmaWVsZC50eXBlID09PSAnY29tcG9zaXRlJyI+CiAgICAgICAgPGxhYmVsIGNsYXNzPSJjb250cm9sLWxhYmVsIj57e2ZpZWxkLnRpdGxlfX08L2xhYmVsPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvc2l0ZSIgbmctcmVwZWF0PSJmaWVsZCBpbiBmaWVsZC5maWVsZHMiIG5nLWluY2x1ZGU9Iidjb21wb3NpdGUtZmllbGRzLmh0bWwnIj48L2Rpdj4KICAgIDwvZGl2Pgo8L3NjcmlwdD4KCjxmb3JtIHJvbGU9ImZvcm0iIGlkPSJ7e2Zvcm0uX2lkfX0iPgogICAgPGRpdj4KICAgICAgICA8bGFiZWw+e3tmb3JtLnRpdGxlfX08L2xhYmVsPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb21wb3NpdGUiPgogICAgICAgIDxkaXYgbmctcmVwZWF0PSJmaWVsZCBpbiBmb3JtLmZpZWxkcyIgbmctaW5jbHVkZT0iJ2NvbXBvc2l0ZS1maWVsZHMuaHRtbCciPjwvZGl2PgogICAgPC9kaXY+CiAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJvblN1Ym1pdCgpIj5TdWJtaXQ8L2J1dHRvbj4KPC9mb3JtPgoK')
},
{
'name': '/app/partials/form-design.html', 'data': base64.b64decode('')
},
{
'name': '/app/partials/uploadfile.html', 'data': base64.b64decode('PHN0eWxlPgouZmlsZS1saXN0IHsKICAgIHBhZGRpbmctYm90dG9tOiAxMHB4Owp9Ci5maWxlLXNlbGVjdG9yewogICAgbWFyZ2luOiA1cHg7Cn0KPC9zdHlsZT4KCjxkaXYgbmctc2hvdz0iaGFzRXJyb3IiIGNsYXNzPSJiZy13YXJuaW5nIj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciBnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZSBwdWxsLXJpZ2h0IiBuZy1jbGljaz0iY2xlYXJFcnJvcigpOyI+PC9idXR0b24+CiAgICA8ZGl2PjxsYWJlbD5FcnJvciBjb2RlOjwvbGFiZWw+PHNwYW4gbmctYmluZD0ic3RhdHVzIj48L3NwYW4+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+CjxkaXYgaWQ9ImlGcmFtZVBsYWNlaG9sZGVyIj48L2Rpdj4KCjx0YWJsZSBjbGFzcz0idGFibGUiPgogICAgPHRoZWFkPgogICAgPHRyPgogICAgICAgIDx0aD5GaWxlIElkPC90aD4KICAgICAgICA8dGg+RmlsZSBzaXplPC90aD4KICAgICAgICA8dGg+RmlsZSBuYW1lPC90aD4KICAgICAgICA8dGg+RmlsZSBNRDU8L3RoPgogICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgPC90cj4KICAgIDwvdGhlYWQ+CiAgICA8dGJvZHk+CiAgICA8dHIgbmctcmVwZWF0PSJmaWxlIGluIHVwbG9hZGVkX2ZpbGVzIj4KICAgICAgICA8dGQ+e3tmaWxlLmZpbGVfaWR9fTwvdGQ+PHRkPnt7ZmlsZS5sZW5ndGh9fTwvdGQ+PHRkPnt7ZmlsZS5maWxlbmFtZX19PC90ZD48dGQ+e3tmaWxlLm1kNX19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1zdWNjZXNzIGdseXBoaWNvbiBnbHlwaGljb24tZG93bmxvYWQiIGhyZWY9Ii9ncmlkZnMve3tmaWxlLmNvbGxlY3Rpb25fbmFtZX19L3t7ZmlsZS5maWxlX2lkfX0vIj48L2E+CiAgICAgICAgPC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciBnbHlwaGljb24gZ2x5cGhpY29uLXJlbW92ZSIgbmctY2xpY2s9InJlbW92ZUZpbGUoJGluZGV4KSI+PC9idXR0b24+CiAgICAgICAgPC90ZD4KICAgIDwvdHI+CiAgICA8L3Rib2R5Pgo8L3RhYmxlPgoKPGZvcm0gaWQ9InVwbG9hZEZvcm0iIG1ldGhvZD0nUE9TVCcgZW5jdHlwZT0nbXVsdGlwYXJ0L2Zvcm0tZGF0YScgdGFyZ2V0PSdzdWJtaXQtaWZyYW1lJyBhY3Rpb249Ii9ncmlkZnMvdXNlcmZpbGVzLnByb2R1Y3RzIj4KICAgIDxkaXYgY2xhc3M9ImZpbGUtbGlzdCIgaWQ9ImZpbGVMaXN0Ij4KICAgICAgICA8aW5wdXQgY2xhc3M9ImZpbGUtc2VsZWN0b3IiIG5hbWU9InVwbG9hZGVkZmlsZSIgdHlwZT0iZmlsZSIgb25jaGFuZ2U9ImFuZ3VsYXIuZWxlbWVudCh0aGlzKS5zY29wZSgpLmZpbGVOYW1lQ2hhbmdlZCh0aGlzKSIgLz4KICAgIDwvZGl2PgogICAgPGJ1dHRvbiAgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBnbHlwaGljb24gZ2x5cGhpY29uLWNsb3VkLXVwbG9hZCIgbmctY2xpY2s9InVwbG9hZEZpbGUoKSIgPiBVcGxvYWQgPC9idXR0b24+CjwvZm9ybT4=')
},
{
'name': '/app/partials/list.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+e3t0aXRsZX19PC9oMz4KPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgICAgPHRoPklkPC90aD4KICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9Imxpc3QgaW4gbGlzdHMiPgogICAgICAgIDx0ZD48YSBocmVmPSIjL3t7c2VydmljZU5hbWV9fS97e2xpc3QuX2lkfX0vIj57e2xpc3QuX2lkfX08L2E+PC90ZD4KICAgICAgICA8dGQ+PGEgaHJlZj0iIy97e3NlcnZpY2VOYW1lfX0ve3tsaXN0Ll9pZH19LyI+e3tsaXN0LnRpdGxlfX08L2E+PC90ZD4KICAgIDwvdHI+CiAgICA8L3Rib2R5Pgo8L3RhYmxlPgoKPGRpdiBuZy1yZXBlYXQ9ImxpbmsgaW4gbGlua3MiPgogICAgPGEgY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgaHJlZj0ie3tsaW5rLmhyZWZ9fSI+e3tsaW5rLnRpdGxlfX08L2E+Jm5ic3A7CjwvZGl2Pg==')
},
{
'name': '/app/partials/home.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+T3BlcmF0aW9uczwvaDM+Cjxmb3JtIHJvbGU9ImZvcm0iPgogICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgPGxhYmVsPlNlcnZpY2UgVVJMIChyZWxhdGl2ZSkgKjwvbGFiZWw+CiAgICAgICAgPGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJuYW1lIiB0eXBlPSJ0ZXh0IiBuYW1lPSJuYW1lIiBuZy1tb2RlbD0ic2VydmljZSIgLz4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgPGxhYmVsPkNvbHVtbnMgW0dFVF08L2xhYmVsPgogICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iY29sdW1ucyIgdHlwZT0idGV4dCIgbmFtZT0iY29sdW1ucyIgbmctbW9kZWw9ImNvbHVtbnMiIHBsYWNlaG9sZGVyPSJuYW1lLGFkZHJlc3MiIC8+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgIDxsYWJlbD5GaWx0ZXIgW0dFVF08L2xhYmVsPgogICAgICAgIDxpbnB1dCBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0iZmlsdGVyIiB0eXBlPSJ0ZXh0IiBuYW1lPSJmaWx0ZXIiIG5nLW1vZGVsPSJmaWx0ZXIiIHBsYWNlaG9sZGVyPSd7Im5hbWUiOiJBYnJhaGFtIn0nLz4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgPGxhYmVsPkRhdGEgWyogUE9TVHxQVVRdPC9sYWJlbD4KICAgICAgICA8dGV4dGFyZWEgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImRhdGEiIG5hbWU9ImRhdGEiIG5nLW1vZGVsPSJkYXRhIj48L3RleHRhcmVhPgogICAgPC9kaXY+CgogICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgPGxhYmVsPlJlc3VsdDwvbGFiZWw+CiAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJyZXN1bHQiIG5hbWU9InJlc3VsdCIgbmctbW9kZWw9InJlc3VsdCI+PC90ZXh0YXJlYT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0iZ2V0KCkiPiAgR0VUIDwvYnV0dG9uPgogICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSIgbmctY2xpY2s9InBvc3QoKSI+IFBPU1QgPC9idXR0b24+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1pbmZvIiBuZy1jbGljaz0icHV0KCkiPiAgUFVUIDwvYnV0dG9uPgogICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4tZGFuZ2VyIiBuZy1jbGljaz0iZGVsZXRlKCkiPkRFTEVURTwvYnV0dG9uPgogICAgPC9kaXY+CjwvZm9ybT4=')
},
{
'name': '/app/partials/adduser.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgIDxoMyBjbGFzcz0ibW9kYWwtdGl0bGUiIG5nLXNob3c9IiFpc1VwZGF0aW5nIj5DcmVhdGUgbmV3IHVzZXI8L2gzPgogICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSIgbmctc2hvdz0iaXNVcGRhdGluZyI+VXBkYXRlIHVzZXI8L2gzPgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIj4KICAgICAgICA8ZGl2IG5nLXNob3c9Imhhc2Vycm9yIj5UaGVyZSBpcyBhbiBlcnJvciEhITwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPlVzZXJuYW1lPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnVzZXJuYW1lIiBuZy1yZWFkb25seT0iaXNVcGRhdGluZyI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPlBhc3N3b3JkPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0idXNlci5wYXNzd29yZCIgbmctc2hvdz0iIWlzVXBkYXRpbmciIC8+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkIiAgbmctc2hvdz0iaXNVcGRhdGluZyIKICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iTGVhdmUgYmxhbmsgdG8ga2VlcCBjdXJyZW50IHBhc3N3b3JkIiAvPgoKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTMgY29udHJvbC1sYWJlbCI+UGFzc3dvcmQgYWdhaW48L2xhYmVsPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNSI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkX3JlIiBuZy1zaG93PSIhaXNVcGRhdGluZyI+CiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIG5nLW1vZGVsPSJ1c2VyLnBhc3N3b3JkX3JlIiBuZy1zaG93PSJpc1VwZGF0aW5nIgogICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJMZWF2ZSBibGFuayB0byBrZWVwIGN1cnJlbnQgcGFzc3dvcmQiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0zIGNvbnRyb2wtbGFiZWwiPkVtYWlsPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImVtYWlsIiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0idXNlci5lbWFpbCI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIj5Sb2xlczwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMCI+CiAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLWhvdmVyIj4KICAgICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+TmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD5TSUQ8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+Jm5ic3A7PC90aD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgIDx0ciBuZy1yZXBlYXQ9InJvbGVfc2lkIGluIHVzZXIucm9sZXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNwYW4+e3tnZXRSb2xlTmFtZShyb2xlX3NpZCk7fX08L3NwYW4+PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxzcGFuPnt7cm9sZV9zaWR9fTwvc3Bhbj4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPjxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLWRhbmdlciIgbmctY2xpY2s9InJlbW92ZVJvbGUoJGluZGV4KSI+eDwvYnV0dG9uPiA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNlbGVjdCBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0ic2VsZWN0ZWRfcm9sZSIgbmctb3B0aW9ucz0icm9sZS5zaWQgYXMgcm9sZS5uYW1lIGZvciByb2xlIGluIHJvbGVzIj48L3NlbGVjdD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY29sc3Bhbj0iMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0iYWRkUm9sZShzZWxlY3RlZF9yb2xlKSI+QWRkPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0ib2soKSI+T0s8L2J1dHRvbj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4td2FybmluZyIgbmctY2xpY2s9ImNhbmNlbCgpIj5DYW5jZWw8L2J1dHRvbj4KPC9kaXY+')
},
{
'name': '/app/partials/users.html', 'data': base64.b64decode('PGRpdiBuZy1zaG93PSJoYXNFcnJvciIgY2xhc3M9ImJnLXdhcm5pbmciPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi14cyBidG4tZGFuZ2VyIGdseXBoaWNvbiBnbHlwaGljb24tcmVtb3ZlIHB1bGwtcmlnaHQiIG5nLWNsaWNrPSJjbGVhckVycm9yKCk7Ij48L2J1dHRvbj4KICAgIDxkaXY+PGxhYmVsPkVycm9yIGNvZGU6PC9sYWJlbD48c3BhbiBuZy1iaW5kPSJzdGF0dXMiIC8+PC9kaXY+CiAgICA8ZGl2IG5nLWJpbmQ9InN0YXR1c19kYXRhIj48L2Rpdj4KPC9kaXY+Cgo8aDM+VXNlcnM8L2gzPgoKPHRhYmxlIGNsYXNzPSJ0YWJsZSI+CiAgICA8dGhlYWQ+CiAgICA8dHI+CiAgICAgICAgPHRoPk5hbWU8L3RoPgogICAgICAgIDx0aD5FbWFpbDwvdGg+CiAgICAgICAgPHRoPiZuYnNwOzwvdGg+CiAgICA8L3RyPgogICAgPC90aGVhZD4KICAgIDx0Ym9keT4KICAgIDx0ciBuZy1yZXBlYXQ9InVzZXIgaW4gdXNlcnMiPgogICAgICAgIDx0ZD57e3VzZXIudXNlcm5hbWV9fTwvdGQ+PHRkPnt7dXNlci5lbWFpbH19PC90ZD4KICAgICAgICA8dGQ+CiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4teHMgYnRuLXdhcm5pbmcgZ2x5cGhpY29uIGdseXBoaWNvbi1lZGl0IiBuZy1jbGljaz0iZWRpdFVzZXIoJGluZGV4KTsiPjwvYnV0dG9uPgogICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIgZ2x5cGhpY29uIGdseXBoaWNvbi1yZW1vdmUiIG5nLWNsaWNrPSJyZW1vdmVVc2VyKCRpbmRleCk7Ij48L2J1dHRvbj4KICAgICAgICA8L3RkPgogICAgPC90cj4KICAgIDwvdGJvZHk+CjwvdGFibGU+Cgo8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiIG5nLWNsaWNrPSJhZGRVc2VyKCdsZycpIj5DcmVhdGUgdXNlcjwvYnV0dG9uPgo=')
},
{
'name': '/app/partials/addrole.html', 'data': base64.b64decode('PGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgIDxoMyBjbGFzcz0ibW9kYWwtdGl0bGUiIG5nLXNob3c9IiFpc1VwZGF0aW5nIj5DcmVhdGUgbmV3IHJvbGU8L2gzPgogICAgPGgzIGNsYXNzPSJtb2RhbC10aXRsZSIgbmctc2hvdz0iaXNVcGRhdGluZyI+VXBkYXRlIHJvbGU8L2gzPgo8L2Rpdj4KPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICA8Zm9ybSBjbGFzcz0iZm9ybS1ob3Jpem9udGFsIiByb2xlPSJmb3JtIj4KICAgICAgICA8ZGl2IG5nLXNob3c9Imhhc2Vycm9yIj5UaGVyZSBpcyBhbiBlcnJvciEhITwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbC1zbS0yIGNvbnRyb2wtbGFiZWwiPk5hbWUgKjwvbGFiZWw+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS00Ij4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZS5uYW1lIiBwbGFjZWhvbGRlcj0iUm9sZSBuYW1lIj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29sLXNtLTIgY29udHJvbC1sYWJlbCI+U0lEPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTgiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZS5zaWQiIG5nLXJlYWRvbmx5PSJpc1VwZGF0aW5nIiBwbGFjZWhvbGRlcj0iT3B0aW9uYWwsIHdpbGwgYmUgZ2VuZXJhdGVkIGlmIGxlZnQgZW1wdHkiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb2wtc20tMiBjb250cm9sLWxhYmVsIj5Sb2xlIGl0ZW1zPC9sYWJlbD4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEwIj4KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ob3ZlciI+CiAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgICA8dGg+QWNjZXNzIHR5cGU8L3RoPgogICAgICAgICAgICAgICAgICAgICAgICA8dGggY2xhc3M9ImNvbC14cy0yIj5PYmplY3QgbmFtZTwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz0iY29sLXhzLTIiPlByb3BlcnR5PC90aD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRoPkFjY2VzczwvdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0aD4mbmJzcDs8L3RoPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgICAgIDx0ciBuZy1yZXBlYXQ9InJvbGVfaXRlbSBpbiByb2xlLnJvbGVfaXRlbXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+PHNlbGVjdCBjbGFzcz0iZm9ybS1jb250cm9sIiBuZy1tb2RlbD0icm9sZV9pdGVtLnR5cGUiIG5nLW9wdGlvbnM9ImFjY2Vzc190eXBlLm5hbWUgYXMgYWNjZXNzX3R5cGUuZGlzcGxheSBmb3IgYWNjZXNzX3R5cGUgaW4gYWNjZXNzX3R5cGVzIj48L3NlbGVjdD48L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9ImNvbC14cy0yIj48aW5wdXQgY2xhc3M9ImZvcm0tY29udHJvbCIgdHlwZT0idGV4dCIgbmctbW9kZWw9InJvbGVfaXRlbS5vYmplY3RfbmFtZSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJjb2wteHMtMiI+PGlucHV0IGNsYXNzPSJmb3JtLWNvbnRyb2wiIHR5cGU9InRleHQiIG5nLW1vZGVsPSJyb2xlX2l0ZW0ucHJvcGVydHlfbmFtZSIgLz4gPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLnJlYWQiIC8+IFJlYWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmctbW9kZWw9InJvbGVfaXRlbS5hY2Nlc3NfYml0cy5pbnNlcnQiIC8+IEluc2VydAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLndyaXRlIiAvPiBXcml0ZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBuZy1tb2RlbD0icm9sZV9pdGVtLmFjY2Vzc19iaXRzLmRlbGV0ZSIgLz4gRGVsZXRlCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD48YnV0dG9uIGNsYXNzPSJidG4gYnRuLXhzIGJ0bi1kYW5nZXIiIG5nLWNsaWNrPSJyZW1vdmVSb2xlSXRlbSgkaW5kZXgpIj54PC9idXR0b24+IDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI1Ij48YnV0dG9uIG5nLWNsaWNrPSJhZGRSb2xlSXRlbSgpIj5BZGQ8L2J1dHRvbj4gPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Zvcm0+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiBuZy1jbGljaz0ib2soKSI+T0s8L2J1dHRvbj4KICAgIDxidXR0b24gY2xhc3M9ImJ0biBidG4td2FybmluZyIgbmctY2xpY2s9ImNhbmNlbCgpIj5DYW5jZWw8L2J1dHRvbj4KPC9kaXY+')
},
{
'name': '/test/karma.conf.js', 'data': base64.b64decode('bW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihjb25maWcpewogIGNvbmZpZy5zZXQoewoKICAgIGJhc2VQYXRoIDogJy4uLycsCgogICAgZmlsZXMgOiBbCiAgICAgICdhcHAvYm93ZXJfY29tcG9uZW50cy9hbmd1bGFyL2FuZ3VsYXIuanMnLAogICAgICAnYXBwL2Jvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1yb3V0ZS9hbmd1bGFyLXJvdXRlLmpzJywKICAgICAgJ2FwcC9ib3dlcl9jb21wb25lbnRzL2FuZ3VsYXItbW9ja3MvYW5ndWxhci1tb2Nrcy5qcycsCiAgICAgICdhcHAvanMvKiovKi5qcycsCiAgICAgICd0ZXN0L3VuaXQvKiovKi5qcycKICAgIF0sCgogICAgYXV0b1dhdGNoIDogdHJ1ZSwKCiAgICBmcmFtZXdvcmtzOiBbJ2phc21pbmUnXSwKCiAgICBicm93c2VycyA6IFsnQ2hyb21lJ10sCgogICAgcGx1Z2lucyA6IFsKICAgICAgICAgICAgJ2thcm1hLWNocm9tZS1sYXVuY2hlcicsCiAgICAgICAgICAgICdrYXJtYS1maXJlZm94LWxhdW5jaGVyJywKICAgICAgICAgICAgJ2thcm1hLWphc21pbmUnLAogICAgICAgICAgICAna2FybWEtanVuaXQtcmVwb3J0ZXInCiAgICAgICAgICAgIF0sCgogICAganVuaXRSZXBvcnRlciA6IHsKICAgICAgb3V0cHV0RmlsZTogJ3Rlc3Rfb3V0L3VuaXQueG1sJywKICAgICAgc3VpdGU6ICd1bml0JwogICAgfQoKICB9KTsKfTsK')
},
{
'name': '/test/protractor-conf.js', 'data': base64.b64decode('ZXhwb3J0cy5jb25maWcgPSB7CiAgYWxsU2NyaXB0c1RpbWVvdXQ6IDExMDAwLAoKICBzcGVjczogWwogICAgJ2UyZS8qLmpzJwogIF0sCgogIGNhcGFiaWxpdGllczogewogICAgJ2Jyb3dzZXJOYW1lJzogJ2Nocm9tZScKICB9LAoKICBiYXNlVXJsOiAnaHR0cDovL2xvY2FsaG9zdDo4MDAwL2FwcC8nLAoKICBmcmFtZXdvcms6ICdqYXNtaW5lJywKCiAgamFzbWluZU5vZGVPcHRzOiB7CiAgICBkZWZhdWx0VGltZW91dEludGVydmFsOiAzMDAwMAogIH0KfTsK')
},
{
'name': '/test/unit/servicesSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3Igc2VydmljZXMgZ28gaGVyZSAqLwoKZGVzY3JpYmUoJ3NlcnZpY2UnLCBmdW5jdGlvbigpIHsKICBiZWZvcmVFYWNoKG1vZHVsZSgnbXlBcHAuc2VydmljZXMnKSk7CgoKICBkZXNjcmliZSgndmVyc2lvbicsIGZ1bmN0aW9uKCkgewogICAgaXQoJ3Nob3VsZCByZXR1cm4gY3VycmVudCB2ZXJzaW9uJywgaW5qZWN0KGZ1bmN0aW9uKHZlcnNpb24pIHsKICAgICAgZXhwZWN0KHZlcnNpb24pLnRvRXF1YWwoJzAuMScpOwogICAgfSkpOwogIH0pOwp9KTsK')
},
{
'name': '/test/unit/controllersSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgY29udHJvbGxlcnMgZ28gaGVyZSAqLwoKZGVzY3JpYmUoJ2NvbnRyb2xsZXJzJywgZnVuY3Rpb24oKXsKICBiZWZvcmVFYWNoKG1vZHVsZSgnbXlBcHAuY29udHJvbGxlcnMnKSk7CgoKICBpdCgnc2hvdWxkIC4uLi4nLCBpbmplY3QoZnVuY3Rpb24oJGNvbnRyb2xsZXIpIHsKICAgIC8vc3BlYyBib2R5CiAgICB2YXIgbXlDdHJsMSA9ICRjb250cm9sbGVyKCdNeUN0cmwxJywgeyAkc2NvcGU6IHt9IH0pOwogICAgZXhwZWN0KG15Q3RybDEpLnRvQmVEZWZpbmVkKCk7CiAgfSkpOwoKICBpdCgnc2hvdWxkIC4uLi4nLCBpbmplY3QoZnVuY3Rpb24oJGNvbnRyb2xsZXIpIHsKICAgIC8vc3BlYyBib2R5CiAgICB2YXIgbXlDdHJsMiA9ICRjb250cm9sbGVyKCdNeUN0cmwyJywgeyAkc2NvcGU6IHt9IH0pOwogICAgZXhwZWN0KG15Q3RybDIpLnRvQmVEZWZpbmVkKCk7CiAgfSkpOwp9KTsK')
},
{
'name': '/test/unit/filtersSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgZmlsdGVycyBnbyBoZXJlICovCgpkZXNjcmliZSgnZmlsdGVyJywgZnVuY3Rpb24oKSB7CiAgYmVmb3JlRWFjaChtb2R1bGUoJ215QXBwLmZpbHRlcnMnKSk7CgoKICBkZXNjcmliZSgnaW50ZXJwb2xhdGUnLCBmdW5jdGlvbigpIHsKICAgIGJlZm9yZUVhY2gobW9kdWxlKGZ1bmN0aW9uKCRwcm92aWRlKSB7CiAgICAgICRwcm92aWRlLnZhbHVlKCd2ZXJzaW9uJywgJ1RFU1RfVkVSJyk7CiAgICB9KSk7CgoKICAgIGl0KCdzaG91bGQgcmVwbGFjZSBWRVJTSU9OJywgaW5qZWN0KGZ1bmN0aW9uKGludGVycG9sYXRlRmlsdGVyKSB7CiAgICAgIGV4cGVjdChpbnRlcnBvbGF0ZUZpbHRlcignYmVmb3JlICVWRVJTSU9OJSBhZnRlcicpKS50b0VxdWFsKCdiZWZvcmUgVEVTVF9WRVIgYWZ0ZXInKTsKICAgIH0pKTsKICB9KTsKfSk7Cg==')
},
{
'name': '/test/unit/directivesSpec.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogamFzbWluZSBzcGVjcyBmb3IgZGlyZWN0aXZlcyBnbyBoZXJlICovCgpkZXNjcmliZSgnZGlyZWN0aXZlcycsIGZ1bmN0aW9uKCkgewogIGJlZm9yZUVhY2gobW9kdWxlKCdteUFwcC5kaXJlY3RpdmVzJykpOwoKICBkZXNjcmliZSgnYXBwLXZlcnNpb24nLCBmdW5jdGlvbigpIHsKICAgIGl0KCdzaG91bGQgcHJpbnQgY3VycmVudCB2ZXJzaW9uJywgZnVuY3Rpb24oKSB7CiAgICAgIG1vZHVsZShmdW5jdGlvbigkcHJvdmlkZSkgewogICAgICAgICRwcm92aWRlLnZhbHVlKCd2ZXJzaW9uJywgJ1RFU1RfVkVSJyk7CiAgICAgIH0pOwogICAgICBpbmplY3QoZnVuY3Rpb24oJGNvbXBpbGUsICRyb290U2NvcGUpIHsKICAgICAgICB2YXIgZWxlbWVudCA9ICRjb21waWxlKCc8c3BhbiBhcHAtdmVyc2lvbj48L3NwYW4+JykoJHJvb3RTY29wZSk7CiAgICAgICAgZXhwZWN0KGVsZW1lbnQudGV4dCgpKS50b0VxdWFsKCdURVNUX1ZFUicpOwogICAgICB9KTsKICAgIH0pOwogIH0pOwp9KTsK')
},
{
'name': '/test/e2e/scenarios.js', 'data': base64.b64decode('J3VzZSBzdHJpY3QnOwoKLyogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvcHJvdHJhY3Rvci9ibG9iL21hc3Rlci9kb2NzL2dldHRpbmctc3RhcnRlZC5tZCAqLwoKZGVzY3JpYmUoJ215IGFwcCcsIGZ1bmN0aW9uKCkgewoKICBicm93c2VyLmdldCgnaW5kZXguaHRtbCcpOwoKICBpdCgnc2hvdWxkIGF1dG9tYXRpY2FsbHkgcmVkaXJlY3QgdG8gL3ZpZXcxIHdoZW4gbG9jYXRpb24gaGFzaC9mcmFnbWVudCBpcyBlbXB0eScsIGZ1bmN0aW9uKCkgewogICAgZXhwZWN0KGJyb3dzZXIuZ2V0TG9jYXRpb25BYnNVcmwoKSkudG9NYXRjaCgiL3ZpZXcxIik7CiAgfSk7CgoKICBkZXNjcmliZSgndmlldzEnLCBmdW5jdGlvbigpIHsKCiAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uKCkgewogICAgICBicm93c2VyLmdldCgnaW5kZXguaHRtbCMvdmlldzEnKTsKICAgIH0pOwoKCiAgICBpdCgnc2hvdWxkIHJlbmRlciB2aWV3MSB3aGVuIHVzZXIgbmF2aWdhdGVzIHRvIC92aWV3MScsIGZ1bmN0aW9uKCkgewogICAgICBleHBlY3QoZWxlbWVudC5hbGwoYnkuY3NzKCdbbmctdmlld10gcCcpKS5maXJzdCgpLmdldFRleHQoKSkuCiAgICAgICAgdG9NYXRjaCgvcGFydGlhbCBmb3IgdmlldyAxLyk7CiAgICB9KTsKCiAgfSk7CgoKICBkZXNjcmliZSgndmlldzInLCBmdW5jdGlvbigpIHsKCiAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uKCkgewogICAgICBicm93c2VyLmdldCgnaW5kZXguaHRtbCMvdmlldzInKTsKICAgIH0pOwoKCiAgICBpdCgnc2hvdWxkIHJlbmRlciB2aWV3MiB3aGVuIHVzZXIgbmF2aWdhdGVzIHRvIC92aWV3MicsIGZ1bmN0aW9uKCkgewogICAgICBleHBlY3QoZWxlbWVudC5hbGwoYnkuY3NzKCdbbmctdmlld10gcCcpKS5maXJzdCgpLmdldFRleHQoKSkuCiAgICAgICAgdG9NYXRjaCgvcGFydGlhbCBmb3IgdmlldyAyLyk7CiAgICB9KTsKCiAgfSk7Cn0pOwo=')
}]
